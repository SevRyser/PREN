   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"lpuart0.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.NVIC_EnableIRQ,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	NVIC_EnableIRQ:
  25              	.LFB108:
  26              		.file 1 "../Includes/core_cm4.h"
   1:../Includes/core_cm4.h **** /**************************************************************************//**
   2:../Includes/core_cm4.h ****  * @file     core_cm4.h
   3:../Includes/core_cm4.h ****  * @brief    CMSIS Cortex-M4 Core Peripheral Access Layer Header File
   4:../Includes/core_cm4.h ****  * @version  V4.10
   5:../Includes/core_cm4.h ****  * @date     18. March 2015
   6:../Includes/core_cm4.h ****  *
   7:../Includes/core_cm4.h ****  * @note
   8:../Includes/core_cm4.h ****  *
   9:../Includes/core_cm4.h ****  ******************************************************************************/
  10:../Includes/core_cm4.h **** /* Copyright (c) 2009 - 2015 ARM LIMITED
  11:../Includes/core_cm4.h **** 
  12:../Includes/core_cm4.h ****    All rights reserved.
  13:../Includes/core_cm4.h ****    Redistribution and use in source and binary forms, with or without
  14:../Includes/core_cm4.h ****    modification, are permitted provided that the following conditions are met:
  15:../Includes/core_cm4.h ****    - Redistributions of source code must retain the above copyright
  16:../Includes/core_cm4.h ****      notice, this list of conditions and the following disclaimer.
  17:../Includes/core_cm4.h ****    - Redistributions in binary form must reproduce the above copyright
  18:../Includes/core_cm4.h ****      notice, this list of conditions and the following disclaimer in the
  19:../Includes/core_cm4.h ****      documentation and/or other materials provided with the distribution.
  20:../Includes/core_cm4.h ****    - Neither the name of ARM nor the names of its contributors may be used
  21:../Includes/core_cm4.h ****      to endorse or promote products derived from this software without
  22:../Includes/core_cm4.h ****      specific prior written permission.
  23:../Includes/core_cm4.h ****    *
  24:../Includes/core_cm4.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  25:../Includes/core_cm4.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  26:../Includes/core_cm4.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  27:../Includes/core_cm4.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  28:../Includes/core_cm4.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  29:../Includes/core_cm4.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  30:../Includes/core_cm4.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  31:../Includes/core_cm4.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  32:../Includes/core_cm4.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  33:../Includes/core_cm4.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  34:../Includes/core_cm4.h ****    POSSIBILITY OF SUCH DAMAGE.
  35:../Includes/core_cm4.h ****    ---------------------------------------------------------------------------*/
  36:../Includes/core_cm4.h **** 
  37:../Includes/core_cm4.h **** 
  38:../Includes/core_cm4.h **** #if defined ( __ICCARM__ )
  39:../Includes/core_cm4.h ****  #pragma system_include  /* treat file as system include file for MISRA check */
  40:../Includes/core_cm4.h **** #endif
  41:../Includes/core_cm4.h **** 
  42:../Includes/core_cm4.h **** #ifndef __CORE_CM4_H_GENERIC
  43:../Includes/core_cm4.h **** #define __CORE_CM4_H_GENERIC
  44:../Includes/core_cm4.h **** 
  45:../Includes/core_cm4.h **** #ifdef __cplusplus
  46:../Includes/core_cm4.h ****  extern "C" {
  47:../Includes/core_cm4.h **** #endif
  48:../Includes/core_cm4.h **** 
  49:../Includes/core_cm4.h **** /** \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  50:../Includes/core_cm4.h ****   CMSIS violates the following MISRA-C:2004 rules:
  51:../Includes/core_cm4.h **** 
  52:../Includes/core_cm4.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  53:../Includes/core_cm4.h ****      Function definitions in header files are used to allow 'inlining'.
  54:../Includes/core_cm4.h **** 
  55:../Includes/core_cm4.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  56:../Includes/core_cm4.h ****      Unions are used for effective representation of core registers.
  57:../Includes/core_cm4.h **** 
  58:../Includes/core_cm4.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  59:../Includes/core_cm4.h ****      Function-like macros are used to allow more efficient code.
  60:../Includes/core_cm4.h ****  */
  61:../Includes/core_cm4.h **** 
  62:../Includes/core_cm4.h **** 
  63:../Includes/core_cm4.h **** /*******************************************************************************
  64:../Includes/core_cm4.h ****  *                 CMSIS definitions
  65:../Includes/core_cm4.h ****  ******************************************************************************/
  66:../Includes/core_cm4.h **** /** \ingroup Cortex_M4
  67:../Includes/core_cm4.h ****   @{
  68:../Includes/core_cm4.h ****  */
  69:../Includes/core_cm4.h **** 
  70:../Includes/core_cm4.h **** /*  CMSIS CM4 definitions */
  71:../Includes/core_cm4.h **** #define __CM4_CMSIS_VERSION_MAIN  (0x04)                                   /*!< [31:16] CMSIS HAL m
  72:../Includes/core_cm4.h **** #define __CM4_CMSIS_VERSION_SUB   (0x00)                                   /*!< [15:0]  CMSIS HAL s
  73:../Includes/core_cm4.h **** #define __CM4_CMSIS_VERSION       ((__CM4_CMSIS_VERSION_MAIN << 16) | \
  74:../Includes/core_cm4.h ****                                     __CM4_CMSIS_VERSION_SUB          )     /*!< CMSIS HAL version n
  75:../Includes/core_cm4.h **** 
  76:../Includes/core_cm4.h **** #define __CORTEX_M                (0x04)                                   /*!< Cortex-M Core      
  77:../Includes/core_cm4.h **** 
  78:../Includes/core_cm4.h **** 
  79:../Includes/core_cm4.h **** #if   defined ( __CC_ARM )
  80:../Includes/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
  81:../Includes/core_cm4.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
  82:../Includes/core_cm4.h ****   #define __STATIC_INLINE  static __inline
  83:../Includes/core_cm4.h **** 
  84:../Includes/core_cm4.h **** #elif defined ( __GNUC__ )
  85:../Includes/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for GNU Comp
  86:../Includes/core_cm4.h ****   #define __INLINE         inline                                     /*!< inline keyword for GNU C
  87:../Includes/core_cm4.h ****   #define __STATIC_INLINE  static inline
  88:../Includes/core_cm4.h **** 
  89:../Includes/core_cm4.h **** #elif defined ( __ICCARM__ )
  90:../Includes/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for IAR Comp
  91:../Includes/core_cm4.h ****   #define __INLINE         inline                                     /*!< inline keyword for IAR C
  92:../Includes/core_cm4.h ****   #define __STATIC_INLINE  static inline
  93:../Includes/core_cm4.h **** 
  94:../Includes/core_cm4.h **** #elif defined ( __TMS470__ )
  95:../Includes/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for TI CCS C
  96:../Includes/core_cm4.h ****   #define __STATIC_INLINE  static inline
  97:../Includes/core_cm4.h **** 
  98:../Includes/core_cm4.h **** #elif defined ( __TASKING__ )
  99:../Includes/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for TASKING 
 100:../Includes/core_cm4.h ****   #define __INLINE         inline                                     /*!< inline keyword for TASKI
 101:../Includes/core_cm4.h ****   #define __STATIC_INLINE  static inline
 102:../Includes/core_cm4.h **** 
 103:../Includes/core_cm4.h **** #elif defined ( __CSMC__ )
 104:../Includes/core_cm4.h ****   #define __packed
 105:../Includes/core_cm4.h ****   #define __ASM            _asm                                      /*!< asm keyword for COSMIC Co
 106:../Includes/core_cm4.h ****   #define __INLINE         inline                                    /*use -pc99 on compile line !<
 107:../Includes/core_cm4.h ****   #define __STATIC_INLINE  static inline
 108:../Includes/core_cm4.h **** 
 109:../Includes/core_cm4.h **** #endif
 110:../Includes/core_cm4.h **** 
 111:../Includes/core_cm4.h **** /** __FPU_USED indicates whether an FPU is used or not.
 112:../Includes/core_cm4.h ****     For this, __FPU_PRESENT has to be checked prior to making use of FPU specific registers and fun
 113:../Includes/core_cm4.h **** */
 114:../Includes/core_cm4.h **** #if defined ( __CC_ARM )
 115:../Includes/core_cm4.h ****   #if defined __TARGET_FPU_VFP
 116:../Includes/core_cm4.h ****     #if (__FPU_PRESENT == 1)
 117:../Includes/core_cm4.h ****       #define __FPU_USED       1
 118:../Includes/core_cm4.h ****     #else
 119:../Includes/core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
 120:../Includes/core_cm4.h ****       #define __FPU_USED       0
 121:../Includes/core_cm4.h ****     #endif
 122:../Includes/core_cm4.h ****   #else
 123:../Includes/core_cm4.h ****     #define __FPU_USED         0
 124:../Includes/core_cm4.h ****   #endif
 125:../Includes/core_cm4.h **** 
 126:../Includes/core_cm4.h **** #elif defined ( __GNUC__ )
 127:../Includes/core_cm4.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
 128:../Includes/core_cm4.h ****     #if (__FPU_PRESENT == 1)
 129:../Includes/core_cm4.h ****       #define __FPU_USED       1
 130:../Includes/core_cm4.h ****     #else
 131:../Includes/core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
 132:../Includes/core_cm4.h ****       #define __FPU_USED       0
 133:../Includes/core_cm4.h ****     #endif
 134:../Includes/core_cm4.h ****   #else
 135:../Includes/core_cm4.h ****     #define __FPU_USED         0
 136:../Includes/core_cm4.h ****   #endif
 137:../Includes/core_cm4.h **** 
 138:../Includes/core_cm4.h **** #elif defined ( __ICCARM__ )
 139:../Includes/core_cm4.h ****   #if defined __ARMVFP__
 140:../Includes/core_cm4.h ****     #if (__FPU_PRESENT == 1)
 141:../Includes/core_cm4.h ****       #define __FPU_USED       1
 142:../Includes/core_cm4.h ****     #else
 143:../Includes/core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
 144:../Includes/core_cm4.h ****       #define __FPU_USED       0
 145:../Includes/core_cm4.h ****     #endif
 146:../Includes/core_cm4.h ****   #else
 147:../Includes/core_cm4.h ****     #define __FPU_USED         0
 148:../Includes/core_cm4.h ****   #endif
 149:../Includes/core_cm4.h **** 
 150:../Includes/core_cm4.h **** #elif defined ( __TMS470__ )
 151:../Includes/core_cm4.h ****   #if defined __TI_VFP_SUPPORT__
 152:../Includes/core_cm4.h ****     #if (__FPU_PRESENT == 1)
 153:../Includes/core_cm4.h ****       #define __FPU_USED       1
 154:../Includes/core_cm4.h ****     #else
 155:../Includes/core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
 156:../Includes/core_cm4.h ****       #define __FPU_USED       0
 157:../Includes/core_cm4.h ****     #endif
 158:../Includes/core_cm4.h ****   #else
 159:../Includes/core_cm4.h ****     #define __FPU_USED         0
 160:../Includes/core_cm4.h ****   #endif
 161:../Includes/core_cm4.h **** 
 162:../Includes/core_cm4.h **** #elif defined ( __TASKING__ )
 163:../Includes/core_cm4.h ****   #if defined __FPU_VFP__
 164:../Includes/core_cm4.h ****     #if (__FPU_PRESENT == 1)
 165:../Includes/core_cm4.h ****       #define __FPU_USED       1
 166:../Includes/core_cm4.h ****     #else
 167:../Includes/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 168:../Includes/core_cm4.h ****       #define __FPU_USED       0
 169:../Includes/core_cm4.h ****     #endif
 170:../Includes/core_cm4.h ****   #else
 171:../Includes/core_cm4.h ****     #define __FPU_USED         0
 172:../Includes/core_cm4.h ****   #endif
 173:../Includes/core_cm4.h **** 
 174:../Includes/core_cm4.h **** #elif defined ( __CSMC__ )		/* Cosmic */
 175:../Includes/core_cm4.h ****   #if ( __CSMC__ & 0x400)		// FPU present for parser
 176:../Includes/core_cm4.h ****     #if (__FPU_PRESENT == 1)
 177:../Includes/core_cm4.h ****       #define __FPU_USED       1
 178:../Includes/core_cm4.h ****     #else
 179:../Includes/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 180:../Includes/core_cm4.h ****       #define __FPU_USED       0
 181:../Includes/core_cm4.h ****     #endif
 182:../Includes/core_cm4.h ****   #else
 183:../Includes/core_cm4.h ****     #define __FPU_USED         0
 184:../Includes/core_cm4.h ****   #endif
 185:../Includes/core_cm4.h **** #endif
 186:../Includes/core_cm4.h **** 
 187:../Includes/core_cm4.h **** #include <stdint.h>                      /* standard types definitions                      */
 188:../Includes/core_cm4.h **** #include <core_cmInstr.h>                /* Core Instruction Access                         */
 189:../Includes/core_cm4.h **** #include <core_cmFunc.h>                 /* Core Function Access                            */
 190:../Includes/core_cm4.h **** #include <core_cmSimd.h>                 /* Compiler specific SIMD Intrinsics               */
 191:../Includes/core_cm4.h **** 
 192:../Includes/core_cm4.h **** #ifdef __cplusplus
 193:../Includes/core_cm4.h **** }
 194:../Includes/core_cm4.h **** #endif
 195:../Includes/core_cm4.h **** 
 196:../Includes/core_cm4.h **** #endif /* __CORE_CM4_H_GENERIC */
 197:../Includes/core_cm4.h **** 
 198:../Includes/core_cm4.h **** #ifndef __CMSIS_GENERIC
 199:../Includes/core_cm4.h **** 
 200:../Includes/core_cm4.h **** #ifndef __CORE_CM4_H_DEPENDANT
 201:../Includes/core_cm4.h **** #define __CORE_CM4_H_DEPENDANT
 202:../Includes/core_cm4.h **** 
 203:../Includes/core_cm4.h **** #ifdef __cplusplus
 204:../Includes/core_cm4.h ****  extern "C" {
 205:../Includes/core_cm4.h **** #endif
 206:../Includes/core_cm4.h **** 
 207:../Includes/core_cm4.h **** /* check device defines and use defaults */
 208:../Includes/core_cm4.h **** #if defined __CHECK_DEVICE_DEFINES
 209:../Includes/core_cm4.h ****   #ifndef __CM4_REV
 210:../Includes/core_cm4.h ****     #define __CM4_REV               0x0000
 211:../Includes/core_cm4.h ****     #warning "__CM4_REV not defined in device header file; using default!"
 212:../Includes/core_cm4.h ****   #endif
 213:../Includes/core_cm4.h **** 
 214:../Includes/core_cm4.h ****   #ifndef __FPU_PRESENT
 215:../Includes/core_cm4.h ****     #define __FPU_PRESENT             0
 216:../Includes/core_cm4.h ****     #warning "__FPU_PRESENT not defined in device header file; using default!"
 217:../Includes/core_cm4.h ****   #endif
 218:../Includes/core_cm4.h **** 
 219:../Includes/core_cm4.h ****   #ifndef __MPU_PRESENT
 220:../Includes/core_cm4.h ****     #define __MPU_PRESENT             0
 221:../Includes/core_cm4.h ****     #warning "__MPU_PRESENT not defined in device header file; using default!"
 222:../Includes/core_cm4.h ****   #endif
 223:../Includes/core_cm4.h **** 
 224:../Includes/core_cm4.h ****   #ifndef __NVIC_PRIO_BITS
 225:../Includes/core_cm4.h ****     #define __NVIC_PRIO_BITS          4
 226:../Includes/core_cm4.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 227:../Includes/core_cm4.h ****   #endif
 228:../Includes/core_cm4.h **** 
 229:../Includes/core_cm4.h ****   #ifndef __Vendor_SysTickConfig
 230:../Includes/core_cm4.h ****     #define __Vendor_SysTickConfig    0
 231:../Includes/core_cm4.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 232:../Includes/core_cm4.h ****   #endif
 233:../Includes/core_cm4.h **** #endif
 234:../Includes/core_cm4.h **** 
 235:../Includes/core_cm4.h **** /* IO definitions (access restrictions to peripheral registers) */
 236:../Includes/core_cm4.h **** /**
 237:../Includes/core_cm4.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 238:../Includes/core_cm4.h **** 
 239:../Includes/core_cm4.h ****     <strong>IO Type Qualifiers</strong> are used
 240:../Includes/core_cm4.h ****     \li to specify the access to peripheral variables.
 241:../Includes/core_cm4.h ****     \li for automatic generation of peripheral register debug information.
 242:../Includes/core_cm4.h **** */
 243:../Includes/core_cm4.h **** #ifdef __cplusplus
 244:../Includes/core_cm4.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions                 */
 245:../Includes/core_cm4.h **** #else
 246:../Includes/core_cm4.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions                 */
 247:../Includes/core_cm4.h **** #endif
 248:../Includes/core_cm4.h **** #define     __O     volatile             /*!< Defines 'write only' permissions                */
 249:../Includes/core_cm4.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions              */
 250:../Includes/core_cm4.h **** 
 251:../Includes/core_cm4.h **** /*@} end of group Cortex_M4 */
 252:../Includes/core_cm4.h **** 
 253:../Includes/core_cm4.h **** 
 254:../Includes/core_cm4.h **** 
 255:../Includes/core_cm4.h **** /*******************************************************************************
 256:../Includes/core_cm4.h ****  *                 Register Abstraction
 257:../Includes/core_cm4.h ****   Core Register contain:
 258:../Includes/core_cm4.h ****   - Core Register
 259:../Includes/core_cm4.h ****   - Core NVIC Register
 260:../Includes/core_cm4.h ****   - Core SCB Register
 261:../Includes/core_cm4.h ****   - Core SysTick Register
 262:../Includes/core_cm4.h ****   - Core Debug Register
 263:../Includes/core_cm4.h ****   - Core MPU Register
 264:../Includes/core_cm4.h ****   - Core FPU Register
 265:../Includes/core_cm4.h ****  ******************************************************************************/
 266:../Includes/core_cm4.h **** /** \defgroup CMSIS_core_register Defines and Type Definitions
 267:../Includes/core_cm4.h ****     \brief Type definitions and defines for Cortex-M processor based devices.
 268:../Includes/core_cm4.h **** */
 269:../Includes/core_cm4.h **** 
 270:../Includes/core_cm4.h **** /** \ingroup    CMSIS_core_register
 271:../Includes/core_cm4.h ****     \defgroup   CMSIS_CORE  Status and Control Registers
 272:../Includes/core_cm4.h ****     \brief  Core Register type definitions.
 273:../Includes/core_cm4.h ****   @{
 274:../Includes/core_cm4.h ****  */
 275:../Includes/core_cm4.h **** 
 276:../Includes/core_cm4.h **** /** \brief  Union type to access the Application Program Status Register (APSR).
 277:../Includes/core_cm4.h ****  */
 278:../Includes/core_cm4.h **** typedef union
 279:../Includes/core_cm4.h **** {
 280:../Includes/core_cm4.h ****   struct
 281:../Includes/core_cm4.h ****   {
 282:../Includes/core_cm4.h ****     uint32_t _reserved0:16;              /*!< bit:  0..15  Reserved                           */
 283:../Includes/core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags        */
 284:../Includes/core_cm4.h ****     uint32_t _reserved1:7;               /*!< bit: 20..26  Reserved                           */
 285:../Includes/core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag          */
 286:../Includes/core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag       */
 287:../Includes/core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag          */
 288:../Includes/core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag           */
 289:../Includes/core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag       */
 290:../Includes/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access                  */
 291:../Includes/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access                  */
 292:../Includes/core_cm4.h **** } APSR_Type;
 293:../Includes/core_cm4.h **** 
 294:../Includes/core_cm4.h **** /* APSR Register Definitions */
 295:../Includes/core_cm4.h **** #define APSR_N_Pos                         31                                             /*!< APSR
 296:../Includes/core_cm4.h **** #define APSR_N_Msk                         (1UL << APSR_N_Pos)                            /*!< APSR
 297:../Includes/core_cm4.h **** 
 298:../Includes/core_cm4.h **** #define APSR_Z_Pos                         30                                             /*!< APSR
 299:../Includes/core_cm4.h **** #define APSR_Z_Msk                         (1UL << APSR_Z_Pos)                            /*!< APSR
 300:../Includes/core_cm4.h **** 
 301:../Includes/core_cm4.h **** #define APSR_C_Pos                         29                                             /*!< APSR
 302:../Includes/core_cm4.h **** #define APSR_C_Msk                         (1UL << APSR_C_Pos)                            /*!< APSR
 303:../Includes/core_cm4.h **** 
 304:../Includes/core_cm4.h **** #define APSR_V_Pos                         28                                             /*!< APSR
 305:../Includes/core_cm4.h **** #define APSR_V_Msk                         (1UL << APSR_V_Pos)                            /*!< APSR
 306:../Includes/core_cm4.h **** 
 307:../Includes/core_cm4.h **** #define APSR_Q_Pos                         27                                             /*!< APSR
 308:../Includes/core_cm4.h **** #define APSR_Q_Msk                         (1UL << APSR_Q_Pos)                            /*!< APSR
 309:../Includes/core_cm4.h **** 
 310:../Includes/core_cm4.h **** #define APSR_GE_Pos                        16                                             /*!< APSR
 311:../Includes/core_cm4.h **** #define APSR_GE_Msk                        (0xFUL << APSR_GE_Pos)                         /*!< APSR
 312:../Includes/core_cm4.h **** 
 313:../Includes/core_cm4.h **** 
 314:../Includes/core_cm4.h **** /** \brief  Union type to access the Interrupt Program Status Register (IPSR).
 315:../Includes/core_cm4.h ****  */
 316:../Includes/core_cm4.h **** typedef union
 317:../Includes/core_cm4.h **** {
 318:../Includes/core_cm4.h ****   struct
 319:../Includes/core_cm4.h ****   {
 320:../Includes/core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number                   */
 321:../Includes/core_cm4.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved                           */
 322:../Includes/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access                  */
 323:../Includes/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access                  */
 324:../Includes/core_cm4.h **** } IPSR_Type;
 325:../Includes/core_cm4.h **** 
 326:../Includes/core_cm4.h **** /* IPSR Register Definitions */
 327:../Includes/core_cm4.h **** #define IPSR_ISR_Pos                        0                                             /*!< IPSR
 328:../Includes/core_cm4.h **** #define IPSR_ISR_Msk                       (0x1FFUL /*<< IPSR_ISR_Pos*/)                  /*!< IPSR
 329:../Includes/core_cm4.h **** 
 330:../Includes/core_cm4.h **** 
 331:../Includes/core_cm4.h **** /** \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 332:../Includes/core_cm4.h ****  */
 333:../Includes/core_cm4.h **** typedef union
 334:../Includes/core_cm4.h **** {
 335:../Includes/core_cm4.h ****   struct
 336:../Includes/core_cm4.h ****   {
 337:../Includes/core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number                   */
 338:../Includes/core_cm4.h ****     uint32_t _reserved0:7;               /*!< bit:  9..15  Reserved                           */
 339:../Includes/core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags        */
 340:../Includes/core_cm4.h ****     uint32_t _reserved1:4;               /*!< bit: 20..23  Reserved                           */
 341:../Includes/core_cm4.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit        (read 0)          */
 342:../Includes/core_cm4.h ****     uint32_t IT:2;                       /*!< bit: 25..26  saved IT state   (read 0)          */
 343:../Includes/core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag          */
 344:../Includes/core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag       */
 345:../Includes/core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag          */
 346:../Includes/core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag           */
 347:../Includes/core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag       */
 348:../Includes/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access                  */
 349:../Includes/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access                  */
 350:../Includes/core_cm4.h **** } xPSR_Type;
 351:../Includes/core_cm4.h **** 
 352:../Includes/core_cm4.h **** /* xPSR Register Definitions */
 353:../Includes/core_cm4.h **** #define xPSR_N_Pos                         31                                             /*!< xPSR
 354:../Includes/core_cm4.h **** #define xPSR_N_Msk                         (1UL << xPSR_N_Pos)                            /*!< xPSR
 355:../Includes/core_cm4.h **** 
 356:../Includes/core_cm4.h **** #define xPSR_Z_Pos                         30                                             /*!< xPSR
 357:../Includes/core_cm4.h **** #define xPSR_Z_Msk                         (1UL << xPSR_Z_Pos)                            /*!< xPSR
 358:../Includes/core_cm4.h **** 
 359:../Includes/core_cm4.h **** #define xPSR_C_Pos                         29                                             /*!< xPSR
 360:../Includes/core_cm4.h **** #define xPSR_C_Msk                         (1UL << xPSR_C_Pos)                            /*!< xPSR
 361:../Includes/core_cm4.h **** 
 362:../Includes/core_cm4.h **** #define xPSR_V_Pos                         28                                             /*!< xPSR
 363:../Includes/core_cm4.h **** #define xPSR_V_Msk                         (1UL << xPSR_V_Pos)                            /*!< xPSR
 364:../Includes/core_cm4.h **** 
 365:../Includes/core_cm4.h **** #define xPSR_Q_Pos                         27                                             /*!< xPSR
 366:../Includes/core_cm4.h **** #define xPSR_Q_Msk                         (1UL << xPSR_Q_Pos)                            /*!< xPSR
 367:../Includes/core_cm4.h **** 
 368:../Includes/core_cm4.h **** #define xPSR_IT_Pos                        25                                             /*!< xPSR
 369:../Includes/core_cm4.h **** #define xPSR_IT_Msk                        (3UL << xPSR_IT_Pos)                           /*!< xPSR
 370:../Includes/core_cm4.h **** 
 371:../Includes/core_cm4.h **** #define xPSR_T_Pos                         24                                             /*!< xPSR
 372:../Includes/core_cm4.h **** #define xPSR_T_Msk                         (1UL << xPSR_T_Pos)                            /*!< xPSR
 373:../Includes/core_cm4.h **** 
 374:../Includes/core_cm4.h **** #define xPSR_GE_Pos                        16                                             /*!< xPSR
 375:../Includes/core_cm4.h **** #define xPSR_GE_Msk                        (0xFUL << xPSR_GE_Pos)                         /*!< xPSR
 376:../Includes/core_cm4.h **** 
 377:../Includes/core_cm4.h **** #define xPSR_ISR_Pos                        0                                             /*!< xPSR
 378:../Includes/core_cm4.h **** #define xPSR_ISR_Msk                       (0x1FFUL /*<< xPSR_ISR_Pos*/)                  /*!< xPSR
 379:../Includes/core_cm4.h **** 
 380:../Includes/core_cm4.h **** 
 381:../Includes/core_cm4.h **** /** \brief  Union type to access the Control Registers (CONTROL).
 382:../Includes/core_cm4.h ****  */
 383:../Includes/core_cm4.h **** typedef union
 384:../Includes/core_cm4.h **** {
 385:../Includes/core_cm4.h ****   struct
 386:../Includes/core_cm4.h ****   {
 387:../Includes/core_cm4.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
 388:../Includes/core_cm4.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used                   */
 389:../Includes/core_cm4.h ****     uint32_t FPCA:1;                     /*!< bit:      2  FP extension active flag           */
 390:../Includes/core_cm4.h ****     uint32_t _reserved0:29;              /*!< bit:  3..31  Reserved                           */
 391:../Includes/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access                  */
 392:../Includes/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access                  */
 393:../Includes/core_cm4.h **** } CONTROL_Type;
 394:../Includes/core_cm4.h **** 
 395:../Includes/core_cm4.h **** /* CONTROL Register Definitions */
 396:../Includes/core_cm4.h **** #define CONTROL_FPCA_Pos                    2                                             /*!< CONT
 397:../Includes/core_cm4.h **** #define CONTROL_FPCA_Msk                   (1UL << CONTROL_FPCA_Pos)                      /*!< CONT
 398:../Includes/core_cm4.h **** 
 399:../Includes/core_cm4.h **** #define CONTROL_SPSEL_Pos                   1                                             /*!< CONT
 400:../Includes/core_cm4.h **** #define CONTROL_SPSEL_Msk                  (1UL << CONTROL_SPSEL_Pos)                     /*!< CONT
 401:../Includes/core_cm4.h **** 
 402:../Includes/core_cm4.h **** #define CONTROL_nPRIV_Pos                   0                                             /*!< CONT
 403:../Includes/core_cm4.h **** #define CONTROL_nPRIV_Msk                  (1UL /*<< CONTROL_nPRIV_Pos*/)                 /*!< CONT
 404:../Includes/core_cm4.h **** 
 405:../Includes/core_cm4.h **** /*@} end of group CMSIS_CORE */
 406:../Includes/core_cm4.h **** 
 407:../Includes/core_cm4.h **** 
 408:../Includes/core_cm4.h **** /** \ingroup    CMSIS_core_register
 409:../Includes/core_cm4.h ****     \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 410:../Includes/core_cm4.h ****     \brief      Type definitions for the NVIC Registers
 411:../Includes/core_cm4.h ****   @{
 412:../Includes/core_cm4.h ****  */
 413:../Includes/core_cm4.h **** 
 414:../Includes/core_cm4.h **** /** \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 415:../Includes/core_cm4.h ****  */
 416:../Includes/core_cm4.h **** typedef struct
 417:../Includes/core_cm4.h **** {
 418:../Includes/core_cm4.h ****   __IO uint32_t ISER[8];                 /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register   
 419:../Includes/core_cm4.h ****        uint32_t RESERVED0[24];
 420:../Includes/core_cm4.h ****   __IO uint32_t ICER[8];                 /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 421:../Includes/core_cm4.h ****        uint32_t RSERVED1[24];
 422:../Includes/core_cm4.h ****   __IO uint32_t ISPR[8];                 /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register  
 423:../Includes/core_cm4.h ****        uint32_t RESERVED2[24];
 424:../Includes/core_cm4.h ****   __IO uint32_t ICPR[8];                 /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 425:../Includes/core_cm4.h ****        uint32_t RESERVED3[24];
 426:../Includes/core_cm4.h ****   __IO uint32_t IABR[8];                 /*!< Offset: 0x200 (R/W)  Interrupt Active bit Register   
 427:../Includes/core_cm4.h ****        uint32_t RESERVED4[56];
 428:../Includes/core_cm4.h ****   __IO uint8_t  IP[240];                 /*!< Offset: 0x300 (R/W)  Interrupt Priority Register (8Bi
 429:../Includes/core_cm4.h ****        uint32_t RESERVED5[644];
 430:../Includes/core_cm4.h ****   __O  uint32_t STIR;                    /*!< Offset: 0xE00 ( /W)  Software Trigger Interrupt Regis
 431:../Includes/core_cm4.h **** }  NVIC_Type;
 432:../Includes/core_cm4.h **** 
 433:../Includes/core_cm4.h **** /* Software Triggered Interrupt Register Definitions */
 434:../Includes/core_cm4.h **** #define NVIC_STIR_INTID_Pos                 0                                          /*!< STIR: I
 435:../Includes/core_cm4.h **** #define NVIC_STIR_INTID_Msk                (0x1FFUL /*<< NVIC_STIR_INTID_Pos*/)        /*!< STIR: I
 436:../Includes/core_cm4.h **** 
 437:../Includes/core_cm4.h **** /*@} end of group CMSIS_NVIC */
 438:../Includes/core_cm4.h **** 
 439:../Includes/core_cm4.h **** 
 440:../Includes/core_cm4.h **** /** \ingroup  CMSIS_core_register
 441:../Includes/core_cm4.h ****     \defgroup CMSIS_SCB     System Control Block (SCB)
 442:../Includes/core_cm4.h ****     \brief      Type definitions for the System Control Block Registers
 443:../Includes/core_cm4.h ****   @{
 444:../Includes/core_cm4.h ****  */
 445:../Includes/core_cm4.h **** 
 446:../Includes/core_cm4.h **** /** \brief  Structure type to access the System Control Block (SCB).
 447:../Includes/core_cm4.h ****  */
 448:../Includes/core_cm4.h **** typedef struct
 449:../Includes/core_cm4.h **** {
 450:../Includes/core_cm4.h ****   __I  uint32_t CPUID;                   /*!< Offset: 0x000 (R/ )  CPUID Base Register             
 451:../Includes/core_cm4.h ****   __IO uint32_t ICSR;                    /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 452:../Includes/core_cm4.h ****   __IO uint32_t VTOR;                    /*!< Offset: 0x008 (R/W)  Vector Table Offset Register    
 453:../Includes/core_cm4.h ****   __IO uint32_t AIRCR;                   /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 454:../Includes/core_cm4.h ****   __IO uint32_t SCR;                     /*!< Offset: 0x010 (R/W)  System Control Register         
 455:../Includes/core_cm4.h ****   __IO uint32_t CCR;                     /*!< Offset: 0x014 (R/W)  Configuration Control Register  
 456:../Includes/core_cm4.h ****   __IO uint8_t  SHP[12];                 /*!< Offset: 0x018 (R/W)  System Handlers Priority Registe
 457:../Includes/core_cm4.h ****   __IO uint32_t SHCSR;                   /*!< Offset: 0x024 (R/W)  System Handler Control and State
 458:../Includes/core_cm4.h ****   __IO uint32_t CFSR;                    /*!< Offset: 0x028 (R/W)  Configurable Fault Status Regist
 459:../Includes/core_cm4.h ****   __IO uint32_t HFSR;                    /*!< Offset: 0x02C (R/W)  HardFault Status Register       
 460:../Includes/core_cm4.h ****   __IO uint32_t DFSR;                    /*!< Offset: 0x030 (R/W)  Debug Fault Status Register     
 461:../Includes/core_cm4.h ****   __IO uint32_t MMFAR;                   /*!< Offset: 0x034 (R/W)  MemManage Fault Address Register
 462:../Includes/core_cm4.h ****   __IO uint32_t BFAR;                    /*!< Offset: 0x038 (R/W)  BusFault Address Register       
 463:../Includes/core_cm4.h ****   __IO uint32_t AFSR;                    /*!< Offset: 0x03C (R/W)  Auxiliary Fault Status Register 
 464:../Includes/core_cm4.h ****   __I  uint32_t PFR[2];                  /*!< Offset: 0x040 (R/ )  Processor Feature Register      
 465:../Includes/core_cm4.h ****   __I  uint32_t DFR;                     /*!< Offset: 0x048 (R/ )  Debug Feature Register          
 466:../Includes/core_cm4.h ****   __I  uint32_t ADR;                     /*!< Offset: 0x04C (R/ )  Auxiliary Feature Register      
 467:../Includes/core_cm4.h ****   __I  uint32_t MMFR[4];                 /*!< Offset: 0x050 (R/ )  Memory Model Feature Register   
 468:../Includes/core_cm4.h ****   __I  uint32_t ISAR[5];                 /*!< Offset: 0x060 (R/ )  Instruction Set Attributes Regis
 469:../Includes/core_cm4.h ****        uint32_t RESERVED0[5];
 470:../Includes/core_cm4.h ****   __IO uint32_t CPACR;                   /*!< Offset: 0x088 (R/W)  Coprocessor Access Control Regis
 471:../Includes/core_cm4.h **** } SCB_Type;
 472:../Includes/core_cm4.h **** 
 473:../Includes/core_cm4.h **** /* SCB CPUID Register Definitions */
 474:../Includes/core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24                                             /*!< SCB 
 475:../Includes/core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 476:../Includes/core_cm4.h **** 
 477:../Includes/core_cm4.h **** #define SCB_CPUID_VARIANT_Pos              20                                             /*!< SCB 
 478:../Includes/core_cm4.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 479:../Includes/core_cm4.h **** 
 480:../Includes/core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16                                             /*!< SCB 
 481:../Includes/core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 482:../Includes/core_cm4.h **** 
 483:../Includes/core_cm4.h **** #define SCB_CPUID_PARTNO_Pos                4                                             /*!< SCB 
 484:../Includes/core_cm4.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 485:../Includes/core_cm4.h **** 
 486:../Includes/core_cm4.h **** #define SCB_CPUID_REVISION_Pos              0                                             /*!< SCB 
 487:../Includes/core_cm4.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL /*<< SCB_CPUID_REVISION_Pos*/)          /*!< SCB 
 488:../Includes/core_cm4.h **** 
 489:../Includes/core_cm4.h **** /* SCB Interrupt Control State Register Definitions */
 490:../Includes/core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Pos            31                                             /*!< SCB 
 491:../Includes/core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 492:../Includes/core_cm4.h **** 
 493:../Includes/core_cm4.h **** #define SCB_ICSR_PENDSVSET_Pos             28                                             /*!< SCB 
 494:../Includes/core_cm4.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 495:../Includes/core_cm4.h **** 
 496:../Includes/core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Pos             27                                             /*!< SCB 
 497:../Includes/core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 498:../Includes/core_cm4.h **** 
 499:../Includes/core_cm4.h **** #define SCB_ICSR_PENDSTSET_Pos             26                                             /*!< SCB 
 500:../Includes/core_cm4.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 501:../Includes/core_cm4.h **** 
 502:../Includes/core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Pos             25                                             /*!< SCB 
 503:../Includes/core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 504:../Includes/core_cm4.h **** 
 505:../Includes/core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23                                             /*!< SCB 
 506:../Includes/core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 507:../Includes/core_cm4.h **** 
 508:../Includes/core_cm4.h **** #define SCB_ICSR_ISRPENDING_Pos            22                                             /*!< SCB 
 509:../Includes/core_cm4.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 510:../Includes/core_cm4.h **** 
 511:../Includes/core_cm4.h **** #define SCB_ICSR_VECTPENDING_Pos           12                                             /*!< SCB 
 512:../Includes/core_cm4.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 513:../Includes/core_cm4.h **** 
 514:../Includes/core_cm4.h **** #define SCB_ICSR_RETTOBASE_Pos             11                                             /*!< SCB 
 515:../Includes/core_cm4.h **** #define SCB_ICSR_RETTOBASE_Msk             (1UL << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 516:../Includes/core_cm4.h **** 
 517:../Includes/core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Pos             0                                             /*!< SCB 
 518:../Includes/core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/)       /*!< SCB 
 519:../Includes/core_cm4.h **** 
 520:../Includes/core_cm4.h **** /* SCB Vector Table Offset Register Definitions */
 521:../Includes/core_cm4.h **** #define SCB_VTOR_TBLOFF_Pos                 7                                             /*!< SCB 
 522:../Includes/core_cm4.h **** #define SCB_VTOR_TBLOFF_Msk                (0x1FFFFFFUL << SCB_VTOR_TBLOFF_Pos)           /*!< SCB 
 523:../Includes/core_cm4.h **** 
 524:../Includes/core_cm4.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 525:../Includes/core_cm4.h **** #define SCB_AIRCR_VECTKEY_Pos              16                                             /*!< SCB 
 526:../Includes/core_cm4.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 527:../Includes/core_cm4.h **** 
 528:../Includes/core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16                                             /*!< SCB 
 529:../Includes/core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 530:../Includes/core_cm4.h **** 
 531:../Includes/core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Pos            15                                             /*!< SCB 
 532:../Includes/core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 533:../Includes/core_cm4.h **** 
 534:../Includes/core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Pos              8                                             /*!< SCB 
 535:../Includes/core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7UL << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 536:../Includes/core_cm4.h **** 
 537:../Includes/core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2                                             /*!< SCB 
 538:../Includes/core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 539:../Includes/core_cm4.h **** 
 540:../Includes/core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1                                             /*!< SCB 
 541:../Includes/core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 542:../Includes/core_cm4.h **** 
 543:../Includes/core_cm4.h **** #define SCB_AIRCR_VECTRESET_Pos             0                                             /*!< SCB 
 544:../Includes/core_cm4.h **** #define SCB_AIRCR_VECTRESET_Msk            (1UL /*<< SCB_AIRCR_VECTRESET_Pos*/)           /*!< SCB 
 545:../Includes/core_cm4.h **** 
 546:../Includes/core_cm4.h **** /* SCB System Control Register Definitions */
 547:../Includes/core_cm4.h **** #define SCB_SCR_SEVONPEND_Pos               4                                             /*!< SCB 
 548:../Includes/core_cm4.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 549:../Includes/core_cm4.h **** 
 550:../Includes/core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Pos               2                                             /*!< SCB 
 551:../Includes/core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 552:../Includes/core_cm4.h **** 
 553:../Includes/core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1                                             /*!< SCB 
 554:../Includes/core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 555:../Includes/core_cm4.h **** 
 556:../Includes/core_cm4.h **** /* SCB Configuration Control Register Definitions */
 557:../Includes/core_cm4.h **** #define SCB_CCR_STKALIGN_Pos                9                                             /*!< SCB 
 558:../Includes/core_cm4.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 559:../Includes/core_cm4.h **** 
 560:../Includes/core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Pos               8                                             /*!< SCB 
 561:../Includes/core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1UL << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 562:../Includes/core_cm4.h **** 
 563:../Includes/core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Pos               4                                             /*!< SCB 
 564:../Includes/core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1UL << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 565:../Includes/core_cm4.h **** 
 566:../Includes/core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3                                             /*!< SCB 
 567:../Includes/core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 568:../Includes/core_cm4.h **** 
 569:../Includes/core_cm4.h **** #define SCB_CCR_USERSETMPEND_Pos            1                                             /*!< SCB 
 570:../Includes/core_cm4.h **** #define SCB_CCR_USERSETMPEND_Msk           (1UL << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 571:../Includes/core_cm4.h **** 
 572:../Includes/core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0                                             /*!< SCB 
 573:../Includes/core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1UL /*<< SCB_CCR_NONBASETHRDENA_Pos*/)        /*!< SCB 
 574:../Includes/core_cm4.h **** 
 575:../Includes/core_cm4.h **** /* SCB System Handler Control and State Register Definitions */
 576:../Includes/core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18                                             /*!< SCB 
 577:../Includes/core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1UL << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 578:../Includes/core_cm4.h **** 
 579:../Includes/core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17                                             /*!< SCB 
 580:../Includes/core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1UL << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 581:../Includes/core_cm4.h **** 
 582:../Includes/core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16                                             /*!< SCB 
 583:../Includes/core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1UL << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 584:../Includes/core_cm4.h **** 
 585:../Includes/core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15                                             /*!< SCB 
 586:../Includes/core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 587:../Includes/core_cm4.h **** 
 588:../Includes/core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14                                             /*!< SCB 
 589:../Includes/core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1UL << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 590:../Includes/core_cm4.h **** 
 591:../Includes/core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13                                             /*!< SCB 
 592:../Includes/core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1UL << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 593:../Includes/core_cm4.h **** 
 594:../Includes/core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12                                             /*!< SCB 
 595:../Includes/core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1UL << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 596:../Includes/core_cm4.h **** 
 597:../Includes/core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11                                             /*!< SCB 
 598:../Includes/core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1UL << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 599:../Includes/core_cm4.h **** 
 600:../Includes/core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Pos            10                                             /*!< SCB 
 601:../Includes/core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1UL << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 602:../Includes/core_cm4.h **** 
 603:../Includes/core_cm4.h **** #define SCB_SHCSR_MONITORACT_Pos            8                                             /*!< SCB 
 604:../Includes/core_cm4.h **** #define SCB_SHCSR_MONITORACT_Msk           (1UL << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 605:../Includes/core_cm4.h **** 
 606:../Includes/core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Pos             7                                             /*!< SCB 
 607:../Includes/core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1UL << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 608:../Includes/core_cm4.h **** 
 609:../Includes/core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3                                             /*!< SCB 
 610:../Includes/core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1UL << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 611:../Includes/core_cm4.h **** 
 612:../Includes/core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1                                             /*!< SCB 
 613:../Includes/core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1UL << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 614:../Includes/core_cm4.h **** 
 615:../Includes/core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0                                             /*!< SCB 
 616:../Includes/core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1UL /*<< SCB_SHCSR_MEMFAULTACT_Pos*/)         /*!< SCB 
 617:../Includes/core_cm4.h **** 
 618:../Includes/core_cm4.h **** /* SCB Configurable Fault Status Registers Definitions */
 619:../Includes/core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Pos            16                                             /*!< SCB 
 620:../Includes/core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFUL << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 621:../Includes/core_cm4.h **** 
 622:../Includes/core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8                                             /*!< SCB 
 623:../Includes/core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFUL << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 624:../Includes/core_cm4.h **** 
 625:../Includes/core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0                                             /*!< SCB 
 626:../Includes/core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFUL /*<< SCB_CFSR_MEMFAULTSR_Pos*/)        /*!< SCB 
 627:../Includes/core_cm4.h **** 
 628:../Includes/core_cm4.h **** /* SCB Hard Fault Status Registers Definitions */
 629:../Includes/core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Pos              31                                             /*!< SCB 
 630:../Includes/core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1UL << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 631:../Includes/core_cm4.h **** 
 632:../Includes/core_cm4.h **** #define SCB_HFSR_FORCED_Pos                30                                             /*!< SCB 
 633:../Includes/core_cm4.h **** #define SCB_HFSR_FORCED_Msk                (1UL << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 634:../Includes/core_cm4.h **** 
 635:../Includes/core_cm4.h **** #define SCB_HFSR_VECTTBL_Pos                1                                             /*!< SCB 
 636:../Includes/core_cm4.h **** #define SCB_HFSR_VECTTBL_Msk               (1UL << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 637:../Includes/core_cm4.h **** 
 638:../Includes/core_cm4.h **** /* SCB Debug Fault Status Register Definitions */
 639:../Includes/core_cm4.h **** #define SCB_DFSR_EXTERNAL_Pos               4                                             /*!< SCB 
 640:../Includes/core_cm4.h **** #define SCB_DFSR_EXTERNAL_Msk              (1UL << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 641:../Includes/core_cm4.h **** 
 642:../Includes/core_cm4.h **** #define SCB_DFSR_VCATCH_Pos                 3                                             /*!< SCB 
 643:../Includes/core_cm4.h **** #define SCB_DFSR_VCATCH_Msk                (1UL << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 644:../Includes/core_cm4.h **** 
 645:../Includes/core_cm4.h **** #define SCB_DFSR_DWTTRAP_Pos                2                                             /*!< SCB 
 646:../Includes/core_cm4.h **** #define SCB_DFSR_DWTTRAP_Msk               (1UL << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 647:../Includes/core_cm4.h **** 
 648:../Includes/core_cm4.h **** #define SCB_DFSR_BKPT_Pos                   1                                             /*!< SCB 
 649:../Includes/core_cm4.h **** #define SCB_DFSR_BKPT_Msk                  (1UL << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 650:../Includes/core_cm4.h **** 
 651:../Includes/core_cm4.h **** #define SCB_DFSR_HALTED_Pos                 0                                             /*!< SCB 
 652:../Includes/core_cm4.h **** #define SCB_DFSR_HALTED_Msk                (1UL /*<< SCB_DFSR_HALTED_Pos*/)               /*!< SCB 
 653:../Includes/core_cm4.h **** 
 654:../Includes/core_cm4.h **** /*@} end of group CMSIS_SCB */
 655:../Includes/core_cm4.h **** 
 656:../Includes/core_cm4.h **** 
 657:../Includes/core_cm4.h **** /** \ingroup  CMSIS_core_register
 658:../Includes/core_cm4.h ****     \defgroup CMSIS_SCnSCB System Controls not in SCB (SCnSCB)
 659:../Includes/core_cm4.h ****     \brief      Type definitions for the System Control and ID Register not in the SCB
 660:../Includes/core_cm4.h ****   @{
 661:../Includes/core_cm4.h ****  */
 662:../Includes/core_cm4.h **** 
 663:../Includes/core_cm4.h **** /** \brief  Structure type to access the System Control and ID Register not in the SCB.
 664:../Includes/core_cm4.h ****  */
 665:../Includes/core_cm4.h **** typedef struct
 666:../Includes/core_cm4.h **** {
 667:../Includes/core_cm4.h ****        uint32_t RESERVED0[1];
 668:../Includes/core_cm4.h ****   __I  uint32_t ICTR;                    /*!< Offset: 0x004 (R/ )  Interrupt Controller Type Regist
 669:../Includes/core_cm4.h ****   __IO uint32_t ACTLR;                   /*!< Offset: 0x008 (R/W)  Auxiliary Control Register      
 670:../Includes/core_cm4.h **** } SCnSCB_Type;
 671:../Includes/core_cm4.h **** 
 672:../Includes/core_cm4.h **** /* Interrupt Controller Type Register Definitions */
 673:../Includes/core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Pos         0                                          /*!< ICTR: I
 674:../Includes/core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Msk        (0xFUL /*<< SCnSCB_ICTR_INTLINESNUM_Pos*/)  /*!< ICTR: I
 675:../Includes/core_cm4.h **** 
 676:../Includes/core_cm4.h **** /* Auxiliary Control Register Definitions */
 677:../Includes/core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Pos            9                                          /*!< ACTLR: 
 678:../Includes/core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Msk           (1UL << SCnSCB_ACTLR_DISOOFP_Pos)           /*!< ACTLR: 
 679:../Includes/core_cm4.h **** 
 680:../Includes/core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Pos            8                                          /*!< ACTLR: 
 681:../Includes/core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Msk           (1UL << SCnSCB_ACTLR_DISFPCA_Pos)           /*!< ACTLR: 
 682:../Includes/core_cm4.h **** 
 683:../Includes/core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Pos            2                                          /*!< ACTLR: 
 684:../Includes/core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Msk           (1UL << SCnSCB_ACTLR_DISFOLD_Pos)           /*!< ACTLR: 
 685:../Includes/core_cm4.h **** 
 686:../Includes/core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Pos         1                                          /*!< ACTLR: 
 687:../Includes/core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Msk        (1UL << SCnSCB_ACTLR_DISDEFWBUF_Pos)        /*!< ACTLR: 
 688:../Includes/core_cm4.h **** 
 689:../Includes/core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Pos         0                                          /*!< ACTLR: 
 690:../Includes/core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Msk        (1UL /*<< SCnSCB_ACTLR_DISMCYCINT_Pos*/)    /*!< ACTLR: 
 691:../Includes/core_cm4.h **** 
 692:../Includes/core_cm4.h **** /*@} end of group CMSIS_SCnotSCB */
 693:../Includes/core_cm4.h **** 
 694:../Includes/core_cm4.h **** 
 695:../Includes/core_cm4.h **** /** \ingroup  CMSIS_core_register
 696:../Includes/core_cm4.h ****     \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 697:../Includes/core_cm4.h ****     \brief      Type definitions for the System Timer Registers.
 698:../Includes/core_cm4.h ****   @{
 699:../Includes/core_cm4.h ****  */
 700:../Includes/core_cm4.h **** 
 701:../Includes/core_cm4.h **** /** \brief  Structure type to access the System Timer (SysTick).
 702:../Includes/core_cm4.h ****  */
 703:../Includes/core_cm4.h **** typedef struct
 704:../Includes/core_cm4.h **** {
 705:../Includes/core_cm4.h ****   __IO uint32_t CTRL;                    /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 706:../Includes/core_cm4.h ****   __IO uint32_t LOAD;                    /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register   
 707:../Includes/core_cm4.h ****   __IO uint32_t VAL;                     /*!< Offset: 0x008 (R/W)  SysTick Current Value Register  
 708:../Includes/core_cm4.h ****   __I  uint32_t CALIB;                   /*!< Offset: 0x00C (R/ )  SysTick Calibration Register    
 709:../Includes/core_cm4.h **** } SysTick_Type;
 710:../Includes/core_cm4.h **** 
 711:../Includes/core_cm4.h **** /* SysTick Control / Status Register Definitions */
 712:../Includes/core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16                                             /*!< SysT
 713:../Includes/core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 714:../Includes/core_cm4.h **** 
 715:../Includes/core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2                                             /*!< SysT
 716:../Includes/core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 717:../Includes/core_cm4.h **** 
 718:../Includes/core_cm4.h **** #define SysTick_CTRL_TICKINT_Pos            1                                             /*!< SysT
 719:../Includes/core_cm4.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 720:../Includes/core_cm4.h **** 
 721:../Includes/core_cm4.h **** #define SysTick_CTRL_ENABLE_Pos             0                                             /*!< SysT
 722:../Includes/core_cm4.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL /*<< SysTick_CTRL_ENABLE_Pos*/)           /*!< SysT
 723:../Includes/core_cm4.h **** 
 724:../Includes/core_cm4.h **** /* SysTick Reload Register Definitions */
 725:../Includes/core_cm4.h **** #define SysTick_LOAD_RELOAD_Pos             0                                             /*!< SysT
 726:../Includes/core_cm4.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/)    /*!< SysT
 727:../Includes/core_cm4.h **** 
 728:../Includes/core_cm4.h **** /* SysTick Current Register Definitions */
 729:../Includes/core_cm4.h **** #define SysTick_VAL_CURRENT_Pos             0                                             /*!< SysT
 730:../Includes/core_cm4.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/)    /*!< SysT
 731:../Includes/core_cm4.h **** 
 732:../Includes/core_cm4.h **** /* SysTick Calibration Register Definitions */
 733:../Includes/core_cm4.h **** #define SysTick_CALIB_NOREF_Pos            31                                             /*!< SysT
 734:../Includes/core_cm4.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 735:../Includes/core_cm4.h **** 
 736:../Includes/core_cm4.h **** #define SysTick_CALIB_SKEW_Pos             30                                             /*!< SysT
 737:../Includes/core_cm4.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 738:../Includes/core_cm4.h **** 
 739:../Includes/core_cm4.h **** #define SysTick_CALIB_TENMS_Pos             0                                             /*!< SysT
 740:../Includes/core_cm4.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/)    /*!< SysT
 741:../Includes/core_cm4.h **** 
 742:../Includes/core_cm4.h **** /*@} end of group CMSIS_SysTick */
 743:../Includes/core_cm4.h **** 
 744:../Includes/core_cm4.h **** 
 745:../Includes/core_cm4.h **** /** \ingroup  CMSIS_core_register
 746:../Includes/core_cm4.h ****     \defgroup CMSIS_ITM     Instrumentation Trace Macrocell (ITM)
 747:../Includes/core_cm4.h ****     \brief      Type definitions for the Instrumentation Trace Macrocell (ITM)
 748:../Includes/core_cm4.h ****   @{
 749:../Includes/core_cm4.h ****  */
 750:../Includes/core_cm4.h **** 
 751:../Includes/core_cm4.h **** /** \brief  Structure type to access the Instrumentation Trace Macrocell Register (ITM).
 752:../Includes/core_cm4.h ****  */
 753:../Includes/core_cm4.h **** typedef struct
 754:../Includes/core_cm4.h **** {
 755:../Includes/core_cm4.h ****   __O  union
 756:../Includes/core_cm4.h ****   {
 757:../Includes/core_cm4.h ****     __O  uint8_t    u8;                  /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 8-bit         
 758:../Includes/core_cm4.h ****     __O  uint16_t   u16;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 16-bit        
 759:../Includes/core_cm4.h ****     __O  uint32_t   u32;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 32-bit        
 760:../Includes/core_cm4.h ****   }  PORT [32];                          /*!< Offset: 0x000 ( /W)  ITM Stimulus Port Registers     
 761:../Includes/core_cm4.h ****        uint32_t RESERVED0[864];
 762:../Includes/core_cm4.h ****   __IO uint32_t TER;                     /*!< Offset: 0xE00 (R/W)  ITM Trace Enable Register       
 763:../Includes/core_cm4.h ****        uint32_t RESERVED1[15];
 764:../Includes/core_cm4.h ****   __IO uint32_t TPR;                     /*!< Offset: 0xE40 (R/W)  ITM Trace Privilege Register    
 765:../Includes/core_cm4.h ****        uint32_t RESERVED2[15];
 766:../Includes/core_cm4.h ****   __IO uint32_t TCR;                     /*!< Offset: 0xE80 (R/W)  ITM Trace Control Register      
 767:../Includes/core_cm4.h ****        uint32_t RESERVED3[29];
 768:../Includes/core_cm4.h ****   __O  uint32_t IWR;                     /*!< Offset: 0xEF8 ( /W)  ITM Integration Write Register  
 769:../Includes/core_cm4.h ****   __I  uint32_t IRR;                     /*!< Offset: 0xEFC (R/ )  ITM Integration Read Register   
 770:../Includes/core_cm4.h ****   __IO uint32_t IMCR;                    /*!< Offset: 0xF00 (R/W)  ITM Integration Mode Control Reg
 771:../Includes/core_cm4.h ****        uint32_t RESERVED4[43];
 772:../Includes/core_cm4.h ****   __O  uint32_t LAR;                     /*!< Offset: 0xFB0 ( /W)  ITM Lock Access Register        
 773:../Includes/core_cm4.h ****   __I  uint32_t LSR;                     /*!< Offset: 0xFB4 (R/ )  ITM Lock Status Register        
 774:../Includes/core_cm4.h ****        uint32_t RESERVED5[6];
 775:../Includes/core_cm4.h ****   __I  uint32_t PID4;                    /*!< Offset: 0xFD0 (R/ )  ITM Peripheral Identification Re
 776:../Includes/core_cm4.h ****   __I  uint32_t PID5;                    /*!< Offset: 0xFD4 (R/ )  ITM Peripheral Identification Re
 777:../Includes/core_cm4.h ****   __I  uint32_t PID6;                    /*!< Offset: 0xFD8 (R/ )  ITM Peripheral Identification Re
 778:../Includes/core_cm4.h ****   __I  uint32_t PID7;                    /*!< Offset: 0xFDC (R/ )  ITM Peripheral Identification Re
 779:../Includes/core_cm4.h ****   __I  uint32_t PID0;                    /*!< Offset: 0xFE0 (R/ )  ITM Peripheral Identification Re
 780:../Includes/core_cm4.h ****   __I  uint32_t PID1;                    /*!< Offset: 0xFE4 (R/ )  ITM Peripheral Identification Re
 781:../Includes/core_cm4.h ****   __I  uint32_t PID2;                    /*!< Offset: 0xFE8 (R/ )  ITM Peripheral Identification Re
 782:../Includes/core_cm4.h ****   __I  uint32_t PID3;                    /*!< Offset: 0xFEC (R/ )  ITM Peripheral Identification Re
 783:../Includes/core_cm4.h ****   __I  uint32_t CID0;                    /*!< Offset: 0xFF0 (R/ )  ITM Component  Identification Re
 784:../Includes/core_cm4.h ****   __I  uint32_t CID1;                    /*!< Offset: 0xFF4 (R/ )  ITM Component  Identification Re
 785:../Includes/core_cm4.h ****   __I  uint32_t CID2;                    /*!< Offset: 0xFF8 (R/ )  ITM Component  Identification Re
 786:../Includes/core_cm4.h ****   __I  uint32_t CID3;                    /*!< Offset: 0xFFC (R/ )  ITM Component  Identification Re
 787:../Includes/core_cm4.h **** } ITM_Type;
 788:../Includes/core_cm4.h **** 
 789:../Includes/core_cm4.h **** /* ITM Trace Privilege Register Definitions */
 790:../Includes/core_cm4.h **** #define ITM_TPR_PRIVMASK_Pos                0                                             /*!< ITM 
 791:../Includes/core_cm4.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFUL /*<< ITM_TPR_PRIVMASK_Pos*/)            /*!< ITM 
 792:../Includes/core_cm4.h **** 
 793:../Includes/core_cm4.h **** /* ITM Trace Control Register Definitions */
 794:../Includes/core_cm4.h **** #define ITM_TCR_BUSY_Pos                   23                                             /*!< ITM 
 795:../Includes/core_cm4.h **** #define ITM_TCR_BUSY_Msk                   (1UL << ITM_TCR_BUSY_Pos)                      /*!< ITM 
 796:../Includes/core_cm4.h **** 
 797:../Includes/core_cm4.h **** #define ITM_TCR_TraceBusID_Pos             16                                             /*!< ITM 
 798:../Includes/core_cm4.h **** #define ITM_TCR_TraceBusID_Msk             (0x7FUL << ITM_TCR_TraceBusID_Pos)             /*!< ITM 
 799:../Includes/core_cm4.h **** 
 800:../Includes/core_cm4.h **** #define ITM_TCR_GTSFREQ_Pos                10                                             /*!< ITM 
 801:../Includes/core_cm4.h **** #define ITM_TCR_GTSFREQ_Msk                (3UL << ITM_TCR_GTSFREQ_Pos)                   /*!< ITM 
 802:../Includes/core_cm4.h **** 
 803:../Includes/core_cm4.h **** #define ITM_TCR_TSPrescale_Pos              8                                             /*!< ITM 
 804:../Includes/core_cm4.h **** #define ITM_TCR_TSPrescale_Msk             (3UL << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
 805:../Includes/core_cm4.h **** 
 806:../Includes/core_cm4.h **** #define ITM_TCR_SWOENA_Pos                  4                                             /*!< ITM 
 807:../Includes/core_cm4.h **** #define ITM_TCR_SWOENA_Msk                 (1UL << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
 808:../Includes/core_cm4.h **** 
 809:../Includes/core_cm4.h **** #define ITM_TCR_DWTENA_Pos                  3                                             /*!< ITM 
 810:../Includes/core_cm4.h **** #define ITM_TCR_DWTENA_Msk                 (1UL << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
 811:../Includes/core_cm4.h **** 
 812:../Includes/core_cm4.h **** #define ITM_TCR_SYNCENA_Pos                 2                                             /*!< ITM 
 813:../Includes/core_cm4.h **** #define ITM_TCR_SYNCENA_Msk                (1UL << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
 814:../Includes/core_cm4.h **** 
 815:../Includes/core_cm4.h **** #define ITM_TCR_TSENA_Pos                   1                                             /*!< ITM 
 816:../Includes/core_cm4.h **** #define ITM_TCR_TSENA_Msk                  (1UL << ITM_TCR_TSENA_Pos)                     /*!< ITM 
 817:../Includes/core_cm4.h **** 
 818:../Includes/core_cm4.h **** #define ITM_TCR_ITMENA_Pos                  0                                             /*!< ITM 
 819:../Includes/core_cm4.h **** #define ITM_TCR_ITMENA_Msk                 (1UL /*<< ITM_TCR_ITMENA_Pos*/)                /*!< ITM 
 820:../Includes/core_cm4.h **** 
 821:../Includes/core_cm4.h **** /* ITM Integration Write Register Definitions */
 822:../Includes/core_cm4.h **** #define ITM_IWR_ATVALIDM_Pos                0                                             /*!< ITM 
 823:../Includes/core_cm4.h **** #define ITM_IWR_ATVALIDM_Msk               (1UL /*<< ITM_IWR_ATVALIDM_Pos*/)              /*!< ITM 
 824:../Includes/core_cm4.h **** 
 825:../Includes/core_cm4.h **** /* ITM Integration Read Register Definitions */
 826:../Includes/core_cm4.h **** #define ITM_IRR_ATREADYM_Pos                0                                             /*!< ITM 
 827:../Includes/core_cm4.h **** #define ITM_IRR_ATREADYM_Msk               (1UL /*<< ITM_IRR_ATREADYM_Pos*/)              /*!< ITM 
 828:../Includes/core_cm4.h **** 
 829:../Includes/core_cm4.h **** /* ITM Integration Mode Control Register Definitions */
 830:../Includes/core_cm4.h **** #define ITM_IMCR_INTEGRATION_Pos            0                                             /*!< ITM 
 831:../Includes/core_cm4.h **** #define ITM_IMCR_INTEGRATION_Msk           (1UL /*<< ITM_IMCR_INTEGRATION_Pos*/)          /*!< ITM 
 832:../Includes/core_cm4.h **** 
 833:../Includes/core_cm4.h **** /* ITM Lock Status Register Definitions */
 834:../Includes/core_cm4.h **** #define ITM_LSR_ByteAcc_Pos                 2                                             /*!< ITM 
 835:../Includes/core_cm4.h **** #define ITM_LSR_ByteAcc_Msk                (1UL << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
 836:../Includes/core_cm4.h **** 
 837:../Includes/core_cm4.h **** #define ITM_LSR_Access_Pos                  1                                             /*!< ITM 
 838:../Includes/core_cm4.h **** #define ITM_LSR_Access_Msk                 (1UL << ITM_LSR_Access_Pos)                    /*!< ITM 
 839:../Includes/core_cm4.h **** 
 840:../Includes/core_cm4.h **** #define ITM_LSR_Present_Pos                 0                                             /*!< ITM 
 841:../Includes/core_cm4.h **** #define ITM_LSR_Present_Msk                (1UL /*<< ITM_LSR_Present_Pos*/)               /*!< ITM 
 842:../Includes/core_cm4.h **** 
 843:../Includes/core_cm4.h **** /*@}*/ /* end of group CMSIS_ITM */
 844:../Includes/core_cm4.h **** 
 845:../Includes/core_cm4.h **** 
 846:../Includes/core_cm4.h **** /** \ingroup  CMSIS_core_register
 847:../Includes/core_cm4.h ****     \defgroup CMSIS_DWT     Data Watchpoint and Trace (DWT)
 848:../Includes/core_cm4.h ****     \brief      Type definitions for the Data Watchpoint and Trace (DWT)
 849:../Includes/core_cm4.h ****   @{
 850:../Includes/core_cm4.h ****  */
 851:../Includes/core_cm4.h **** 
 852:../Includes/core_cm4.h **** /** \brief  Structure type to access the Data Watchpoint and Trace Register (DWT).
 853:../Includes/core_cm4.h ****  */
 854:../Includes/core_cm4.h **** typedef struct
 855:../Includes/core_cm4.h **** {
 856:../Includes/core_cm4.h ****   __IO uint32_t CTRL;                    /*!< Offset: 0x000 (R/W)  Control Register                
 857:../Includes/core_cm4.h ****   __IO uint32_t CYCCNT;                  /*!< Offset: 0x004 (R/W)  Cycle Count Register            
 858:../Includes/core_cm4.h ****   __IO uint32_t CPICNT;                  /*!< Offset: 0x008 (R/W)  CPI Count Register              
 859:../Includes/core_cm4.h ****   __IO uint32_t EXCCNT;                  /*!< Offset: 0x00C (R/W)  Exception Overhead Count Registe
 860:../Includes/core_cm4.h ****   __IO uint32_t SLEEPCNT;                /*!< Offset: 0x010 (R/W)  Sleep Count Register            
 861:../Includes/core_cm4.h ****   __IO uint32_t LSUCNT;                  /*!< Offset: 0x014 (R/W)  LSU Count Register              
 862:../Includes/core_cm4.h ****   __IO uint32_t FOLDCNT;                 /*!< Offset: 0x018 (R/W)  Folded-instruction Count Registe
 863:../Includes/core_cm4.h ****   __I  uint32_t PCSR;                    /*!< Offset: 0x01C (R/ )  Program Counter Sample Register 
 864:../Includes/core_cm4.h ****   __IO uint32_t COMP0;                   /*!< Offset: 0x020 (R/W)  Comparator Register 0           
 865:../Includes/core_cm4.h ****   __IO uint32_t MASK0;                   /*!< Offset: 0x024 (R/W)  Mask Register 0                 
 866:../Includes/core_cm4.h ****   __IO uint32_t FUNCTION0;               /*!< Offset: 0x028 (R/W)  Function Register 0             
 867:../Includes/core_cm4.h ****        uint32_t RESERVED0[1];
 868:../Includes/core_cm4.h ****   __IO uint32_t COMP1;                   /*!< Offset: 0x030 (R/W)  Comparator Register 1           
 869:../Includes/core_cm4.h ****   __IO uint32_t MASK1;                   /*!< Offset: 0x034 (R/W)  Mask Register 1                 
 870:../Includes/core_cm4.h ****   __IO uint32_t FUNCTION1;               /*!< Offset: 0x038 (R/W)  Function Register 1             
 871:../Includes/core_cm4.h ****        uint32_t RESERVED1[1];
 872:../Includes/core_cm4.h ****   __IO uint32_t COMP2;                   /*!< Offset: 0x040 (R/W)  Comparator Register 2           
 873:../Includes/core_cm4.h ****   __IO uint32_t MASK2;                   /*!< Offset: 0x044 (R/W)  Mask Register 2                 
 874:../Includes/core_cm4.h ****   __IO uint32_t FUNCTION2;               /*!< Offset: 0x048 (R/W)  Function Register 2             
 875:../Includes/core_cm4.h ****        uint32_t RESERVED2[1];
 876:../Includes/core_cm4.h ****   __IO uint32_t COMP3;                   /*!< Offset: 0x050 (R/W)  Comparator Register 3           
 877:../Includes/core_cm4.h ****   __IO uint32_t MASK3;                   /*!< Offset: 0x054 (R/W)  Mask Register 3                 
 878:../Includes/core_cm4.h ****   __IO uint32_t FUNCTION3;               /*!< Offset: 0x058 (R/W)  Function Register 3             
 879:../Includes/core_cm4.h **** } DWT_Type;
 880:../Includes/core_cm4.h **** 
 881:../Includes/core_cm4.h **** /* DWT Control Register Definitions */
 882:../Includes/core_cm4.h **** #define DWT_CTRL_NUMCOMP_Pos               28                                          /*!< DWT CTR
 883:../Includes/core_cm4.h **** #define DWT_CTRL_NUMCOMP_Msk               (0xFUL << DWT_CTRL_NUMCOMP_Pos)             /*!< DWT CTR
 884:../Includes/core_cm4.h **** 
 885:../Includes/core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Pos              27                                          /*!< DWT CTR
 886:../Includes/core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Msk              (0x1UL << DWT_CTRL_NOTRCPKT_Pos)            /*!< DWT CTR
 887:../Includes/core_cm4.h **** 
 888:../Includes/core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Pos             26                                          /*!< DWT CTR
 889:../Includes/core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Msk             (0x1UL << DWT_CTRL_NOEXTTRIG_Pos)           /*!< DWT CTR
 890:../Includes/core_cm4.h **** 
 891:../Includes/core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Pos              25                                          /*!< DWT CTR
 892:../Includes/core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Msk              (0x1UL << DWT_CTRL_NOCYCCNT_Pos)            /*!< DWT CTR
 893:../Includes/core_cm4.h **** 
 894:../Includes/core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Pos              24                                          /*!< DWT CTR
 895:../Includes/core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Msk              (0x1UL << DWT_CTRL_NOPRFCNT_Pos)            /*!< DWT CTR
 896:../Includes/core_cm4.h **** 
 897:../Includes/core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Pos             22                                          /*!< DWT CTR
 898:../Includes/core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Msk             (0x1UL << DWT_CTRL_CYCEVTENA_Pos)           /*!< DWT CTR
 899:../Includes/core_cm4.h **** 
 900:../Includes/core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Pos            21                                          /*!< DWT CTR
 901:../Includes/core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Msk            (0x1UL << DWT_CTRL_FOLDEVTENA_Pos)          /*!< DWT CTR
 902:../Includes/core_cm4.h **** 
 903:../Includes/core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Pos             20                                          /*!< DWT CTR
 904:../Includes/core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Msk             (0x1UL << DWT_CTRL_LSUEVTENA_Pos)           /*!< DWT CTR
 905:../Includes/core_cm4.h **** 
 906:../Includes/core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Pos           19                                          /*!< DWT CTR
 907:../Includes/core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Msk           (0x1UL << DWT_CTRL_SLEEPEVTENA_Pos)         /*!< DWT CTR
 908:../Includes/core_cm4.h **** 
 909:../Includes/core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Pos             18                                          /*!< DWT CTR
 910:../Includes/core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Msk             (0x1UL << DWT_CTRL_EXCEVTENA_Pos)           /*!< DWT CTR
 911:../Includes/core_cm4.h **** 
 912:../Includes/core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Pos             17                                          /*!< DWT CTR
 913:../Includes/core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Msk             (0x1UL << DWT_CTRL_CPIEVTENA_Pos)           /*!< DWT CTR
 914:../Includes/core_cm4.h **** 
 915:../Includes/core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Pos             16                                          /*!< DWT CTR
 916:../Includes/core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Msk             (0x1UL << DWT_CTRL_EXCTRCENA_Pos)           /*!< DWT CTR
 917:../Includes/core_cm4.h **** 
 918:../Includes/core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Pos            12                                          /*!< DWT CTR
 919:../Includes/core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Msk            (0x1UL << DWT_CTRL_PCSAMPLENA_Pos)          /*!< DWT CTR
 920:../Includes/core_cm4.h **** 
 921:../Includes/core_cm4.h **** #define DWT_CTRL_SYNCTAP_Pos               10                                          /*!< DWT CTR
 922:../Includes/core_cm4.h **** #define DWT_CTRL_SYNCTAP_Msk               (0x3UL << DWT_CTRL_SYNCTAP_Pos)             /*!< DWT CTR
 923:../Includes/core_cm4.h **** 
 924:../Includes/core_cm4.h **** #define DWT_CTRL_CYCTAP_Pos                 9                                          /*!< DWT CTR
 925:../Includes/core_cm4.h **** #define DWT_CTRL_CYCTAP_Msk                (0x1UL << DWT_CTRL_CYCTAP_Pos)              /*!< DWT CTR
 926:../Includes/core_cm4.h **** 
 927:../Includes/core_cm4.h **** #define DWT_CTRL_POSTINIT_Pos               5                                          /*!< DWT CTR
 928:../Includes/core_cm4.h **** #define DWT_CTRL_POSTINIT_Msk              (0xFUL << DWT_CTRL_POSTINIT_Pos)            /*!< DWT CTR
 929:../Includes/core_cm4.h **** 
 930:../Includes/core_cm4.h **** #define DWT_CTRL_POSTPRESET_Pos             1                                          /*!< DWT CTR
 931:../Includes/core_cm4.h **** #define DWT_CTRL_POSTPRESET_Msk            (0xFUL << DWT_CTRL_POSTPRESET_Pos)          /*!< DWT CTR
 932:../Includes/core_cm4.h **** 
 933:../Includes/core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Pos              0                                          /*!< DWT CTR
 934:../Includes/core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Msk             (0x1UL /*<< DWT_CTRL_CYCCNTENA_Pos*/)       /*!< DWT CTR
 935:../Includes/core_cm4.h **** 
 936:../Includes/core_cm4.h **** /* DWT CPI Count Register Definitions */
 937:../Includes/core_cm4.h **** #define DWT_CPICNT_CPICNT_Pos               0                                          /*!< DWT CPI
 938:../Includes/core_cm4.h **** #define DWT_CPICNT_CPICNT_Msk              (0xFFUL /*<< DWT_CPICNT_CPICNT_Pos*/)       /*!< DWT CPI
 939:../Includes/core_cm4.h **** 
 940:../Includes/core_cm4.h **** /* DWT Exception Overhead Count Register Definitions */
 941:../Includes/core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Pos               0                                          /*!< DWT EXC
 942:../Includes/core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Msk              (0xFFUL /*<< DWT_EXCCNT_EXCCNT_Pos*/)       /*!< DWT EXC
 943:../Includes/core_cm4.h **** 
 944:../Includes/core_cm4.h **** /* DWT Sleep Count Register Definitions */
 945:../Includes/core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Pos           0                                          /*!< DWT SLE
 946:../Includes/core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Msk          (0xFFUL /*<< DWT_SLEEPCNT_SLEEPCNT_Pos*/)   /*!< DWT SLE
 947:../Includes/core_cm4.h **** 
 948:../Includes/core_cm4.h **** /* DWT LSU Count Register Definitions */
 949:../Includes/core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Pos               0                                          /*!< DWT LSU
 950:../Includes/core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Msk              (0xFFUL /*<< DWT_LSUCNT_LSUCNT_Pos*/)       /*!< DWT LSU
 951:../Includes/core_cm4.h **** 
 952:../Includes/core_cm4.h **** /* DWT Folded-instruction Count Register Definitions */
 953:../Includes/core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Pos             0                                          /*!< DWT FOL
 954:../Includes/core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Msk            (0xFFUL /*<< DWT_FOLDCNT_FOLDCNT_Pos*/)     /*!< DWT FOL
 955:../Includes/core_cm4.h **** 
 956:../Includes/core_cm4.h **** /* DWT Comparator Mask Register Definitions */
 957:../Includes/core_cm4.h **** #define DWT_MASK_MASK_Pos                   0                                          /*!< DWT MAS
 958:../Includes/core_cm4.h **** #define DWT_MASK_MASK_Msk                  (0x1FUL /*<< DWT_MASK_MASK_Pos*/)           /*!< DWT MAS
 959:../Includes/core_cm4.h **** 
 960:../Includes/core_cm4.h **** /* DWT Comparator Function Register Definitions */
 961:../Includes/core_cm4.h **** #define DWT_FUNCTION_MATCHED_Pos           24                                          /*!< DWT FUN
 962:../Includes/core_cm4.h **** #define DWT_FUNCTION_MATCHED_Msk           (0x1UL << DWT_FUNCTION_MATCHED_Pos)         /*!< DWT FUN
 963:../Includes/core_cm4.h **** 
 964:../Includes/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Pos        16                                          /*!< DWT FUN
 965:../Includes/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR1_Pos)      /*!< DWT FUN
 966:../Includes/core_cm4.h **** 
 967:../Includes/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Pos        12                                          /*!< DWT FUN
 968:../Includes/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR0_Pos)      /*!< DWT FUN
 969:../Includes/core_cm4.h **** 
 970:../Includes/core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Pos         10                                          /*!< DWT FUN
 971:../Includes/core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Msk         (0x3UL << DWT_FUNCTION_DATAVSIZE_Pos)       /*!< DWT FUN
 972:../Includes/core_cm4.h **** 
 973:../Includes/core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Pos            9                                          /*!< DWT FUN
 974:../Includes/core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Msk           (0x1UL << DWT_FUNCTION_LNK1ENA_Pos)         /*!< DWT FUN
 975:../Includes/core_cm4.h **** 
 976:../Includes/core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Pos         8                                          /*!< DWT FUN
 977:../Includes/core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Msk        (0x1UL << DWT_FUNCTION_DATAVMATCH_Pos)      /*!< DWT FUN
 978:../Includes/core_cm4.h **** 
 979:../Includes/core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Pos           7                                          /*!< DWT FUN
 980:../Includes/core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Msk          (0x1UL << DWT_FUNCTION_CYCMATCH_Pos)        /*!< DWT FUN
 981:../Includes/core_cm4.h **** 
 982:../Includes/core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Pos          5                                          /*!< DWT FUN
 983:../Includes/core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Msk         (0x1UL << DWT_FUNCTION_EMITRANGE_Pos)       /*!< DWT FUN
 984:../Includes/core_cm4.h **** 
 985:../Includes/core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Pos           0                                          /*!< DWT FUN
 986:../Includes/core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Msk          (0xFUL /*<< DWT_FUNCTION_FUNCTION_Pos*/)    /*!< DWT FUN
 987:../Includes/core_cm4.h **** 
 988:../Includes/core_cm4.h **** /*@}*/ /* end of group CMSIS_DWT */
 989:../Includes/core_cm4.h **** 
 990:../Includes/core_cm4.h **** 
 991:../Includes/core_cm4.h **** /** \ingroup  CMSIS_core_register
 992:../Includes/core_cm4.h ****     \defgroup CMSIS_TPI     Trace Port Interface (TPI)
 993:../Includes/core_cm4.h ****     \brief      Type definitions for the Trace Port Interface (TPI)
 994:../Includes/core_cm4.h ****   @{
 995:../Includes/core_cm4.h ****  */
 996:../Includes/core_cm4.h **** 
 997:../Includes/core_cm4.h **** /** \brief  Structure type to access the Trace Port Interface Register (TPI).
 998:../Includes/core_cm4.h ****  */
 999:../Includes/core_cm4.h **** typedef struct
1000:../Includes/core_cm4.h **** {
1001:../Includes/core_cm4.h ****   __IO uint32_t SSPSR;                   /*!< Offset: 0x000 (R/ )  Supported Parallel Port Size Reg
1002:../Includes/core_cm4.h ****   __IO uint32_t CSPSR;                   /*!< Offset: 0x004 (R/W)  Current Parallel Port Size Regis
1003:../Includes/core_cm4.h ****        uint32_t RESERVED0[2];
1004:../Includes/core_cm4.h ****   __IO uint32_t ACPR;                    /*!< Offset: 0x010 (R/W)  Asynchronous Clock Prescaler Reg
1005:../Includes/core_cm4.h ****        uint32_t RESERVED1[55];
1006:../Includes/core_cm4.h ****   __IO uint32_t SPPR;                    /*!< Offset: 0x0F0 (R/W)  Selected Pin Protocol Register *
1007:../Includes/core_cm4.h ****        uint32_t RESERVED2[131];
1008:../Includes/core_cm4.h ****   __I  uint32_t FFSR;                    /*!< Offset: 0x300 (R/ )  Formatter and Flush Status Regis
1009:../Includes/core_cm4.h ****   __IO uint32_t FFCR;                    /*!< Offset: 0x304 (R/W)  Formatter and Flush Control Regi
1010:../Includes/core_cm4.h ****   __I  uint32_t FSCR;                    /*!< Offset: 0x308 (R/ )  Formatter Synchronization Counte
1011:../Includes/core_cm4.h ****        uint32_t RESERVED3[759];
1012:../Includes/core_cm4.h ****   __I  uint32_t TRIGGER;                 /*!< Offset: 0xEE8 (R/ )  TRIGGER */
1013:../Includes/core_cm4.h ****   __I  uint32_t FIFO0;                   /*!< Offset: 0xEEC (R/ )  Integration ETM Data */
1014:../Includes/core_cm4.h ****   __I  uint32_t ITATBCTR2;               /*!< Offset: 0xEF0 (R/ )  ITATBCTR2 */
1015:../Includes/core_cm4.h ****        uint32_t RESERVED4[1];
1016:../Includes/core_cm4.h ****   __I  uint32_t ITATBCTR0;               /*!< Offset: 0xEF8 (R/ )  ITATBCTR0 */
1017:../Includes/core_cm4.h ****   __I  uint32_t FIFO1;                   /*!< Offset: 0xEFC (R/ )  Integration ITM Data */
1018:../Includes/core_cm4.h ****   __IO uint32_t ITCTRL;                  /*!< Offset: 0xF00 (R/W)  Integration Mode Control */
1019:../Includes/core_cm4.h ****        uint32_t RESERVED5[39];
1020:../Includes/core_cm4.h ****   __IO uint32_t CLAIMSET;                /*!< Offset: 0xFA0 (R/W)  Claim tag set */
1021:../Includes/core_cm4.h ****   __IO uint32_t CLAIMCLR;                /*!< Offset: 0xFA4 (R/W)  Claim tag clear */
1022:../Includes/core_cm4.h ****        uint32_t RESERVED7[8];
1023:../Includes/core_cm4.h ****   __I  uint32_t DEVID;                   /*!< Offset: 0xFC8 (R/ )  TPIU_DEVID */
1024:../Includes/core_cm4.h ****   __I  uint32_t DEVTYPE;                 /*!< Offset: 0xFCC (R/ )  TPIU_DEVTYPE */
1025:../Includes/core_cm4.h **** } TPI_Type;
1026:../Includes/core_cm4.h **** 
1027:../Includes/core_cm4.h **** /* TPI Asynchronous Clock Prescaler Register Definitions */
1028:../Includes/core_cm4.h **** #define TPI_ACPR_PRESCALER_Pos              0                                          /*!< TPI ACP
1029:../Includes/core_cm4.h **** #define TPI_ACPR_PRESCALER_Msk             (0x1FFFUL /*<< TPI_ACPR_PRESCALER_Pos*/)    /*!< TPI ACP
1030:../Includes/core_cm4.h **** 
1031:../Includes/core_cm4.h **** /* TPI Selected Pin Protocol Register Definitions */
1032:../Includes/core_cm4.h **** #define TPI_SPPR_TXMODE_Pos                 0                                          /*!< TPI SPP
1033:../Includes/core_cm4.h **** #define TPI_SPPR_TXMODE_Msk                (0x3UL /*<< TPI_SPPR_TXMODE_Pos*/)          /*!< TPI SPP
1034:../Includes/core_cm4.h **** 
1035:../Includes/core_cm4.h **** /* TPI Formatter and Flush Status Register Definitions */
1036:../Includes/core_cm4.h **** #define TPI_FFSR_FtNonStop_Pos              3                                          /*!< TPI FFS
1037:../Includes/core_cm4.h **** #define TPI_FFSR_FtNonStop_Msk             (0x1UL << TPI_FFSR_FtNonStop_Pos)           /*!< TPI FFS
1038:../Includes/core_cm4.h **** 
1039:../Includes/core_cm4.h **** #define TPI_FFSR_TCPresent_Pos              2                                          /*!< TPI FFS
1040:../Includes/core_cm4.h **** #define TPI_FFSR_TCPresent_Msk             (0x1UL << TPI_FFSR_TCPresent_Pos)           /*!< TPI FFS
1041:../Includes/core_cm4.h **** 
1042:../Includes/core_cm4.h **** #define TPI_FFSR_FtStopped_Pos              1                                          /*!< TPI FFS
1043:../Includes/core_cm4.h **** #define TPI_FFSR_FtStopped_Msk             (0x1UL << TPI_FFSR_FtStopped_Pos)           /*!< TPI FFS
1044:../Includes/core_cm4.h **** 
1045:../Includes/core_cm4.h **** #define TPI_FFSR_FlInProg_Pos               0                                          /*!< TPI FFS
1046:../Includes/core_cm4.h **** #define TPI_FFSR_FlInProg_Msk              (0x1UL /*<< TPI_FFSR_FlInProg_Pos*/)        /*!< TPI FFS
1047:../Includes/core_cm4.h **** 
1048:../Includes/core_cm4.h **** /* TPI Formatter and Flush Control Register Definitions */
1049:../Includes/core_cm4.h **** #define TPI_FFCR_TrigIn_Pos                 8                                          /*!< TPI FFC
1050:../Includes/core_cm4.h **** #define TPI_FFCR_TrigIn_Msk                (0x1UL << TPI_FFCR_TrigIn_Pos)              /*!< TPI FFC
1051:../Includes/core_cm4.h **** 
1052:../Includes/core_cm4.h **** #define TPI_FFCR_EnFCont_Pos                1                                          /*!< TPI FFC
1053:../Includes/core_cm4.h **** #define TPI_FFCR_EnFCont_Msk               (0x1UL << TPI_FFCR_EnFCont_Pos)             /*!< TPI FFC
1054:../Includes/core_cm4.h **** 
1055:../Includes/core_cm4.h **** /* TPI TRIGGER Register Definitions */
1056:../Includes/core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Pos             0                                          /*!< TPI TRI
1057:../Includes/core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Msk            (0x1UL /*<< TPI_TRIGGER_TRIGGER_Pos*/)      /*!< TPI TRI
1058:../Includes/core_cm4.h **** 
1059:../Includes/core_cm4.h **** /* TPI Integration ETM Data Register Definitions (FIFO0) */
1060:../Includes/core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Pos          29                                          /*!< TPI FIF
1061:../Includes/core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ITM_ATVALID_Pos)        /*!< TPI FIF
1062:../Includes/core_cm4.h **** 
1063:../Includes/core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Pos        27                                          /*!< TPI FIF
1064:../Includes/core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Msk        (0x3UL << TPI_FIFO0_ITM_bytecount_Pos)      /*!< TPI FIF
1065:../Includes/core_cm4.h **** 
1066:../Includes/core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Pos          26                                          /*!< TPI FIF
1067:../Includes/core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ETM_ATVALID_Pos)        /*!< TPI FIF
1068:../Includes/core_cm4.h **** 
1069:../Includes/core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Pos        24                                          /*!< TPI FIF
1070:../Includes/core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Msk        (0x3UL << TPI_FIFO0_ETM_bytecount_Pos)      /*!< TPI FIF
1071:../Includes/core_cm4.h **** 
1072:../Includes/core_cm4.h **** #define TPI_FIFO0_ETM2_Pos                 16                                          /*!< TPI FIF
1073:../Includes/core_cm4.h **** #define TPI_FIFO0_ETM2_Msk                 (0xFFUL << TPI_FIFO0_ETM2_Pos)              /*!< TPI FIF
1074:../Includes/core_cm4.h **** 
1075:../Includes/core_cm4.h **** #define TPI_FIFO0_ETM1_Pos                  8                                          /*!< TPI FIF
1076:../Includes/core_cm4.h **** #define TPI_FIFO0_ETM1_Msk                 (0xFFUL << TPI_FIFO0_ETM1_Pos)              /*!< TPI FIF
1077:../Includes/core_cm4.h **** 
1078:../Includes/core_cm4.h **** #define TPI_FIFO0_ETM0_Pos                  0                                          /*!< TPI FIF
1079:../Includes/core_cm4.h **** #define TPI_FIFO0_ETM0_Msk                 (0xFFUL /*<< TPI_FIFO0_ETM0_Pos*/)          /*!< TPI FIF
1080:../Includes/core_cm4.h **** 
1081:../Includes/core_cm4.h **** /* TPI ITATBCTR2 Register Definitions */
1082:../Includes/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY_Pos           0                                          /*!< TPI ITA
1083:../Includes/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY_Msk          (0x1UL /*<< TPI_ITATBCTR2_ATREADY_Pos*/)    /*!< TPI ITA
1084:../Includes/core_cm4.h **** 
1085:../Includes/core_cm4.h **** /* TPI Integration ITM Data Register Definitions (FIFO1) */
1086:../Includes/core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Pos          29                                          /*!< TPI FIF
1087:../Includes/core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ITM_ATVALID_Pos)        /*!< TPI FIF
1088:../Includes/core_cm4.h **** 
1089:../Includes/core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Pos        27                                          /*!< TPI FIF
1090:../Includes/core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Msk        (0x3UL << TPI_FIFO1_ITM_bytecount_Pos)      /*!< TPI FIF
1091:../Includes/core_cm4.h **** 
1092:../Includes/core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Pos          26                                          /*!< TPI FIF
1093:../Includes/core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ETM_ATVALID_Pos)        /*!< TPI FIF
1094:../Includes/core_cm4.h **** 
1095:../Includes/core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Pos        24                                          /*!< TPI FIF
1096:../Includes/core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Msk        (0x3UL << TPI_FIFO1_ETM_bytecount_Pos)      /*!< TPI FIF
1097:../Includes/core_cm4.h **** 
1098:../Includes/core_cm4.h **** #define TPI_FIFO1_ITM2_Pos                 16                                          /*!< TPI FIF
1099:../Includes/core_cm4.h **** #define TPI_FIFO1_ITM2_Msk                 (0xFFUL << TPI_FIFO1_ITM2_Pos)              /*!< TPI FIF
1100:../Includes/core_cm4.h **** 
1101:../Includes/core_cm4.h **** #define TPI_FIFO1_ITM1_Pos                  8                                          /*!< TPI FIF
1102:../Includes/core_cm4.h **** #define TPI_FIFO1_ITM1_Msk                 (0xFFUL << TPI_FIFO1_ITM1_Pos)              /*!< TPI FIF
1103:../Includes/core_cm4.h **** 
1104:../Includes/core_cm4.h **** #define TPI_FIFO1_ITM0_Pos                  0                                          /*!< TPI FIF
1105:../Includes/core_cm4.h **** #define TPI_FIFO1_ITM0_Msk                 (0xFFUL /*<< TPI_FIFO1_ITM0_Pos*/)          /*!< TPI FIF
1106:../Includes/core_cm4.h **** 
1107:../Includes/core_cm4.h **** /* TPI ITATBCTR0 Register Definitions */
1108:../Includes/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY_Pos           0                                          /*!< TPI ITA
1109:../Includes/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY_Msk          (0x1UL /*<< TPI_ITATBCTR0_ATREADY_Pos*/)    /*!< TPI ITA
1110:../Includes/core_cm4.h **** 
1111:../Includes/core_cm4.h **** /* TPI Integration Mode Control Register Definitions */
1112:../Includes/core_cm4.h **** #define TPI_ITCTRL_Mode_Pos                 0                                          /*!< TPI ITC
1113:../Includes/core_cm4.h **** #define TPI_ITCTRL_Mode_Msk                (0x1UL /*<< TPI_ITCTRL_Mode_Pos*/)          /*!< TPI ITC
1114:../Includes/core_cm4.h **** 
1115:../Includes/core_cm4.h **** /* TPI DEVID Register Definitions */
1116:../Includes/core_cm4.h **** #define TPI_DEVID_NRZVALID_Pos             11                                          /*!< TPI DEV
1117:../Includes/core_cm4.h **** #define TPI_DEVID_NRZVALID_Msk             (0x1UL << TPI_DEVID_NRZVALID_Pos)           /*!< TPI DEV
1118:../Includes/core_cm4.h **** 
1119:../Includes/core_cm4.h **** #define TPI_DEVID_MANCVALID_Pos            10                                          /*!< TPI DEV
1120:../Includes/core_cm4.h **** #define TPI_DEVID_MANCVALID_Msk            (0x1UL << TPI_DEVID_MANCVALID_Pos)          /*!< TPI DEV
1121:../Includes/core_cm4.h **** 
1122:../Includes/core_cm4.h **** #define TPI_DEVID_PTINVALID_Pos             9                                          /*!< TPI DEV
1123:../Includes/core_cm4.h **** #define TPI_DEVID_PTINVALID_Msk            (0x1UL << TPI_DEVID_PTINVALID_Pos)          /*!< TPI DEV
1124:../Includes/core_cm4.h **** 
1125:../Includes/core_cm4.h **** #define TPI_DEVID_MinBufSz_Pos              6                                          /*!< TPI DEV
1126:../Includes/core_cm4.h **** #define TPI_DEVID_MinBufSz_Msk             (0x7UL << TPI_DEVID_MinBufSz_Pos)           /*!< TPI DEV
1127:../Includes/core_cm4.h **** 
1128:../Includes/core_cm4.h **** #define TPI_DEVID_AsynClkIn_Pos             5                                          /*!< TPI DEV
1129:../Includes/core_cm4.h **** #define TPI_DEVID_AsynClkIn_Msk            (0x1UL << TPI_DEVID_AsynClkIn_Pos)          /*!< TPI DEV
1130:../Includes/core_cm4.h **** 
1131:../Includes/core_cm4.h **** #define TPI_DEVID_NrTraceInput_Pos          0                                          /*!< TPI DEV
1132:../Includes/core_cm4.h **** #define TPI_DEVID_NrTraceInput_Msk         (0x1FUL /*<< TPI_DEVID_NrTraceInput_Pos*/)  /*!< TPI DEV
1133:../Includes/core_cm4.h **** 
1134:../Includes/core_cm4.h **** /* TPI DEVTYPE Register Definitions */
1135:../Includes/core_cm4.h **** #define TPI_DEVTYPE_MajorType_Pos           4                                          /*!< TPI DEV
1136:../Includes/core_cm4.h **** #define TPI_DEVTYPE_MajorType_Msk          (0xFUL << TPI_DEVTYPE_MajorType_Pos)        /*!< TPI DEV
1137:../Includes/core_cm4.h **** 
1138:../Includes/core_cm4.h **** #define TPI_DEVTYPE_SubType_Pos             0                                          /*!< TPI DEV
1139:../Includes/core_cm4.h **** #define TPI_DEVTYPE_SubType_Msk            (0xFUL /*<< TPI_DEVTYPE_SubType_Pos*/)      /*!< TPI DEV
1140:../Includes/core_cm4.h **** 
1141:../Includes/core_cm4.h **** /*@}*/ /* end of group CMSIS_TPI */
1142:../Includes/core_cm4.h **** 
1143:../Includes/core_cm4.h **** 
1144:../Includes/core_cm4.h **** #if (__MPU_PRESENT == 1)
1145:../Includes/core_cm4.h **** /** \ingroup  CMSIS_core_register
1146:../Includes/core_cm4.h ****     \defgroup CMSIS_MPU     Memory Protection Unit (MPU)
1147:../Includes/core_cm4.h ****     \brief      Type definitions for the Memory Protection Unit (MPU)
1148:../Includes/core_cm4.h ****   @{
1149:../Includes/core_cm4.h ****  */
1150:../Includes/core_cm4.h **** 
1151:../Includes/core_cm4.h **** /** \brief  Structure type to access the Memory Protection Unit (MPU).
1152:../Includes/core_cm4.h ****  */
1153:../Includes/core_cm4.h **** typedef struct
1154:../Includes/core_cm4.h **** {
1155:../Includes/core_cm4.h ****   __I  uint32_t TYPE;                    /*!< Offset: 0x000 (R/ )  MPU Type Register               
1156:../Includes/core_cm4.h ****   __IO uint32_t CTRL;                    /*!< Offset: 0x004 (R/W)  MPU Control Register            
1157:../Includes/core_cm4.h ****   __IO uint32_t RNR;                     /*!< Offset: 0x008 (R/W)  MPU Region RNRber Register      
1158:../Includes/core_cm4.h ****   __IO uint32_t RBAR;                    /*!< Offset: 0x00C (R/W)  MPU Region Base Address Register
1159:../Includes/core_cm4.h ****   __IO uint32_t RASR;                    /*!< Offset: 0x010 (R/W)  MPU Region Attribute and Size Re
1160:../Includes/core_cm4.h ****   __IO uint32_t RBAR_A1;                 /*!< Offset: 0x014 (R/W)  MPU Alias 1 Region Base Address 
1161:../Includes/core_cm4.h ****   __IO uint32_t RASR_A1;                 /*!< Offset: 0x018 (R/W)  MPU Alias 1 Region Attribute and
1162:../Includes/core_cm4.h ****   __IO uint32_t RBAR_A2;                 /*!< Offset: 0x01C (R/W)  MPU Alias 2 Region Base Address 
1163:../Includes/core_cm4.h ****   __IO uint32_t RASR_A2;                 /*!< Offset: 0x020 (R/W)  MPU Alias 2 Region Attribute and
1164:../Includes/core_cm4.h ****   __IO uint32_t RBAR_A3;                 /*!< Offset: 0x024 (R/W)  MPU Alias 3 Region Base Address 
1165:../Includes/core_cm4.h ****   __IO uint32_t RASR_A3;                 /*!< Offset: 0x028 (R/W)  MPU Alias 3 Region Attribute and
1166:../Includes/core_cm4.h **** } MPU_Type;
1167:../Includes/core_cm4.h **** 
1168:../Includes/core_cm4.h **** /* MPU Type Register */
1169:../Includes/core_cm4.h **** #define MPU_TYPE_IREGION_Pos               16                                             /*!< MPU 
1170:../Includes/core_cm4.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
1171:../Includes/core_cm4.h **** 
1172:../Includes/core_cm4.h **** #define MPU_TYPE_DREGION_Pos                8                                             /*!< MPU 
1173:../Includes/core_cm4.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
1174:../Includes/core_cm4.h **** 
1175:../Includes/core_cm4.h **** #define MPU_TYPE_SEPARATE_Pos               0                                             /*!< MPU 
1176:../Includes/core_cm4.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL /*<< MPU_TYPE_SEPARATE_Pos*/)             /*!< MPU 
1177:../Includes/core_cm4.h **** 
1178:../Includes/core_cm4.h **** /* MPU Control Register */
1179:../Includes/core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2                                             /*!< MPU 
1180:../Includes/core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
1181:../Includes/core_cm4.h **** 
1182:../Includes/core_cm4.h **** #define MPU_CTRL_HFNMIENA_Pos               1                                             /*!< MPU 
1183:../Includes/core_cm4.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
1184:../Includes/core_cm4.h **** 
1185:../Includes/core_cm4.h **** #define MPU_CTRL_ENABLE_Pos                 0                                             /*!< MPU 
1186:../Includes/core_cm4.h **** #define MPU_CTRL_ENABLE_Msk                (1UL /*<< MPU_CTRL_ENABLE_Pos*/)               /*!< MPU 
1187:../Includes/core_cm4.h **** 
1188:../Includes/core_cm4.h **** /* MPU Region Number Register */
1189:../Includes/core_cm4.h **** #define MPU_RNR_REGION_Pos                  0                                             /*!< MPU 
1190:../Includes/core_cm4.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL /*<< MPU_RNR_REGION_Pos*/)             /*!< MPU 
1191:../Includes/core_cm4.h **** 
1192:../Includes/core_cm4.h **** /* MPU Region Base Address Register */
1193:../Includes/core_cm4.h **** #define MPU_RBAR_ADDR_Pos                   5                                             /*!< MPU 
1194:../Includes/core_cm4.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFUL << MPU_RBAR_ADDR_Pos)             /*!< MPU 
1195:../Includes/core_cm4.h **** 
1196:../Includes/core_cm4.h **** #define MPU_RBAR_VALID_Pos                  4                                             /*!< MPU 
1197:../Includes/core_cm4.h **** #define MPU_RBAR_VALID_Msk                 (1UL << MPU_RBAR_VALID_Pos)                    /*!< MPU 
1198:../Includes/core_cm4.h **** 
1199:../Includes/core_cm4.h **** #define MPU_RBAR_REGION_Pos                 0                                             /*!< MPU 
1200:../Includes/core_cm4.h **** #define MPU_RBAR_REGION_Msk                (0xFUL /*<< MPU_RBAR_REGION_Pos*/)             /*!< MPU 
1201:../Includes/core_cm4.h **** 
1202:../Includes/core_cm4.h **** /* MPU Region Attribute and Size Register */
1203:../Includes/core_cm4.h **** #define MPU_RASR_ATTRS_Pos                 16                                             /*!< MPU 
1204:../Includes/core_cm4.h **** #define MPU_RASR_ATTRS_Msk                 (0xFFFFUL << MPU_RASR_ATTRS_Pos)               /*!< MPU 
1205:../Includes/core_cm4.h **** 
1206:../Includes/core_cm4.h **** #define MPU_RASR_XN_Pos                    28                                             /*!< MPU 
1207:../Includes/core_cm4.h **** #define MPU_RASR_XN_Msk                    (1UL << MPU_RASR_XN_Pos)                       /*!< MPU 
1208:../Includes/core_cm4.h **** 
1209:../Includes/core_cm4.h **** #define MPU_RASR_AP_Pos                    24                                             /*!< MPU 
1210:../Includes/core_cm4.h **** #define MPU_RASR_AP_Msk                    (0x7UL << MPU_RASR_AP_Pos)                     /*!< MPU 
1211:../Includes/core_cm4.h **** 
1212:../Includes/core_cm4.h **** #define MPU_RASR_TEX_Pos                   19                                             /*!< MPU 
1213:../Includes/core_cm4.h **** #define MPU_RASR_TEX_Msk                   (0x7UL << MPU_RASR_TEX_Pos)                    /*!< MPU 
1214:../Includes/core_cm4.h **** 
1215:../Includes/core_cm4.h **** #define MPU_RASR_S_Pos                     18                                             /*!< MPU 
1216:../Includes/core_cm4.h **** #define MPU_RASR_S_Msk                     (1UL << MPU_RASR_S_Pos)                        /*!< MPU 
1217:../Includes/core_cm4.h **** 
1218:../Includes/core_cm4.h **** #define MPU_RASR_C_Pos                     17                                             /*!< MPU 
1219:../Includes/core_cm4.h **** #define MPU_RASR_C_Msk                     (1UL << MPU_RASR_C_Pos)                        /*!< MPU 
1220:../Includes/core_cm4.h **** 
1221:../Includes/core_cm4.h **** #define MPU_RASR_B_Pos                     16                                             /*!< MPU 
1222:../Includes/core_cm4.h **** #define MPU_RASR_B_Msk                     (1UL << MPU_RASR_B_Pos)                        /*!< MPU 
1223:../Includes/core_cm4.h **** 
1224:../Includes/core_cm4.h **** #define MPU_RASR_SRD_Pos                    8                                             /*!< MPU 
1225:../Includes/core_cm4.h **** #define MPU_RASR_SRD_Msk                   (0xFFUL << MPU_RASR_SRD_Pos)                   /*!< MPU 
1226:../Includes/core_cm4.h **** 
1227:../Includes/core_cm4.h **** #define MPU_RASR_SIZE_Pos                   1                                             /*!< MPU 
1228:../Includes/core_cm4.h **** #define MPU_RASR_SIZE_Msk                  (0x1FUL << MPU_RASR_SIZE_Pos)                  /*!< MPU 
1229:../Includes/core_cm4.h **** 
1230:../Includes/core_cm4.h **** #define MPU_RASR_ENABLE_Pos                 0                                             /*!< MPU 
1231:../Includes/core_cm4.h **** #define MPU_RASR_ENABLE_Msk                (1UL /*<< MPU_RASR_ENABLE_Pos*/)               /*!< MPU 
1232:../Includes/core_cm4.h **** 
1233:../Includes/core_cm4.h **** /*@} end of group CMSIS_MPU */
1234:../Includes/core_cm4.h **** #endif
1235:../Includes/core_cm4.h **** 
1236:../Includes/core_cm4.h **** 
1237:../Includes/core_cm4.h **** #if (__FPU_PRESENT == 1)
1238:../Includes/core_cm4.h **** /** \ingroup  CMSIS_core_register
1239:../Includes/core_cm4.h ****     \defgroup CMSIS_FPU     Floating Point Unit (FPU)
1240:../Includes/core_cm4.h ****     \brief      Type definitions for the Floating Point Unit (FPU)
1241:../Includes/core_cm4.h ****   @{
1242:../Includes/core_cm4.h ****  */
1243:../Includes/core_cm4.h **** 
1244:../Includes/core_cm4.h **** /** \brief  Structure type to access the Floating Point Unit (FPU).
1245:../Includes/core_cm4.h ****  */
1246:../Includes/core_cm4.h **** typedef struct
1247:../Includes/core_cm4.h **** {
1248:../Includes/core_cm4.h ****        uint32_t RESERVED0[1];
1249:../Includes/core_cm4.h ****   __IO uint32_t FPCCR;                   /*!< Offset: 0x004 (R/W)  Floating-Point Context Control R
1250:../Includes/core_cm4.h ****   __IO uint32_t FPCAR;                   /*!< Offset: 0x008 (R/W)  Floating-Point Context Address R
1251:../Includes/core_cm4.h ****   __IO uint32_t FPDSCR;                  /*!< Offset: 0x00C (R/W)  Floating-Point Default Status Co
1252:../Includes/core_cm4.h ****   __I  uint32_t MVFR0;                   /*!< Offset: 0x010 (R/ )  Media and FP Feature Register 0 
1253:../Includes/core_cm4.h ****   __I  uint32_t MVFR1;                   /*!< Offset: 0x014 (R/ )  Media and FP Feature Register 1 
1254:../Includes/core_cm4.h **** } FPU_Type;
1255:../Includes/core_cm4.h **** 
1256:../Includes/core_cm4.h **** /* Floating-Point Context Control Register */
1257:../Includes/core_cm4.h **** #define FPU_FPCCR_ASPEN_Pos                31                                             /*!< FPCC
1258:../Includes/core_cm4.h **** #define FPU_FPCCR_ASPEN_Msk                (1UL << FPU_FPCCR_ASPEN_Pos)                   /*!< FPCC
1259:../Includes/core_cm4.h **** 
1260:../Includes/core_cm4.h **** #define FPU_FPCCR_LSPEN_Pos                30                                             /*!< FPCC
1261:../Includes/core_cm4.h **** #define FPU_FPCCR_LSPEN_Msk                (1UL << FPU_FPCCR_LSPEN_Pos)                   /*!< FPCC
1262:../Includes/core_cm4.h **** 
1263:../Includes/core_cm4.h **** #define FPU_FPCCR_MONRDY_Pos                8                                             /*!< FPCC
1264:../Includes/core_cm4.h **** #define FPU_FPCCR_MONRDY_Msk               (1UL << FPU_FPCCR_MONRDY_Pos)                  /*!< FPCC
1265:../Includes/core_cm4.h **** 
1266:../Includes/core_cm4.h **** #define FPU_FPCCR_BFRDY_Pos                 6                                             /*!< FPCC
1267:../Includes/core_cm4.h **** #define FPU_FPCCR_BFRDY_Msk                (1UL << FPU_FPCCR_BFRDY_Pos)                   /*!< FPCC
1268:../Includes/core_cm4.h **** 
1269:../Includes/core_cm4.h **** #define FPU_FPCCR_MMRDY_Pos                 5                                             /*!< FPCC
1270:../Includes/core_cm4.h **** #define FPU_FPCCR_MMRDY_Msk                (1UL << FPU_FPCCR_MMRDY_Pos)                   /*!< FPCC
1271:../Includes/core_cm4.h **** 
1272:../Includes/core_cm4.h **** #define FPU_FPCCR_HFRDY_Pos                 4                                             /*!< FPCC
1273:../Includes/core_cm4.h **** #define FPU_FPCCR_HFRDY_Msk                (1UL << FPU_FPCCR_HFRDY_Pos)                   /*!< FPCC
1274:../Includes/core_cm4.h **** 
1275:../Includes/core_cm4.h **** #define FPU_FPCCR_THREAD_Pos                3                                             /*!< FPCC
1276:../Includes/core_cm4.h **** #define FPU_FPCCR_THREAD_Msk               (1UL << FPU_FPCCR_THREAD_Pos)                  /*!< FPCC
1277:../Includes/core_cm4.h **** 
1278:../Includes/core_cm4.h **** #define FPU_FPCCR_USER_Pos                  1                                             /*!< FPCC
1279:../Includes/core_cm4.h **** #define FPU_FPCCR_USER_Msk                 (1UL << FPU_FPCCR_USER_Pos)                    /*!< FPCC
1280:../Includes/core_cm4.h **** 
1281:../Includes/core_cm4.h **** #define FPU_FPCCR_LSPACT_Pos                0                                             /*!< FPCC
1282:../Includes/core_cm4.h **** #define FPU_FPCCR_LSPACT_Msk               (1UL /*<< FPU_FPCCR_LSPACT_Pos*/)              /*!< FPCC
1283:../Includes/core_cm4.h **** 
1284:../Includes/core_cm4.h **** /* Floating-Point Context Address Register */
1285:../Includes/core_cm4.h **** #define FPU_FPCAR_ADDRESS_Pos               3                                             /*!< FPCA
1286:../Includes/core_cm4.h **** #define FPU_FPCAR_ADDRESS_Msk              (0x1FFFFFFFUL << FPU_FPCAR_ADDRESS_Pos)        /*!< FPCA
1287:../Includes/core_cm4.h **** 
1288:../Includes/core_cm4.h **** /* Floating-Point Default Status Control Register */
1289:../Includes/core_cm4.h **** #define FPU_FPDSCR_AHP_Pos                 26                                             /*!< FPDS
1290:../Includes/core_cm4.h **** #define FPU_FPDSCR_AHP_Msk                 (1UL << FPU_FPDSCR_AHP_Pos)                    /*!< FPDS
1291:../Includes/core_cm4.h **** 
1292:../Includes/core_cm4.h **** #define FPU_FPDSCR_DN_Pos                  25                                             /*!< FPDS
1293:../Includes/core_cm4.h **** #define FPU_FPDSCR_DN_Msk                  (1UL << FPU_FPDSCR_DN_Pos)                     /*!< FPDS
1294:../Includes/core_cm4.h **** 
1295:../Includes/core_cm4.h **** #define FPU_FPDSCR_FZ_Pos                  24                                             /*!< FPDS
1296:../Includes/core_cm4.h **** #define FPU_FPDSCR_FZ_Msk                  (1UL << FPU_FPDSCR_FZ_Pos)                     /*!< FPDS
1297:../Includes/core_cm4.h **** 
1298:../Includes/core_cm4.h **** #define FPU_FPDSCR_RMode_Pos               22                                             /*!< FPDS
1299:../Includes/core_cm4.h **** #define FPU_FPDSCR_RMode_Msk               (3UL << FPU_FPDSCR_RMode_Pos)                  /*!< FPDS
1300:../Includes/core_cm4.h **** 
1301:../Includes/core_cm4.h **** /* Media and FP Feature Register 0 */
1302:../Includes/core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Pos    28                                             /*!< MVFR
1303:../Includes/core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Msk    (0xFUL << FPU_MVFR0_FP_rounding_modes_Pos)     /*!< MVFR
1304:../Includes/core_cm4.h **** 
1305:../Includes/core_cm4.h **** #define FPU_MVFR0_Short_vectors_Pos        24                                             /*!< MVFR
1306:../Includes/core_cm4.h **** #define FPU_MVFR0_Short_vectors_Msk        (0xFUL << FPU_MVFR0_Short_vectors_Pos)         /*!< MVFR
1307:../Includes/core_cm4.h **** 
1308:../Includes/core_cm4.h **** #define FPU_MVFR0_Square_root_Pos          20                                             /*!< MVFR
1309:../Includes/core_cm4.h **** #define FPU_MVFR0_Square_root_Msk          (0xFUL << FPU_MVFR0_Square_root_Pos)           /*!< MVFR
1310:../Includes/core_cm4.h **** 
1311:../Includes/core_cm4.h **** #define FPU_MVFR0_Divide_Pos               16                                             /*!< MVFR
1312:../Includes/core_cm4.h **** #define FPU_MVFR0_Divide_Msk               (0xFUL << FPU_MVFR0_Divide_Pos)                /*!< MVFR
1313:../Includes/core_cm4.h **** 
1314:../Includes/core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Pos    12                                             /*!< MVFR
1315:../Includes/core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Msk    (0xFUL << FPU_MVFR0_FP_excep_trapping_Pos)     /*!< MVFR
1316:../Includes/core_cm4.h **** 
1317:../Includes/core_cm4.h **** #define FPU_MVFR0_Double_precision_Pos      8                                             /*!< MVFR
1318:../Includes/core_cm4.h **** #define FPU_MVFR0_Double_precision_Msk     (0xFUL << FPU_MVFR0_Double_precision_Pos)      /*!< MVFR
1319:../Includes/core_cm4.h **** 
1320:../Includes/core_cm4.h **** #define FPU_MVFR0_Single_precision_Pos      4                                             /*!< MVFR
1321:../Includes/core_cm4.h **** #define FPU_MVFR0_Single_precision_Msk     (0xFUL << FPU_MVFR0_Single_precision_Pos)      /*!< MVFR
1322:../Includes/core_cm4.h **** 
1323:../Includes/core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Pos      0                                             /*!< MVFR
1324:../Includes/core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Msk     (0xFUL /*<< FPU_MVFR0_A_SIMD_registers_Pos*/)  /*!< MVFR
1325:../Includes/core_cm4.h **** 
1326:../Includes/core_cm4.h **** /* Media and FP Feature Register 1 */
1327:../Includes/core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Pos         28                                             /*!< MVFR
1328:../Includes/core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Msk         (0xFUL << FPU_MVFR1_FP_fused_MAC_Pos)          /*!< MVFR
1329:../Includes/core_cm4.h **** 
1330:../Includes/core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Pos              24                                             /*!< MVFR
1331:../Includes/core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Msk              (0xFUL << FPU_MVFR1_FP_HPFP_Pos)               /*!< MVFR
1332:../Includes/core_cm4.h **** 
1333:../Includes/core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Pos            4                                             /*!< MVFR
1334:../Includes/core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Msk           (0xFUL << FPU_MVFR1_D_NaN_mode_Pos)            /*!< MVFR
1335:../Includes/core_cm4.h **** 
1336:../Includes/core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Pos              0                                             /*!< MVFR
1337:../Includes/core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Msk             (0xFUL /*<< FPU_MVFR1_FtZ_mode_Pos*/)          /*!< MVFR
1338:../Includes/core_cm4.h **** 
1339:../Includes/core_cm4.h **** /*@} end of group CMSIS_FPU */
1340:../Includes/core_cm4.h **** #endif
1341:../Includes/core_cm4.h **** 
1342:../Includes/core_cm4.h **** 
1343:../Includes/core_cm4.h **** /** \ingroup  CMSIS_core_register
1344:../Includes/core_cm4.h ****     \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
1345:../Includes/core_cm4.h ****     \brief      Type definitions for the Core Debug Registers
1346:../Includes/core_cm4.h ****   @{
1347:../Includes/core_cm4.h ****  */
1348:../Includes/core_cm4.h **** 
1349:../Includes/core_cm4.h **** /** \brief  Structure type to access the Core Debug Register (CoreDebug).
1350:../Includes/core_cm4.h ****  */
1351:../Includes/core_cm4.h **** typedef struct
1352:../Includes/core_cm4.h **** {
1353:../Includes/core_cm4.h ****   __IO uint32_t DHCSR;                   /*!< Offset: 0x000 (R/W)  Debug Halting Control and Status
1354:../Includes/core_cm4.h ****   __O  uint32_t DCRSR;                   /*!< Offset: 0x004 ( /W)  Debug Core Register Selector Reg
1355:../Includes/core_cm4.h ****   __IO uint32_t DCRDR;                   /*!< Offset: 0x008 (R/W)  Debug Core Register Data Registe
1356:../Includes/core_cm4.h ****   __IO uint32_t DEMCR;                   /*!< Offset: 0x00C (R/W)  Debug Exception and Monitor Cont
1357:../Includes/core_cm4.h **** } CoreDebug_Type;
1358:../Includes/core_cm4.h **** 
1359:../Includes/core_cm4.h **** /* Debug Halting Control and Status Register */
1360:../Includes/core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16                                             /*!< Core
1361:../Includes/core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFUL << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
1362:../Includes/core_cm4.h **** 
1363:../Includes/core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25                                             /*!< Core
1364:../Includes/core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1UL << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
1365:../Includes/core_cm4.h **** 
1366:../Includes/core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24                                             /*!< Core
1367:../Includes/core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1UL << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
1368:../Includes/core_cm4.h **** 
1369:../Includes/core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19                                             /*!< Core
1370:../Includes/core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1UL << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
1371:../Includes/core_cm4.h **** 
1372:../Includes/core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18                                             /*!< Core
1373:../Includes/core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1UL << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
1374:../Includes/core_cm4.h **** 
1375:../Includes/core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17                                             /*!< Core
1376:../Includes/core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1UL << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
1377:../Includes/core_cm4.h **** 
1378:../Includes/core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16                                             /*!< Core
1379:../Includes/core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1UL << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
1380:../Includes/core_cm4.h **** 
1381:../Includes/core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5                                             /*!< Core
1382:../Includes/core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1UL << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
1383:../Includes/core_cm4.h **** 
1384:../Includes/core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3                                             /*!< Core
1385:../Includes/core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1UL << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
1386:../Includes/core_cm4.h **** 
1387:../Includes/core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2                                             /*!< Core
1388:../Includes/core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1UL << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
1389:../Includes/core_cm4.h **** 
1390:../Includes/core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1                                             /*!< Core
1391:../Includes/core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1UL << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
1392:../Includes/core_cm4.h **** 
1393:../Includes/core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0                                             /*!< Core
1394:../Includes/core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1UL /*<< CoreDebug_DHCSR_C_DEBUGEN_Pos*/)     /*!< Core
1395:../Includes/core_cm4.h **** 
1396:../Includes/core_cm4.h **** /* Debug Core Register Selector Register */
1397:../Includes/core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16                                             /*!< Core
1398:../Includes/core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1UL << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
1399:../Includes/core_cm4.h **** 
1400:../Includes/core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0                                             /*!< Core
1401:../Includes/core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1FUL /*<< CoreDebug_DCRSR_REGSEL_Pos*/)     /*!< Core
1402:../Includes/core_cm4.h **** 
1403:../Includes/core_cm4.h **** /* Debug Exception and Monitor Control Register */
1404:../Includes/core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24                                             /*!< Core
1405:../Includes/core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1UL << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
1406:../Includes/core_cm4.h **** 
1407:../Includes/core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19                                             /*!< Core
1408:../Includes/core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1UL << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
1409:../Includes/core_cm4.h **** 
1410:../Includes/core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18                                             /*!< Core
1411:../Includes/core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1UL << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
1412:../Includes/core_cm4.h **** 
1413:../Includes/core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17                                             /*!< Core
1414:../Includes/core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1UL << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
1415:../Includes/core_cm4.h **** 
1416:../Includes/core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16                                             /*!< Core
1417:../Includes/core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1UL << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
1418:../Includes/core_cm4.h **** 
1419:../Includes/core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10                                             /*!< Core
1420:../Includes/core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1UL << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
1421:../Includes/core_cm4.h **** 
1422:../Includes/core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9                                             /*!< Core
1423:../Includes/core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1UL << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
1424:../Includes/core_cm4.h **** 
1425:../Includes/core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8                                             /*!< Core
1426:../Includes/core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1UL << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
1427:../Includes/core_cm4.h **** 
1428:../Includes/core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7                                             /*!< Core
1429:../Includes/core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1UL << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
1430:../Includes/core_cm4.h **** 
1431:../Includes/core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6                                             /*!< Core
1432:../Includes/core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1UL << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
1433:../Includes/core_cm4.h **** 
1434:../Includes/core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5                                             /*!< Core
1435:../Includes/core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1UL << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
1436:../Includes/core_cm4.h **** 
1437:../Includes/core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4                                             /*!< Core
1438:../Includes/core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1UL << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
1439:../Includes/core_cm4.h **** 
1440:../Includes/core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0                                             /*!< Core
1441:../Includes/core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL /*<< CoreDebug_DEMCR_VC_CORERESET_Pos*/)  /*!< Core
1442:../Includes/core_cm4.h **** 
1443:../Includes/core_cm4.h **** /*@} end of group CMSIS_CoreDebug */
1444:../Includes/core_cm4.h **** 
1445:../Includes/core_cm4.h **** 
1446:../Includes/core_cm4.h **** /** \ingroup    CMSIS_core_register
1447:../Includes/core_cm4.h ****     \defgroup   CMSIS_core_base     Core Definitions
1448:../Includes/core_cm4.h ****     \brief      Definitions for base addresses, unions, and structures.
1449:../Includes/core_cm4.h ****   @{
1450:../Includes/core_cm4.h ****  */
1451:../Includes/core_cm4.h **** 
1452:../Includes/core_cm4.h **** /* Memory mapping of Cortex-M4 Hardware */
1453:../Includes/core_cm4.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
1454:../Includes/core_cm4.h **** #define ITM_BASE            (0xE0000000UL)                            /*!< ITM Base Address        
1455:../Includes/core_cm4.h **** #define DWT_BASE            (0xE0001000UL)                            /*!< DWT Base Address        
1456:../Includes/core_cm4.h **** #define TPI_BASE            (0xE0040000UL)                            /*!< TPI Base Address        
1457:../Includes/core_cm4.h **** #define CoreDebug_BASE      (0xE000EDF0UL)                            /*!< Core Debug Base Address 
1458:../Includes/core_cm4.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address    
1459:../Includes/core_cm4.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address       
1460:../Includes/core_cm4.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
1461:../Includes/core_cm4.h **** 
1462:../Includes/core_cm4.h **** #define SCnSCB              ((SCnSCB_Type    *)     SCS_BASE      )   /*!< System control Register 
1463:../Includes/core_cm4.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
1464:../Includes/core_cm4.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
1465:../Includes/core_cm4.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
1466:../Includes/core_cm4.h **** #define ITM                 ((ITM_Type       *)     ITM_BASE      )   /*!< ITM configuration struct
1467:../Includes/core_cm4.h **** #define DWT                 ((DWT_Type       *)     DWT_BASE      )   /*!< DWT configuration struct
1468:../Includes/core_cm4.h **** #define TPI                 ((TPI_Type       *)     TPI_BASE      )   /*!< TPI configuration struct
1469:../Includes/core_cm4.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
1470:../Includes/core_cm4.h **** 
1471:../Includes/core_cm4.h **** #if (__MPU_PRESENT == 1)
1472:../Includes/core_cm4.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90UL)                    /*!< Memory Protection Unit  
1473:../Includes/core_cm4.h ****   #define MPU               ((MPU_Type       *)     MPU_BASE      )   /*!< Memory Protection Unit  
1474:../Includes/core_cm4.h **** #endif
1475:../Includes/core_cm4.h **** 
1476:../Includes/core_cm4.h **** #if (__FPU_PRESENT == 1)
1477:../Includes/core_cm4.h ****   #define FPU_BASE          (SCS_BASE +  0x0F30UL)                    /*!< Floating Point Unit     
1478:../Includes/core_cm4.h ****   #define FPU               ((FPU_Type       *)     FPU_BASE      )   /*!< Floating Point Unit     
1479:../Includes/core_cm4.h **** #endif
1480:../Includes/core_cm4.h **** 
1481:../Includes/core_cm4.h **** /*@} */
1482:../Includes/core_cm4.h **** 
1483:../Includes/core_cm4.h **** 
1484:../Includes/core_cm4.h **** 
1485:../Includes/core_cm4.h **** /*******************************************************************************
1486:../Includes/core_cm4.h ****  *                Hardware Abstraction Layer
1487:../Includes/core_cm4.h ****   Core Function Interface contains:
1488:../Includes/core_cm4.h ****   - Core NVIC Functions
1489:../Includes/core_cm4.h ****   - Core SysTick Functions
1490:../Includes/core_cm4.h ****   - Core Debug Functions
1491:../Includes/core_cm4.h ****   - Core Register Access Functions
1492:../Includes/core_cm4.h ****  ******************************************************************************/
1493:../Includes/core_cm4.h **** /** \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
1494:../Includes/core_cm4.h **** */
1495:../Includes/core_cm4.h **** 
1496:../Includes/core_cm4.h **** 
1497:../Includes/core_cm4.h **** 
1498:../Includes/core_cm4.h **** /* ##########################   NVIC functions  #################################### */
1499:../Includes/core_cm4.h **** /** \ingroup  CMSIS_Core_FunctionInterface
1500:../Includes/core_cm4.h ****     \defgroup CMSIS_Core_NVICFunctions NVIC Functions
1501:../Includes/core_cm4.h ****     \brief      Functions that manage interrupts and exceptions via the NVIC.
1502:../Includes/core_cm4.h ****     @{
1503:../Includes/core_cm4.h ****  */
1504:../Includes/core_cm4.h **** 
1505:../Includes/core_cm4.h **** /** \brief  Set Priority Grouping
1506:../Includes/core_cm4.h **** 
1507:../Includes/core_cm4.h ****   The function sets the priority grouping field using the required unlock sequence.
1508:../Includes/core_cm4.h ****   The parameter PriorityGroup is assigned to the field SCB->AIRCR [10:8] PRIGROUP field.
1509:../Includes/core_cm4.h ****   Only values from 0..7 are used.
1510:../Includes/core_cm4.h ****   In case of a conflict between priority grouping and available
1511:../Includes/core_cm4.h ****   priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1512:../Includes/core_cm4.h **** 
1513:../Includes/core_cm4.h ****     \param [in]      PriorityGroup  Priority grouping field.
1514:../Includes/core_cm4.h ****  */
1515:../Includes/core_cm4.h **** __STATIC_INLINE void NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1516:../Includes/core_cm4.h **** {
1517:../Includes/core_cm4.h ****   uint32_t reg_value;
1518:../Includes/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 a
1519:../Includes/core_cm4.h **** 
1520:../Includes/core_cm4.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
1521:../Includes/core_cm4.h ****   reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk));             /* clear 
1522:../Includes/core_cm4.h ****   reg_value  =  (reg_value                                   |
1523:../Includes/core_cm4.h ****                 ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
1524:../Includes/core_cm4.h ****                 (PriorityGroupTmp << 8)                       );              /* Insert write key a
1525:../Includes/core_cm4.h ****   SCB->AIRCR =  reg_value;
1526:../Includes/core_cm4.h **** }
1527:../Includes/core_cm4.h **** 
1528:../Includes/core_cm4.h **** 
1529:../Includes/core_cm4.h **** /** \brief  Get Priority Grouping
1530:../Includes/core_cm4.h **** 
1531:../Includes/core_cm4.h ****   The function reads the priority grouping field from the NVIC Interrupt Controller.
1532:../Includes/core_cm4.h **** 
1533:../Includes/core_cm4.h ****     \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
1534:../Includes/core_cm4.h ****  */
1535:../Includes/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_GetPriorityGrouping(void)
1536:../Includes/core_cm4.h **** {
1537:../Includes/core_cm4.h ****   return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
1538:../Includes/core_cm4.h **** }
1539:../Includes/core_cm4.h **** 
1540:../Includes/core_cm4.h **** 
1541:../Includes/core_cm4.h **** /** \brief  Enable External Interrupt
1542:../Includes/core_cm4.h **** 
1543:../Includes/core_cm4.h ****     The function enables a device-specific interrupt in the NVIC interrupt controller.
1544:../Includes/core_cm4.h **** 
1545:../Includes/core_cm4.h ****     \param [in]      IRQn  External interrupt number. Value cannot be negative.
1546:../Includes/core_cm4.h ****  */
1547:../Includes/core_cm4.h **** __STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
1548:../Includes/core_cm4.h **** {
  27              		.loc 1 1548 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 8
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32 0000 80B4     		push	{r7}
  33              		.cfi_def_cfa_offset 4
  34              		.cfi_offset 7, -4
  35 0002 83B0     		sub	sp, sp, #12
  36              		.cfi_def_cfa_offset 16
  37 0004 00AF     		add	r7, sp, #0
  38              		.cfi_def_cfa_register 7
  39 0006 0346     		mov	r3, r0
  40 0008 FB71     		strb	r3, [r7, #7]
1549:../Includes/core_cm4.h ****   NVIC->ISER[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
  41              		.loc 1 1549 0
  42 000a 0949     		ldr	r1, .L2
  43 000c 97F90730 		ldrsb	r3, [r7, #7]
  44 0010 5B09     		lsrs	r3, r3, #5
  45 0012 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
  46 0014 02F01F02 		and	r2, r2, #31
  47 0018 0120     		movs	r0, #1
  48 001a 00FA02F2 		lsl	r2, r0, r2
  49 001e 41F82320 		str	r2, [r1, r3, lsl #2]
1550:../Includes/core_cm4.h **** }
  50              		.loc 1 1550 0
  51 0022 00BF     		nop
  52 0024 0C37     		adds	r7, r7, #12
  53              		.cfi_def_cfa_offset 4
  54 0026 BD46     		mov	sp, r7
  55              		.cfi_def_cfa_register 13
  56              		@ sp needed
  57 0028 5DF8047B 		ldr	r7, [sp], #4
  58              		.cfi_restore 7
  59              		.cfi_def_cfa_offset 0
  60 002c 7047     		bx	lr
  61              	.L3:
  62 002e 00BF     		.align	2
  63              	.L2:
  64 0030 00E100E0 		.word	-536813312
  65              		.cfi_endproc
  66              	.LFE108:
  68              		.section	.text.NVIC_DisableIRQ,"ax",%progbits
  69              		.align	1
  70              		.syntax unified
  71              		.thumb
  72              		.thumb_func
  73              		.fpu fpv4-sp-d16
  75              	NVIC_DisableIRQ:
  76              	.LFB109:
1551:../Includes/core_cm4.h **** 
1552:../Includes/core_cm4.h **** 
1553:../Includes/core_cm4.h **** /** \brief  Disable External Interrupt
1554:../Includes/core_cm4.h **** 
1555:../Includes/core_cm4.h ****     The function disables a device-specific interrupt in the NVIC interrupt controller.
1556:../Includes/core_cm4.h **** 
1557:../Includes/core_cm4.h ****     \param [in]      IRQn  External interrupt number. Value cannot be negative.
1558:../Includes/core_cm4.h ****  */
1559:../Includes/core_cm4.h **** __STATIC_INLINE void NVIC_DisableIRQ(IRQn_Type IRQn)
1560:../Includes/core_cm4.h **** {
  77              		.loc 1 1560 0
  78              		.cfi_startproc
  79              		@ args = 0, pretend = 0, frame = 8
  80              		@ frame_needed = 1, uses_anonymous_args = 0
  81              		@ link register save eliminated.
  82 0000 80B4     		push	{r7}
  83              		.cfi_def_cfa_offset 4
  84              		.cfi_offset 7, -4
  85 0002 83B0     		sub	sp, sp, #12
  86              		.cfi_def_cfa_offset 16
  87 0004 00AF     		add	r7, sp, #0
  88              		.cfi_def_cfa_register 7
  89 0006 0346     		mov	r3, r0
  90 0008 FB71     		strb	r3, [r7, #7]
1561:../Includes/core_cm4.h ****   NVIC->ICER[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
  91              		.loc 1 1561 0
  92 000a 0949     		ldr	r1, .L5
  93 000c 97F90730 		ldrsb	r3, [r7, #7]
  94 0010 5B09     		lsrs	r3, r3, #5
  95 0012 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
  96 0014 02F01F02 		and	r2, r2, #31
  97 0018 0120     		movs	r0, #1
  98 001a 00FA02F2 		lsl	r2, r0, r2
  99 001e 2033     		adds	r3, r3, #32
 100 0020 41F82320 		str	r2, [r1, r3, lsl #2]
1562:../Includes/core_cm4.h **** }
 101              		.loc 1 1562 0
 102 0024 00BF     		nop
 103 0026 0C37     		adds	r7, r7, #12
 104              		.cfi_def_cfa_offset 4
 105 0028 BD46     		mov	sp, r7
 106              		.cfi_def_cfa_register 13
 107              		@ sp needed
 108 002a 5DF8047B 		ldr	r7, [sp], #4
 109              		.cfi_restore 7
 110              		.cfi_def_cfa_offset 0
 111 002e 7047     		bx	lr
 112              	.L6:
 113              		.align	2
 114              	.L5:
 115 0030 00E100E0 		.word	-536813312
 116              		.cfi_endproc
 117              	.LFE109:
 119              		.section	.text.NVIC_SetPriority,"ax",%progbits
 120              		.align	1
 121              		.syntax unified
 122              		.thumb
 123              		.thumb_func
 124              		.fpu fpv4-sp-d16
 126              	NVIC_SetPriority:
 127              	.LFB114:
1563:../Includes/core_cm4.h **** 
1564:../Includes/core_cm4.h **** 
1565:../Includes/core_cm4.h **** /** \brief  Get Pending Interrupt
1566:../Includes/core_cm4.h **** 
1567:../Includes/core_cm4.h ****     The function reads the pending register in the NVIC and returns the pending bit
1568:../Includes/core_cm4.h ****     for the specified interrupt.
1569:../Includes/core_cm4.h **** 
1570:../Includes/core_cm4.h ****     \param [in]      IRQn  Interrupt number.
1571:../Includes/core_cm4.h **** 
1572:../Includes/core_cm4.h ****     \return             0  Interrupt status is not pending.
1573:../Includes/core_cm4.h ****     \return             1  Interrupt status is pending.
1574:../Includes/core_cm4.h ****  */
1575:../Includes/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_GetPendingIRQ(IRQn_Type IRQn)
1576:../Includes/core_cm4.h **** {
1577:../Includes/core_cm4.h ****   return((uint32_t)(((NVIC->ISPR[(((uint32_t)(int32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)(int32_t
1578:../Includes/core_cm4.h **** }
1579:../Includes/core_cm4.h **** 
1580:../Includes/core_cm4.h **** 
1581:../Includes/core_cm4.h **** /** \brief  Set Pending Interrupt
1582:../Includes/core_cm4.h **** 
1583:../Includes/core_cm4.h ****     The function sets the pending bit of an external interrupt.
1584:../Includes/core_cm4.h **** 
1585:../Includes/core_cm4.h ****     \param [in]      IRQn  Interrupt number. Value cannot be negative.
1586:../Includes/core_cm4.h ****  */
1587:../Includes/core_cm4.h **** __STATIC_INLINE void NVIC_SetPendingIRQ(IRQn_Type IRQn)
1588:../Includes/core_cm4.h **** {
1589:../Includes/core_cm4.h ****   NVIC->ISPR[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
1590:../Includes/core_cm4.h **** }
1591:../Includes/core_cm4.h **** 
1592:../Includes/core_cm4.h **** 
1593:../Includes/core_cm4.h **** /** \brief  Clear Pending Interrupt
1594:../Includes/core_cm4.h **** 
1595:../Includes/core_cm4.h ****     The function clears the pending bit of an external interrupt.
1596:../Includes/core_cm4.h **** 
1597:../Includes/core_cm4.h ****     \param [in]      IRQn  External interrupt number. Value cannot be negative.
1598:../Includes/core_cm4.h ****  */
1599:../Includes/core_cm4.h **** __STATIC_INLINE void NVIC_ClearPendingIRQ(IRQn_Type IRQn)
1600:../Includes/core_cm4.h **** {
1601:../Includes/core_cm4.h ****   NVIC->ICPR[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
1602:../Includes/core_cm4.h **** }
1603:../Includes/core_cm4.h **** 
1604:../Includes/core_cm4.h **** 
1605:../Includes/core_cm4.h **** /** \brief  Get Active Interrupt
1606:../Includes/core_cm4.h **** 
1607:../Includes/core_cm4.h ****     The function reads the active register in NVIC and returns the active bit.
1608:../Includes/core_cm4.h **** 
1609:../Includes/core_cm4.h ****     \param [in]      IRQn  Interrupt number.
1610:../Includes/core_cm4.h **** 
1611:../Includes/core_cm4.h ****     \return             0  Interrupt status is not active.
1612:../Includes/core_cm4.h ****     \return             1  Interrupt status is active.
1613:../Includes/core_cm4.h ****  */
1614:../Includes/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_GetActive(IRQn_Type IRQn)
1615:../Includes/core_cm4.h **** {
1616:../Includes/core_cm4.h ****   return((uint32_t)(((NVIC->IABR[(((uint32_t)(int32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)(int32_t
1617:../Includes/core_cm4.h **** }
1618:../Includes/core_cm4.h **** 
1619:../Includes/core_cm4.h **** 
1620:../Includes/core_cm4.h **** /** \brief  Set Interrupt Priority
1621:../Includes/core_cm4.h **** 
1622:../Includes/core_cm4.h ****     The function sets the priority of an interrupt.
1623:../Includes/core_cm4.h **** 
1624:../Includes/core_cm4.h ****     \note The priority cannot be set for every core interrupt.
1625:../Includes/core_cm4.h **** 
1626:../Includes/core_cm4.h ****     \param [in]      IRQn  Interrupt number.
1627:../Includes/core_cm4.h ****     \param [in]  priority  Priority to set.
1628:../Includes/core_cm4.h ****  */
1629:../Includes/core_cm4.h **** __STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
1630:../Includes/core_cm4.h **** {
 128              		.loc 1 1630 0
 129              		.cfi_startproc
 130              		@ args = 0, pretend = 0, frame = 8
 131              		@ frame_needed = 1, uses_anonymous_args = 0
 132              		@ link register save eliminated.
 133 0000 80B4     		push	{r7}
 134              		.cfi_def_cfa_offset 4
 135              		.cfi_offset 7, -4
 136 0002 83B0     		sub	sp, sp, #12
 137              		.cfi_def_cfa_offset 16
 138 0004 00AF     		add	r7, sp, #0
 139              		.cfi_def_cfa_register 7
 140 0006 0346     		mov	r3, r0
 141 0008 3960     		str	r1, [r7]
 142 000a FB71     		strb	r3, [r7, #7]
1631:../Includes/core_cm4.h ****   if((int32_t)IRQn < 0) {
 143              		.loc 1 1631 0
 144 000c 97F90730 		ldrsb	r3, [r7, #7]
 145 0010 002B     		cmp	r3, #0
 146 0012 0BDA     		bge	.L8
1632:../Includes/core_cm4.h ****     SCB->SHP[(((uint32_t)(int32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8 - __NVIC_PRIO_BIT
 147              		.loc 1 1632 0
 148 0014 0D49     		ldr	r1, .L11
 149 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 150 0018 03F00F03 		and	r3, r3, #15
 151 001c 043B     		subs	r3, r3, #4
 152 001e 3A68     		ldr	r2, [r7]
 153 0020 D2B2     		uxtb	r2, r2
 154 0022 1201     		lsls	r2, r2, #4
 155 0024 D2B2     		uxtb	r2, r2
 156 0026 0B44     		add	r3, r3, r1
 157 0028 1A76     		strb	r2, [r3, #24]
1633:../Includes/core_cm4.h ****   }
1634:../Includes/core_cm4.h ****   else {
1635:../Includes/core_cm4.h ****     NVIC->IP[((uint32_t)(int32_t)IRQn)]               = (uint8_t)((priority << (8 - __NVIC_PRIO_BIT
1636:../Includes/core_cm4.h ****   }
1637:../Includes/core_cm4.h **** }
 158              		.loc 1 1637 0
 159 002a 09E0     		b	.L10
 160              	.L8:
1635:../Includes/core_cm4.h ****   }
 161              		.loc 1 1635 0
 162 002c 0849     		ldr	r1, .L11+4
 163 002e 97F90730 		ldrsb	r3, [r7, #7]
 164 0032 3A68     		ldr	r2, [r7]
 165 0034 D2B2     		uxtb	r2, r2
 166 0036 1201     		lsls	r2, r2, #4
 167 0038 D2B2     		uxtb	r2, r2
 168 003a 0B44     		add	r3, r3, r1
 169 003c 83F80023 		strb	r2, [r3, #768]
 170              	.L10:
 171              		.loc 1 1637 0
 172 0040 00BF     		nop
 173 0042 0C37     		adds	r7, r7, #12
 174              		.cfi_def_cfa_offset 4
 175 0044 BD46     		mov	sp, r7
 176              		.cfi_def_cfa_register 13
 177              		@ sp needed
 178 0046 5DF8047B 		ldr	r7, [sp], #4
 179              		.cfi_restore 7
 180              		.cfi_def_cfa_offset 0
 181 004a 7047     		bx	lr
 182              	.L12:
 183              		.align	2
 184              	.L11:
 185 004c 00ED00E0 		.word	-536810240
 186 0050 00E100E0 		.word	-536813312
 187              		.cfi_endproc
 188              	.LFE114:
 190              		.section	.text.NVIC_DisableIRQEx,"ax",%progbits
 191              		.align	1
 192              		.syntax unified
 193              		.thumb
 194              		.thumb_func
 195              		.fpu fpv4-sp-d16
 197              	NVIC_DisableIRQEx:
 198              	.LFB123:
 199              		.file 2 "../Includes/platform.h"
   1:../Includes/platform.h **** /**
   2:../Includes/platform.h ****  *--------------------------------------------------------------------\n
   3:../Includes/platform.h ****  *          HSLU T&A Hochschule Luzern Technik+Architektur            \n
   4:../Includes/platform.h ****  *--------------------------------------------------------------------\n
   5:../Includes/platform.h ****  *
   6:../Includes/platform.h ****  * \brief         Global definitions for the whole project.
   7:../Includes/platform.h ****  * \file
   8:../Includes/platform.h ****  * \author        Christian Jost, christian.jost@hslu.ch
   9:../Includes/platform.h ****  * \date          12.03.20018
  10:../Includes/platform.h ****  *
  11:../Includes/platform.h ****  * $Id: platform.h 102 2018-05-01 14:06:17Z zajost $
  12:../Includes/platform.h ****  *
  13:../Includes/platform.h ****  *--------------------------------------------------------------------
  14:../Includes/platform.h ****  */
  15:../Includes/platform.h **** #ifndef INCLUDES_PLATFORM_H_
  16:../Includes/platform.h **** #define INCLUDES_PLATFORM_H_
  17:../Includes/platform.h **** 
  18:../Includes/platform.h **** #include "MK22F51212.h"
  19:../Includes/platform.h **** 
  20:../Includes/platform.h **** #define TINYK22                           2
  21:../Includes/platform.h **** #define SOLUTION                          0
  22:../Includes/platform.h **** 
  23:../Includes/platform.h **** // ================================================================================================
  24:../Includes/platform.h **** // Configuration
  25:../Includes/platform.h **** // ================================================================================================
  26:../Includes/platform.h **** #define PLATFORM                     TINYK22   // [TINYK22|MC_CAR|AUTO] select target platform
  27:../Includes/platform.h **** #define DEBUG_LED                          0   // [1|0] enable/disable green debug led of the MC-CA
  28:../Includes/platform.h **** 
  29:../Includes/platform.h **** #define TERMINAL_BAUDRATE             9600 //Achtung Baud >57600 muss datentyp Angepasst werden! vo
  30:../Includes/platform.h **** 
  31:../Includes/platform.h **** #define PRIO_UART0                         5  // [0..15] set interrupt priority: 0=max Prio
  32:../Includes/platform.h **** #define PRIO_UART1                         5  // [0..15] set interrupt priority: 0=max Prio
  33:../Includes/platform.h **** #define PRIO_LPUART0                       5  // [0..15] set interrupt priority: 0=max Prio
  34:../Includes/platform.h **** #define PRIO_FTM0                          2  // [0..15] IR
  35:../Includes/platform.h **** #define PRIO_FTM1                          4  // [0..15] Quad decoder
  36:../Includes/platform.h **** #define PRIO_FTM2                          4  // [0..15] Quad decoder
  37:../Includes/platform.h **** #define PRIO_FTM3                         12  // [0..15] Motor-PWM, RGB-Led's
  38:../Includes/platform.h **** 
  39:../Includes/platform.h **** 
  40:../Includes/platform.h **** 
  41:../Includes/platform.h **** // ================================================================================================
  42:../Includes/platform.h **** #define CORECLOCK                  120000000  // 120 MHZ (CPU, UART0, UART1)
  43:../Includes/platform.h **** #define BUSCLOCK                    60000000  // 60 MHz
  44:../Includes/platform.h **** #define FIXED_SYSTEM_CLOCK            250000  // 250 kHz
  45:../Includes/platform.h **** 
  46:../Includes/platform.h **** 
  47:../Includes/platform.h **** #define TGT_IS_MCCAR                        ((SIM_SDID & SIM_SDID_PINID_MASK) == 0x08) // 100-pin
  48:../Includes/platform.h **** #define TGT_IS_TINYK22                      ((SIM_SDID & SIM_SDID_PINID_MASK) == 0x05) // 64-pin
  49:../Includes/platform.h **** 
  50:../Includes/platform.h **** #define NULL                     ((void *)0)
  51:../Includes/platform.h **** #define TRUE                               1
  52:../Includes/platform.h **** #define FALSE                              0
  53:../Includes/platform.h **** 
  54:../Includes/platform.h **** typedef char bool;
  55:../Includes/platform.h **** 
  56:../Includes/platform.h **** /**
  57:../Includes/platform.h ****  * @brief Disable External Interrupt
  58:../Includes/platform.h ****  *
  59:../Includes/platform.h ****  * The function disables a device-specific interrupt in the NVIC interrupt controller
  60:../Includes/platform.h ****  * and executes a DSB and ISB instruction.
  61:../Includes/platform.h ****  *
  62:../Includes/platform.h ****  * @see
  63:../Includes/platform.h ****  *   4.6. Disabling Interrupts using NVIC
  64:../Includes/platform.h ****  *   \n
  65:../Includes/platform.h ****  *   http://infocenter.arm.com/help/index.jsp?topic=/com.arm.doc.dai0321a/BIHHFHJD.html
  66:../Includes/platform.h ****  *   \n
  67:../Includes/platform.h ****  *   if it is necessary to ensure an interrupt will not be triggered after disabling it in the NVIC
  68:../Includes/platform.h ****  *   add a DSB instruction and then an ISB instruction.
  69:../Includes/platform.h ****  */
  70:../Includes/platform.h **** __STATIC_INLINE void NVIC_DisableIRQEx(IRQn_Type IRQn)
  71:../Includes/platform.h **** {
 200              		.loc 2 71 0
 201              		.cfi_startproc
 202              		@ args = 0, pretend = 0, frame = 8
 203              		@ frame_needed = 1, uses_anonymous_args = 0
 204 0000 80B5     		push	{r7, lr}
 205              		.cfi_def_cfa_offset 8
 206              		.cfi_offset 7, -8
 207              		.cfi_offset 14, -4
 208 0002 82B0     		sub	sp, sp, #8
 209              		.cfi_def_cfa_offset 16
 210 0004 00AF     		add	r7, sp, #0
 211              		.cfi_def_cfa_register 7
 212 0006 0346     		mov	r3, r0
 213 0008 FB71     		strb	r3, [r7, #7]
  72:../Includes/platform.h ****   NVIC_DisableIRQ(IRQn);
 214              		.loc 2 72 0
 215 000a 97F90730 		ldrsb	r3, [r7, #7]
 216 000e 1846     		mov	r0, r3
 217 0010 FFF7FEFF 		bl	NVIC_DisableIRQ
  73:../Includes/platform.h ****   __asm volatile("dsb");   // data synchronization barrier
 218              		.loc 2 73 0
 219              		.syntax unified
 220              	@ 73 "../Includes/platform.h" 1
 221 0014 BFF34F8F 		dsb
 222              	@ 0 "" 2
  74:../Includes/platform.h ****   __asm volatile("isb");   // instruction synchronization barrier
 223              		.loc 2 74 0
 224              	@ 74 "../Includes/platform.h" 1
 225 0018 BFF36F8F 		isb
 226              	@ 0 "" 2
  75:../Includes/platform.h **** }
 227              		.loc 2 75 0
 228              		.thumb
 229              		.syntax unified
 230 001c 00BF     		nop
 231 001e 0837     		adds	r7, r7, #8
 232              		.cfi_def_cfa_offset 8
 233 0020 BD46     		mov	sp, r7
 234              		.cfi_def_cfa_register 13
 235              		@ sp needed
 236 0022 80BD     		pop	{r7, pc}
 237              		.cfi_endproc
 238              	.LFE123:
 240              		.section	.bss.rxBuf,"aw",%nobits
 241              		.align	2
 244              	rxBuf:
 245 0000 00000000 		.space	512
 245      00000000 
 245      00000000 
 245      00000000 
 245      00000000 
 246              		.section	.bss.rxBufCount,"aw",%nobits
 247              		.align	1
 250              	rxBufCount:
 251 0000 0000     		.space	2
 252              		.section	.bss.rxBufWritePos,"aw",%nobits
 253              		.align	1
 256              	rxBufWritePos:
 257 0000 0000     		.space	2
 258              		.section	.bss.rxBufReadPos,"aw",%nobits
 259              		.align	1
 262              	rxBufReadPos:
 263 0000 0000     		.space	2
 264              		.section	.bss.txBuf,"aw",%nobits
 265              		.align	2
 268              	txBuf:
 269 0000 00000000 		.space	512
 269      00000000 
 269      00000000 
 269      00000000 
 269      00000000 
 270              		.section	.bss.txBufCount,"aw",%nobits
 271              		.align	1
 274              	txBufCount:
 275 0000 0000     		.space	2
 276              		.section	.bss.txBufWritePos,"aw",%nobits
 277              		.align	1
 280              	txBufWritePos:
 281 0000 0000     		.space	2
 282              		.section	.bss.txBufReadPos,"aw",%nobits
 283              		.align	1
 286              	txBufReadPos:
 287 0000 0000     		.space	2
 288              		.section	.text.LPUART0_IRQHandler,"ax",%progbits
 289              		.align	1
 290              		.global	LPUART0_IRQHandler
 291              		.syntax unified
 292              		.thumb
 293              		.thumb_func
 294              		.fpu fpv4-sp-d16
 296              	LPUART0_IRQHandler:
 297              	.LFB125:
 298              		.file 3 "../Sources/com/lpuart0.c"
   1:../Sources/com/lpuart0.c **** /**
   2:../Sources/com/lpuart0.c ****  *--------------------------------------------------------------------\n
   3:../Sources/com/lpuart0.c ****  *          HSLU T&A Hochschule Luzern Technik+Architektur            \n
   4:../Sources/com/lpuart0.c ****  *--------------------------------------------------------------------\n
   5:../Sources/com/lpuart0.c ****  *
   6:../Sources/com/lpuart0.c ****  * \brief         driver for the serial communication (lpuart0 MC-Car)
   7:../Sources/com/lpuart0.c ****  * \file
   8:../Sources/com/lpuart0.c ****  * \author        Christian Jost, christian.jost@hslu.ch
   9:../Sources/com/lpuart0.c ****  * \date          19.03.2018
  10:../Sources/com/lpuart0.c ****  *
  11:../Sources/com/lpuart0.c ****  * $Id: lpuart0.c 94 2018-04-25 11:07:33Z zajost $
  12:../Sources/com/lpuart0.c ****  *
  13:../Sources/com/lpuart0.c ****  *--------------------------------------------------------------------
  14:../Sources/com/lpuart0.c ****  */
  15:../Sources/com/lpuart0.c **** #include "platform.h"
  16:../Sources/com/lpuart0.c **** #include "uart.h"
  17:../Sources/com/lpuart0.c **** 
  18:../Sources/com/lpuart0.c **** #if LPUART0_EN
  19:../Sources/com/lpuart0.c **** 
  20:../Sources/com/lpuart0.c **** 
  21:../Sources/com/lpuart0.c **** /**
  22:../Sources/com/lpuart0.c ****  * the receive queue of this driver, implemented as ring buffer
  23:../Sources/com/lpuart0.c ****  */
  24:../Sources/com/lpuart0.c **** static char rxBuf[LPUART0_RX_BUF_SIZE];
  25:../Sources/com/lpuart0.c **** static volatile uint16_t rxBufCount;
  26:../Sources/com/lpuart0.c **** static uint16_t rxBufWritePos;
  27:../Sources/com/lpuart0.c **** static uint16_t rxBufReadPos;
  28:../Sources/com/lpuart0.c **** 
  29:../Sources/com/lpuart0.c **** /**
  30:../Sources/com/lpuart0.c ****  * the transmit queue of this driver, implemented as ring buffer
  31:../Sources/com/lpuart0.c ****  */
  32:../Sources/com/lpuart0.c **** static char txBuf[LPUART0_TX_BUF_SIZE];
  33:../Sources/com/lpuart0.c **** static volatile uint16_t txBufCount;
  34:../Sources/com/lpuart0.c **** static uint16_t txBufWritePos;
  35:../Sources/com/lpuart0.c **** static uint16_t txBufReadPos;
  36:../Sources/com/lpuart0.c **** 
  37:../Sources/com/lpuart0.c **** #define ENABLE_LPUART0_INTERRUPTS()     NVIC_EnableIRQ(LPUART0_IRQn)
  38:../Sources/com/lpuart0.c **** #define DISABLE_LPUART0_INTERRUPTS()    NVIC_DisableIRQEx(LPUART0_IRQn)
  39:../Sources/com/lpuart0.c **** 
  40:../Sources/com/lpuart0.c **** 
  41:../Sources/com/lpuart0.c **** 
  42:../Sources/com/lpuart0.c **** /**
  43:../Sources/com/lpuart0.c ****  * @brief LPUART Interrupt Service Routine
  44:../Sources/com/lpuart0.c ****  * - Received bytes are stored in the queue rxBuf
  45:../Sources/com/lpuart0.c ****  * - Bytes in the queue txBuf are sent
  46:../Sources/com/lpuart0.c ****  */
  47:../Sources/com/lpuart0.c **** void LPUART0_IRQHandler(void)
  48:../Sources/com/lpuart0.c **** {
 299              		.loc 3 48 0
 300              		.cfi_startproc
 301              		@ args = 0, pretend = 0, frame = 8
 302              		@ frame_needed = 1, uses_anonymous_args = 0
 303              		@ link register save eliminated.
 304 0000 80B4     		push	{r7}
 305              		.cfi_def_cfa_offset 4
 306              		.cfi_offset 7, -4
 307 0002 83B0     		sub	sp, sp, #12
 308              		.cfi_def_cfa_offset 16
 309 0004 00AF     		add	r7, sp, #0
 310              		.cfi_def_cfa_register 7
  49:../Sources/com/lpuart0.c ****   OnEnterLpUart0ISR();
  50:../Sources/com/lpuart0.c ****   uint32_t status = LPUART0_STAT;
 311              		.loc 3 50 0
 312 0006 314B     		ldr	r3, .L19
 313 0008 5B68     		ldr	r3, [r3, #4]
 314 000a 7B60     		str	r3, [r7, #4]
  51:../Sources/com/lpuart0.c ****   uint8_t data = (uint8_t)LPUART0_DATA;
 315              		.loc 3 51 0
 316 000c 2F4B     		ldr	r3, .L19
 317 000e DB68     		ldr	r3, [r3, #12]
 318 0010 FB70     		strb	r3, [r7, #3]
  52:../Sources/com/lpuart0.c **** 
  53:../Sources/com/lpuart0.c ****   if (status & LPUART_STAT_RDRF_MASK)
 319              		.loc 3 53 0
 320 0012 7B68     		ldr	r3, [r7, #4]
 321 0014 03F40013 		and	r3, r3, #2097152
 322 0018 002B     		cmp	r3, #0
 323 001a 1FD0     		beq	.L15
  54:../Sources/com/lpuart0.c ****   {
  55:../Sources/com/lpuart0.c ****     if (rxBufCount < LPUART0_RX_BUF_SIZE)
 324              		.loc 3 55 0
 325 001c 2C4B     		ldr	r3, .L19+4
 326 001e 1B88     		ldrh	r3, [r3]	@ movhi
 327 0020 9BB2     		uxth	r3, r3
 328 0022 B3F5007F 		cmp	r3, #512
 329 0026 19D2     		bcs	.L15
  56:../Sources/com/lpuart0.c ****     {
  57:../Sources/com/lpuart0.c ****       rxBuf[rxBufWritePos++] = data;
 330              		.loc 3 57 0
 331 0028 2A4B     		ldr	r3, .L19+8
 332 002a 1B88     		ldrh	r3, [r3]
 333 002c 5A1C     		adds	r2, r3, #1
 334 002e 91B2     		uxth	r1, r2
 335 0030 284A     		ldr	r2, .L19+8
 336 0032 1180     		strh	r1, [r2]	@ movhi
 337 0034 1A46     		mov	r2, r3
 338 0036 97F90310 		ldrsb	r1, [r7, #3]
 339 003a 274B     		ldr	r3, .L19+12
 340 003c 9954     		strb	r1, [r3, r2]
  58:../Sources/com/lpuart0.c ****       rxBufCount++;
 341              		.loc 3 58 0
 342 003e 244B     		ldr	r3, .L19+4
 343 0040 1B88     		ldrh	r3, [r3]	@ movhi
 344 0042 9BB2     		uxth	r3, r3
 345 0044 0133     		adds	r3, r3, #1
 346 0046 9AB2     		uxth	r2, r3
 347 0048 214B     		ldr	r3, .L19+4
 348 004a 1A80     		strh	r2, [r3]	@ movhi
  59:../Sources/com/lpuart0.c ****       if (rxBufWritePos == LPUART0_RX_BUF_SIZE) rxBufWritePos = 0;
 349              		.loc 3 59 0
 350 004c 214B     		ldr	r3, .L19+8
 351 004e 1B88     		ldrh	r3, [r3]
 352 0050 B3F5007F 		cmp	r3, #512
 353 0054 02D1     		bne	.L15
 354              		.loc 3 59 0 is_stmt 0 discriminator 1
 355 0056 1F4B     		ldr	r3, .L19+8
 356 0058 0022     		movs	r2, #0
 357 005a 1A80     		strh	r2, [r3]	@ movhi
 358              	.L15:
  60:../Sources/com/lpuart0.c ****     }
  61:../Sources/com/lpuart0.c ****   }
  62:../Sources/com/lpuart0.c **** 
  63:../Sources/com/lpuart0.c ****   if (status & LPUART_STAT_TDRE_MASK)
 359              		.loc 3 63 0 is_stmt 1
 360 005c 7B68     		ldr	r3, [r7, #4]
 361 005e 03F40003 		and	r3, r3, #8388608
 362 0062 002B     		cmp	r3, #0
 363 0064 25D0     		beq	.L16
  64:../Sources/com/lpuart0.c ****   {
  65:../Sources/com/lpuart0.c ****     if (txBufCount > 0)
 364              		.loc 3 65 0
 365 0066 1D4B     		ldr	r3, .L19+16
 366 0068 1B88     		ldrh	r3, [r3]	@ movhi
 367 006a 9BB2     		uxth	r3, r3
 368 006c 002B     		cmp	r3, #0
 369 006e 1AD0     		beq	.L17
  66:../Sources/com/lpuart0.c ****     {
  67:../Sources/com/lpuart0.c ****       LPUART0_DATA = txBuf[txBufReadPos++];
 370              		.loc 3 67 0
 371 0070 164A     		ldr	r2, .L19
 372 0072 1B4B     		ldr	r3, .L19+20
 373 0074 1B88     		ldrh	r3, [r3]
 374 0076 591C     		adds	r1, r3, #1
 375 0078 88B2     		uxth	r0, r1
 376 007a 1949     		ldr	r1, .L19+20
 377 007c 0880     		strh	r0, [r1]	@ movhi
 378 007e 1946     		mov	r1, r3
 379 0080 184B     		ldr	r3, .L19+24
 380 0082 5B56     		ldrsb	r3, [r3, r1]
 381 0084 D360     		str	r3, [r2, #12]
  68:../Sources/com/lpuart0.c ****       txBufCount--;
 382              		.loc 3 68 0
 383 0086 154B     		ldr	r3, .L19+16
 384 0088 1B88     		ldrh	r3, [r3]	@ movhi
 385 008a 9BB2     		uxth	r3, r3
 386 008c 013B     		subs	r3, r3, #1
 387 008e 9AB2     		uxth	r2, r3
 388 0090 124B     		ldr	r3, .L19+16
 389 0092 1A80     		strh	r2, [r3]	@ movhi
  69:../Sources/com/lpuart0.c ****       if (txBufReadPos == LPUART0_TX_BUF_SIZE) txBufReadPos = 0;
 390              		.loc 3 69 0
 391 0094 124B     		ldr	r3, .L19+20
 392 0096 1B88     		ldrh	r3, [r3]
 393 0098 B3F5007F 		cmp	r3, #512
 394 009c 09D1     		bne	.L16
 395              		.loc 3 69 0 is_stmt 0 discriminator 1
 396 009e 104B     		ldr	r3, .L19+20
 397 00a0 0022     		movs	r2, #0
 398 00a2 1A80     		strh	r2, [r3]	@ movhi
 399 00a4 05E0     		b	.L16
 400              	.L17:
  70:../Sources/com/lpuart0.c ****     }
  71:../Sources/com/lpuart0.c ****     else
  72:../Sources/com/lpuart0.c ****     {
  73:../Sources/com/lpuart0.c ****       LPUART0_CTRL &= ~LPUART_CTRL_TIE_MASK;
 401              		.loc 3 73 0 is_stmt 1
 402 00a6 094A     		ldr	r2, .L19
 403 00a8 084B     		ldr	r3, .L19
 404 00aa 9B68     		ldr	r3, [r3, #8]
 405 00ac 23F40003 		bic	r3, r3, #8388608
 406 00b0 9360     		str	r3, [r2, #8]
 407              	.L16:
  74:../Sources/com/lpuart0.c ****     }
  75:../Sources/com/lpuart0.c ****   }
  76:../Sources/com/lpuart0.c **** 
  77:../Sources/com/lpuart0.c ****   // clear the error flags in the STAT register
  78:../Sources/com/lpuart0.c ****   LPUART0_STAT |= (LPUART_STAT_OR_MASK | LPUART_STAT_NF_MASK | LPUART_STAT_FE_MASK);
 408              		.loc 3 78 0
 409 00b2 064A     		ldr	r2, .L19
 410 00b4 054B     		ldr	r3, .L19
 411 00b6 5B68     		ldr	r3, [r3, #4]
 412 00b8 43F46023 		orr	r3, r3, #917504
 413 00bc 5360     		str	r3, [r2, #4]
  79:../Sources/com/lpuart0.c ****   OnExitLpUart0ISR();
  80:../Sources/com/lpuart0.c **** }
 414              		.loc 3 80 0
 415 00be 00BF     		nop
 416 00c0 0C37     		adds	r7, r7, #12
 417              		.cfi_def_cfa_offset 4
 418 00c2 BD46     		mov	sp, r7
 419              		.cfi_def_cfa_register 13
 420              		@ sp needed
 421 00c4 5DF8047B 		ldr	r7, [sp], #4
 422              		.cfi_restore 7
 423              		.cfi_def_cfa_offset 0
 424 00c8 7047     		bx	lr
 425              	.L20:
 426 00ca 00BF     		.align	2
 427              	.L19:
 428 00cc 00A00240 		.word	1073913856
 429 00d0 00000000 		.word	rxBufCount
 430 00d4 00000000 		.word	rxBufWritePos
 431 00d8 00000000 		.word	rxBuf
 432 00dc 00000000 		.word	txBufCount
 433 00e0 00000000 		.word	txBufReadPos
 434 00e4 00000000 		.word	txBuf
 435              		.cfi_endproc
 436              	.LFE125:
 438              		.section	.text.lpuart0WriteChar,"ax",%progbits
 439              		.align	1
 440              		.global	lpuart0WriteChar
 441              		.syntax unified
 442              		.thumb
 443              		.thumb_func
 444              		.fpu fpv4-sp-d16
 446              	lpuart0WriteChar:
 447              	.LFB126:
  81:../Sources/com/lpuart0.c **** 
  82:../Sources/com/lpuart0.c **** /**
  83:../Sources/com/lpuart0.c ****  * Writes one Byte in the transmit buffer.
  84:../Sources/com/lpuart0.c ****  *
  85:../Sources/com/lpuart0.c ****  * @details
  86:../Sources/com/lpuart0.c ****  *   Switching on the TIE interrupt causes an interrupt to be
  87:../Sources/com/lpuart0.c ****  *   triggered immediately. The function blocks until there is
  88:../Sources/com/lpuart0.c ****  *   space in the txBuf queue.
  89:../Sources/com/lpuart0.c ****  *
  90:../Sources/com/lpuart0.c ****  * @param[in] ch
  91:../Sources/com/lpuart0.c ****  *   the byte to send
  92:../Sources/com/lpuart0.c ****  */
  93:../Sources/com/lpuart0.c **** void lpuart0WriteChar(char ch)
  94:../Sources/com/lpuart0.c **** {
 448              		.loc 3 94 0
 449              		.cfi_startproc
 450              		@ args = 0, pretend = 0, frame = 8
 451              		@ frame_needed = 1, uses_anonymous_args = 0
 452 0000 80B5     		push	{r7, lr}
 453              		.cfi_def_cfa_offset 8
 454              		.cfi_offset 7, -8
 455              		.cfi_offset 14, -4
 456 0002 82B0     		sub	sp, sp, #8
 457              		.cfi_def_cfa_offset 16
 458 0004 00AF     		add	r7, sp, #0
 459              		.cfi_def_cfa_register 7
 460 0006 0346     		mov	r3, r0
 461 0008 FB71     		strb	r3, [r7, #7]
  95:../Sources/com/lpuart0.c ****   while(txBufCount >= LPUART0_TX_BUF_SIZE);
 462              		.loc 3 95 0
 463 000a 00BF     		nop
 464              	.L22:
 465              		.loc 3 95 0 is_stmt 0 discriminator 1
 466 000c 174B     		ldr	r3, .L24
 467 000e 1B88     		ldrh	r3, [r3]	@ movhi
 468 0010 9BB2     		uxth	r3, r3
 469 0012 B3F5007F 		cmp	r3, #512
 470 0016 F9D2     		bcs	.L22
  96:../Sources/com/lpuart0.c ****   txBuf[txBufWritePos++] = ch;
 471              		.loc 3 96 0 is_stmt 1
 472 0018 154B     		ldr	r3, .L24+4
 473 001a 1B88     		ldrh	r3, [r3]
 474 001c 5A1C     		adds	r2, r3, #1
 475 001e 91B2     		uxth	r1, r2
 476 0020 134A     		ldr	r2, .L24+4
 477 0022 1180     		strh	r1, [r2]	@ movhi
 478 0024 1946     		mov	r1, r3
 479 0026 134A     		ldr	r2, .L24+8
 480 0028 FB79     		ldrb	r3, [r7, #7]
 481 002a 5354     		strb	r3, [r2, r1]
  97:../Sources/com/lpuart0.c ****   if (txBufWritePos == LPUART0_TX_BUF_SIZE) txBufWritePos = 0;
 482              		.loc 3 97 0
 483 002c 104B     		ldr	r3, .L24+4
 484 002e 1B88     		ldrh	r3, [r3]
 485 0030 B3F5007F 		cmp	r3, #512
 486 0034 02D1     		bne	.L23
 487              		.loc 3 97 0 is_stmt 0 discriminator 1
 488 0036 0E4B     		ldr	r3, .L24+4
 489 0038 0022     		movs	r2, #0
 490 003a 1A80     		strh	r2, [r3]	@ movhi
 491              	.L23:
  98:../Sources/com/lpuart0.c ****   DISABLE_LPUART0_INTERRUPTS();
 492              		.loc 3 98 0 is_stmt 1
 493 003c 1E20     		movs	r0, #30
 494 003e FFF7FEFF 		bl	NVIC_DisableIRQEx
  99:../Sources/com/lpuart0.c ****   txBufCount++;
 495              		.loc 3 99 0
 496 0042 0A4B     		ldr	r3, .L24
 497 0044 1B88     		ldrh	r3, [r3]	@ movhi
 498 0046 9BB2     		uxth	r3, r3
 499 0048 0133     		adds	r3, r3, #1
 500 004a 9AB2     		uxth	r2, r3
 501 004c 074B     		ldr	r3, .L24
 502 004e 1A80     		strh	r2, [r3]	@ movhi
 100:../Sources/com/lpuart0.c ****   ENABLE_LPUART0_INTERRUPTS();
 503              		.loc 3 100 0
 504 0050 1E20     		movs	r0, #30
 505 0052 FFF7FEFF 		bl	NVIC_EnableIRQ
 101:../Sources/com/lpuart0.c ****   LPUART0_CTRL |= LPUART_CTRL_TIE_MASK;
 506              		.loc 3 101 0
 507 0056 084A     		ldr	r2, .L24+12
 508 0058 074B     		ldr	r3, .L24+12
 509 005a 9B68     		ldr	r3, [r3, #8]
 510 005c 43F40003 		orr	r3, r3, #8388608
 511 0060 9360     		str	r3, [r2, #8]
 102:../Sources/com/lpuart0.c **** }
 512              		.loc 3 102 0
 513 0062 00BF     		nop
 514 0064 0837     		adds	r7, r7, #8
 515              		.cfi_def_cfa_offset 8
 516 0066 BD46     		mov	sp, r7
 517              		.cfi_def_cfa_register 13
 518              		@ sp needed
 519 0068 80BD     		pop	{r7, pc}
 520              	.L25:
 521 006a 00BF     		.align	2
 522              	.L24:
 523 006c 00000000 		.word	txBufCount
 524 0070 00000000 		.word	txBufWritePos
 525 0074 00000000 		.word	txBuf
 526 0078 00A00240 		.word	1073913856
 527              		.cfi_endproc
 528              	.LFE126:
 530              		.section	.text.lpuart0Write,"ax",%progbits
 531              		.align	1
 532              		.global	lpuart0Write
 533              		.syntax unified
 534              		.thumb
 535              		.thumb_func
 536              		.fpu fpv4-sp-d16
 538              	lpuart0Write:
 539              	.LFB127:
 103:../Sources/com/lpuart0.c **** 
 104:../Sources/com/lpuart0.c **** /**
 105:../Sources/com/lpuart0.c ****  * Writes a null terminated string in the send buffer. If the
 106:../Sources/com/lpuart0.c ****  * string is null, the function returns immediately.
 107:../Sources/com/lpuart0.c ****  *
 108:../Sources/com/lpuart0.c ****  * @param[in] str
 109:../Sources/com/lpuart0.c ****  *   the null terminated string to send
 110:../Sources/com/lpuart0.c ****  */
 111:../Sources/com/lpuart0.c **** void lpuart0Write(const char *str)
 112:../Sources/com/lpuart0.c **** {
 540              		.loc 3 112 0
 541              		.cfi_startproc
 542              		@ args = 0, pretend = 0, frame = 8
 543              		@ frame_needed = 1, uses_anonymous_args = 0
 544 0000 80B5     		push	{r7, lr}
 545              		.cfi_def_cfa_offset 8
 546              		.cfi_offset 7, -8
 547              		.cfi_offset 14, -4
 548 0002 82B0     		sub	sp, sp, #8
 549              		.cfi_def_cfa_offset 16
 550 0004 00AF     		add	r7, sp, #0
 551              		.cfi_def_cfa_register 7
 552 0006 7860     		str	r0, [r7, #4]
 113:../Sources/com/lpuart0.c ****   if (str == NULL) return;
 553              		.loc 3 113 0
 554 0008 7B68     		ldr	r3, [r7, #4]
 555 000a 002B     		cmp	r3, #0
 556 000c 0ED0     		beq	.L31
 114:../Sources/com/lpuart0.c ****   while (*str != '\0') lpuart0WriteChar(*str++);
 557              		.loc 3 114 0
 558 000e 07E0     		b	.L29
 559              	.L30:
 560              		.loc 3 114 0 is_stmt 0 discriminator 2
 561 0010 7B68     		ldr	r3, [r7, #4]
 562 0012 5A1C     		adds	r2, r3, #1
 563 0014 7A60     		str	r2, [r7, #4]
 564 0016 93F90030 		ldrsb	r3, [r3]
 565 001a 1846     		mov	r0, r3
 566 001c FFF7FEFF 		bl	lpuart0WriteChar
 567              	.L29:
 568              		.loc 3 114 0 discriminator 1
 569 0020 7B68     		ldr	r3, [r7, #4]
 570 0022 93F90030 		ldrsb	r3, [r3]
 571 0026 002B     		cmp	r3, #0
 572 0028 F2D1     		bne	.L30
 573 002a 00E0     		b	.L26
 574              	.L31:
 113:../Sources/com/lpuart0.c ****   if (str == NULL) return;
 575              		.loc 3 113 0 is_stmt 1
 576 002c 00BF     		nop
 577              	.L26:
 115:../Sources/com/lpuart0.c **** }
 578              		.loc 3 115 0
 579 002e 0837     		adds	r7, r7, #8
 580              		.cfi_def_cfa_offset 8
 581 0030 BD46     		mov	sp, r7
 582              		.cfi_def_cfa_register 13
 583              		@ sp needed
 584 0032 80BD     		pop	{r7, pc}
 585              		.cfi_endproc
 586              	.LFE127:
 588              		.section	.text.lpuart0WriteLine,"ax",%progbits
 589              		.align	1
 590              		.global	lpuart0WriteLine
 591              		.syntax unified
 592              		.thumb
 593              		.thumb_func
 594              		.fpu fpv4-sp-d16
 596              	lpuart0WriteLine:
 597              	.LFB128:
 116:../Sources/com/lpuart0.c **** 
 117:../Sources/com/lpuart0.c **** /**
 118:../Sources/com/lpuart0.c ****  * Writes a null terminated string in the send buffer. If the
 119:../Sources/com/lpuart0.c ****  * string is null, only a new new line character is sent.
 120:../Sources/com/lpuart0.c ****  *
 121:../Sources/com/lpuart0.c ****  * @param[in] str
 122:../Sources/com/lpuart0.c ****  *   the null terminated string to send
 123:../Sources/com/lpuart0.c ****  */
 124:../Sources/com/lpuart0.c **** void lpuart0WriteLine(const char *str)
 125:../Sources/com/lpuart0.c **** {
 598              		.loc 3 125 0
 599              		.cfi_startproc
 600              		@ args = 0, pretend = 0, frame = 8
 601              		@ frame_needed = 1, uses_anonymous_args = 0
 602 0000 80B5     		push	{r7, lr}
 603              		.cfi_def_cfa_offset 8
 604              		.cfi_offset 7, -8
 605              		.cfi_offset 14, -4
 606 0002 82B0     		sub	sp, sp, #8
 607              		.cfi_def_cfa_offset 16
 608 0004 00AF     		add	r7, sp, #0
 609              		.cfi_def_cfa_register 7
 610 0006 7860     		str	r0, [r7, #4]
 126:../Sources/com/lpuart0.c ****   lpuart0Write(str);
 611              		.loc 3 126 0
 612 0008 7868     		ldr	r0, [r7, #4]
 613 000a FFF7FEFF 		bl	lpuart0Write
 127:../Sources/com/lpuart0.c ****   lpuart0WriteChar(NEW_LINE);
 614              		.loc 3 127 0
 615 000e 0A20     		movs	r0, #10
 616 0010 FFF7FEFF 		bl	lpuart0WriteChar
 128:../Sources/com/lpuart0.c **** }
 617              		.loc 3 128 0
 618 0014 00BF     		nop
 619 0016 0837     		adds	r7, r7, #8
 620              		.cfi_def_cfa_offset 8
 621 0018 BD46     		mov	sp, r7
 622              		.cfi_def_cfa_register 13
 623              		@ sp needed
 624 001a 80BD     		pop	{r7, pc}
 625              		.cfi_endproc
 626              	.LFE128:
 628              		.section	.text.lpuart0ReadChar,"ax",%progbits
 629              		.align	1
 630              		.global	lpuart0ReadChar
 631              		.syntax unified
 632              		.thumb
 633              		.thumb_func
 634              		.fpu fpv4-sp-d16
 636              	lpuart0ReadChar:
 637              	.LFB129:
 129:../Sources/com/lpuart0.c **** 
 130:../Sources/com/lpuart0.c **** 
 131:../Sources/com/lpuart0.c **** /**
 132:../Sources/com/lpuart0.c ****  * Reads one char out of the rxBuf queue. The function blocks
 133:../Sources/com/lpuart0.c ****  * until there is at least one byte in the queue.
 134:../Sources/com/lpuart0.c ****  *
 135:../Sources/com/lpuart0.c ****  * @return
 136:../Sources/com/lpuart0.c ****  *   the received byte
 137:../Sources/com/lpuart0.c ****  */
 138:../Sources/com/lpuart0.c **** char lpuart0ReadChar(void)
 139:../Sources/com/lpuart0.c **** {
 638              		.loc 3 139 0
 639              		.cfi_startproc
 640              		@ args = 0, pretend = 0, frame = 8
 641              		@ frame_needed = 1, uses_anonymous_args = 0
 642 0000 80B5     		push	{r7, lr}
 643              		.cfi_def_cfa_offset 8
 644              		.cfi_offset 7, -8
 645              		.cfi_offset 14, -4
 646 0002 82B0     		sub	sp, sp, #8
 647              		.cfi_def_cfa_offset 16
 648 0004 00AF     		add	r7, sp, #0
 649              		.cfi_def_cfa_register 7
 140:../Sources/com/lpuart0.c ****   char ch;
 141:../Sources/com/lpuart0.c ****   while (rxBufCount == 0);
 650              		.loc 3 141 0
 651 0006 00BF     		nop
 652              	.L34:
 653              		.loc 3 141 0 is_stmt 0 discriminator 1
 654 0008 144B     		ldr	r3, .L37
 655 000a 1B88     		ldrh	r3, [r3]	@ movhi
 656 000c 9BB2     		uxth	r3, r3
 657 000e 002B     		cmp	r3, #0
 658 0010 FAD0     		beq	.L34
 142:../Sources/com/lpuart0.c ****   ch = rxBuf[rxBufReadPos++];
 659              		.loc 3 142 0 is_stmt 1
 660 0012 134B     		ldr	r3, .L37+4
 661 0014 1B88     		ldrh	r3, [r3]
 662 0016 5A1C     		adds	r2, r3, #1
 663 0018 91B2     		uxth	r1, r2
 664 001a 114A     		ldr	r2, .L37+4
 665 001c 1180     		strh	r1, [r2]	@ movhi
 666 001e 1A46     		mov	r2, r3
 667 0020 104B     		ldr	r3, .L37+8
 668 0022 9B5C     		ldrb	r3, [r3, r2]
 669 0024 FB71     		strb	r3, [r7, #7]
 143:../Sources/com/lpuart0.c ****   if (rxBufReadPos == LPUART0_RX_BUF_SIZE) rxBufReadPos = 0;
 670              		.loc 3 143 0
 671 0026 0E4B     		ldr	r3, .L37+4
 672 0028 1B88     		ldrh	r3, [r3]
 673 002a B3F5007F 		cmp	r3, #512
 674 002e 02D1     		bne	.L35
 675              		.loc 3 143 0 is_stmt 0 discriminator 1
 676 0030 0B4B     		ldr	r3, .L37+4
 677 0032 0022     		movs	r2, #0
 678 0034 1A80     		strh	r2, [r3]	@ movhi
 679              	.L35:
 144:../Sources/com/lpuart0.c ****   DISABLE_LPUART0_INTERRUPTS();
 680              		.loc 3 144 0 is_stmt 1
 681 0036 1E20     		movs	r0, #30
 682 0038 FFF7FEFF 		bl	NVIC_DisableIRQEx
 145:../Sources/com/lpuart0.c ****   rxBufCount--;
 683              		.loc 3 145 0
 684 003c 074B     		ldr	r3, .L37
 685 003e 1B88     		ldrh	r3, [r3]	@ movhi
 686 0040 9BB2     		uxth	r3, r3
 687 0042 013B     		subs	r3, r3, #1
 688 0044 9AB2     		uxth	r2, r3
 689 0046 054B     		ldr	r3, .L37
 690 0048 1A80     		strh	r2, [r3]	@ movhi
 146:../Sources/com/lpuart0.c ****   ENABLE_LPUART0_INTERRUPTS();
 691              		.loc 3 146 0
 692 004a 1E20     		movs	r0, #30
 693 004c FFF7FEFF 		bl	NVIC_EnableIRQ
 147:../Sources/com/lpuart0.c ****   return ch;
 694              		.loc 3 147 0
 695 0050 97F90730 		ldrsb	r3, [r7, #7]
 148:../Sources/com/lpuart0.c **** }
 696              		.loc 3 148 0
 697 0054 1846     		mov	r0, r3
 698 0056 0837     		adds	r7, r7, #8
 699              		.cfi_def_cfa_offset 8
 700 0058 BD46     		mov	sp, r7
 701              		.cfi_def_cfa_register 13
 702              		@ sp needed
 703 005a 80BD     		pop	{r7, pc}
 704              	.L38:
 705              		.align	2
 706              	.L37:
 707 005c 00000000 		.word	rxBufCount
 708 0060 00000000 		.word	rxBufReadPos
 709 0064 00000000 		.word	rxBuf
 710              		.cfi_endproc
 711              	.LFE129:
 713              		.section	.text.lpuart0ReadLine,"ax",%progbits
 714              		.align	1
 715              		.global	lpuart0ReadLine
 716              		.syntax unified
 717              		.thumb
 718              		.thumb_func
 719              		.fpu fpv4-sp-d16
 721              	lpuart0ReadLine:
 722              	.LFB130:
 149:../Sources/com/lpuart0.c **** 
 150:../Sources/com/lpuart0.c **** /**
 151:../Sources/com/lpuart0.c ****  * Reads a null terminated string out of the rxBuf queue. The
 152:../Sources/com/lpuart0.c ****  * function blocks until a new Line character has been received
 153:../Sources/com/lpuart0.c ****  * or the length has been exceeded.
 154:../Sources/com/lpuart0.c ****  *
 155:../Sources/com/lpuart0.c ****  * @details
 156:../Sources/com/lpuart0.c ****  *   the new line character will be replaced with a '\0' to
 157:../Sources/com/lpuart0.c ****  *   terminate the string.
 158:../Sources/com/lpuart0.c ****  *
 159:../Sources/com/lpuart0.c ****  * @param[out] *str
 160:../Sources/com/lpuart0.c ****  *   pointer to a char array to store the received string
 161:../Sources/com/lpuart0.c ****  * @param[in] length
 162:../Sources/com/lpuart0.c ****  *   the length of the str char array.
 163:../Sources/com/lpuart0.c ****  * @returns
 164:../Sources/com/lpuart0.c ****  *   the length of the received string.
 165:../Sources/com/lpuart0.c ****  */
 166:../Sources/com/lpuart0.c **** uint16_t lpuart0ReadLine(char *str, uint16_t length)
 167:../Sources/com/lpuart0.c **** {
 723              		.loc 3 167 0
 724              		.cfi_startproc
 725              		@ args = 0, pretend = 0, frame = 16
 726              		@ frame_needed = 1, uses_anonymous_args = 0
 727 0000 80B5     		push	{r7, lr}
 728              		.cfi_def_cfa_offset 8
 729              		.cfi_offset 7, -8
 730              		.cfi_offset 14, -4
 731 0002 84B0     		sub	sp, sp, #16
 732              		.cfi_def_cfa_offset 24
 733 0004 00AF     		add	r7, sp, #0
 734              		.cfi_def_cfa_register 7
 735 0006 7860     		str	r0, [r7, #4]
 736 0008 0B46     		mov	r3, r1
 737 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 168:../Sources/com/lpuart0.c ****   uint16_t i;
 169:../Sources/com/lpuart0.c ****   for (i=1; i<length; i++)
 738              		.loc 3 169 0
 739 000c 0123     		movs	r3, #1
 740 000e FB81     		strh	r3, [r7, #14]	@ movhi
 741 0010 14E0     		b	.L40
 742              	.L43:
 170:../Sources/com/lpuart0.c ****   {
 171:../Sources/com/lpuart0.c ****     *str = lpuart0ReadChar();
 743              		.loc 3 171 0
 744 0012 FFF7FEFF 		bl	lpuart0ReadChar
 745 0016 0346     		mov	r3, r0
 746 0018 1A46     		mov	r2, r3
 747 001a 7B68     		ldr	r3, [r7, #4]
 748 001c 1A70     		strb	r2, [r3]
 172:../Sources/com/lpuart0.c ****     if (*str == NEW_LINE)
 749              		.loc 3 172 0
 750 001e 7B68     		ldr	r3, [r7, #4]
 751 0020 93F90030 		ldrsb	r3, [r3]
 752 0024 0A2B     		cmp	r3, #10
 753 0026 03D1     		bne	.L41
 173:../Sources/com/lpuart0.c ****     {
 174:../Sources/com/lpuart0.c ****       *str = '\0';
 754              		.loc 3 174 0
 755 0028 7B68     		ldr	r3, [r7, #4]
 756 002a 0022     		movs	r2, #0
 757 002c 1A70     		strb	r2, [r3]
 175:../Sources/com/lpuart0.c ****       break;
 758              		.loc 3 175 0
 759 002e 09E0     		b	.L42
 760              	.L41:
 176:../Sources/com/lpuart0.c ****     }
 177:../Sources/com/lpuart0.c ****     str++;
 761              		.loc 3 177 0 discriminator 2
 762 0030 7B68     		ldr	r3, [r7, #4]
 763 0032 0133     		adds	r3, r3, #1
 764 0034 7B60     		str	r3, [r7, #4]
 169:../Sources/com/lpuart0.c ****   {
 765              		.loc 3 169 0 discriminator 2
 766 0036 FB89     		ldrh	r3, [r7, #14]
 767 0038 0133     		adds	r3, r3, #1
 768 003a FB81     		strh	r3, [r7, #14]	@ movhi
 769              	.L40:
 169:../Sources/com/lpuart0.c ****   {
 770              		.loc 3 169 0 is_stmt 0 discriminator 1
 771 003c FA89     		ldrh	r2, [r7, #14]
 772 003e 7B88     		ldrh	r3, [r7, #2]
 773 0040 9A42     		cmp	r2, r3
 774 0042 E6D3     		bcc	.L43
 775              	.L42:
 178:../Sources/com/lpuart0.c ****   }
 179:../Sources/com/lpuart0.c ****   return i;
 776              		.loc 3 179 0 is_stmt 1
 777 0044 FB89     		ldrh	r3, [r7, #14]
 180:../Sources/com/lpuart0.c **** }
 778              		.loc 3 180 0
 779 0046 1846     		mov	r0, r3
 780 0048 1037     		adds	r7, r7, #16
 781              		.cfi_def_cfa_offset 8
 782 004a BD46     		mov	sp, r7
 783              		.cfi_def_cfa_register 13
 784              		@ sp needed
 785 004c 80BD     		pop	{r7, pc}
 786              		.cfi_endproc
 787              	.LFE130:
 789              		.section	.text.lpuart0HasLineReceived,"ax",%progbits
 790              		.align	1
 791              		.global	lpuart0HasLineReceived
 792              		.syntax unified
 793              		.thumb
 794              		.thumb_func
 795              		.fpu fpv4-sp-d16
 797              	lpuart0HasLineReceived:
 798              	.LFB131:
 181:../Sources/com/lpuart0.c **** 
 182:../Sources/com/lpuart0.c **** /**
 183:../Sources/com/lpuart0.c ****  * This functions checks, if there is a new line character
 184:../Sources/com/lpuart0.c ****  * in the rxBuf queue.
 185:../Sources/com/lpuart0.c ****  *
 186:../Sources/com/lpuart0.c ****  * @returns
 187:../Sources/com/lpuart0.c ****  *   TRUE, if there is a new line character, otherweise FALSE.
 188:../Sources/com/lpuart0.c ****  */
 189:../Sources/com/lpuart0.c **** bool lpuart0HasLineReceived(void)
 190:../Sources/com/lpuart0.c **** {
 799              		.loc 3 190 0
 800              		.cfi_startproc
 801              		@ args = 0, pretend = 0, frame = 8
 802              		@ frame_needed = 1, uses_anonymous_args = 0
 803              		@ link register save eliminated.
 804 0000 80B4     		push	{r7}
 805              		.cfi_def_cfa_offset 4
 806              		.cfi_offset 7, -4
 807 0002 83B0     		sub	sp, sp, #12
 808              		.cfi_def_cfa_offset 16
 809 0004 00AF     		add	r7, sp, #0
 810              		.cfi_def_cfa_register 7
 191:../Sources/com/lpuart0.c ****   uint16_t i;
 192:../Sources/com/lpuart0.c ****   uint16_t index = rxBufReadPos;
 811              		.loc 3 192 0
 812 0006 134B     		ldr	r3, .L51
 813 0008 1B88     		ldrh	r3, [r3]	@ movhi
 814 000a BB80     		strh	r3, [r7, #4]	@ movhi
 193:../Sources/com/lpuart0.c **** 
 194:../Sources/com/lpuart0.c ****   for (i=0; i<rxBufCount; i++)
 815              		.loc 3 194 0
 816 000c 0023     		movs	r3, #0
 817 000e FB80     		strh	r3, [r7, #6]	@ movhi
 818 0010 12E0     		b	.L46
 819              	.L50:
 195:../Sources/com/lpuart0.c ****   {
 196:../Sources/com/lpuart0.c ****     if (rxBuf[index++] == NEW_LINE) return TRUE;
 820              		.loc 3 196 0
 821 0012 BB88     		ldrh	r3, [r7, #4]
 822 0014 5A1C     		adds	r2, r3, #1
 823 0016 BA80     		strh	r2, [r7, #4]	@ movhi
 824 0018 1A46     		mov	r2, r3
 825 001a 0F4B     		ldr	r3, .L51+4
 826 001c 9B56     		ldrsb	r3, [r3, r2]
 827 001e 0A2B     		cmp	r3, #10
 828 0020 01D1     		bne	.L47
 829              		.loc 3 196 0 is_stmt 0 discriminator 1
 830 0022 0123     		movs	r3, #1
 831 0024 0FE0     		b	.L48
 832              	.L47:
 197:../Sources/com/lpuart0.c ****     if (index == LPUART0_RX_BUF_SIZE) index = 0;
 833              		.loc 3 197 0 is_stmt 1
 834 0026 BB88     		ldrh	r3, [r7, #4]
 835 0028 B3F5007F 		cmp	r3, #512
 836 002c 01D1     		bne	.L49
 837              		.loc 3 197 0 is_stmt 0 discriminator 1
 838 002e 0023     		movs	r3, #0
 839 0030 BB80     		strh	r3, [r7, #4]	@ movhi
 840              	.L49:
 194:../Sources/com/lpuart0.c ****   {
 841              		.loc 3 194 0 is_stmt 1 discriminator 2
 842 0032 FB88     		ldrh	r3, [r7, #6]
 843 0034 0133     		adds	r3, r3, #1
 844 0036 FB80     		strh	r3, [r7, #6]	@ movhi
 845              	.L46:
 194:../Sources/com/lpuart0.c ****   {
 846              		.loc 3 194 0 is_stmt 0 discriminator 1
 847 0038 084B     		ldr	r3, .L51+8
 848 003a 1B88     		ldrh	r3, [r3]	@ movhi
 849 003c 9BB2     		uxth	r3, r3
 850 003e FA88     		ldrh	r2, [r7, #6]
 851 0040 9A42     		cmp	r2, r3
 852 0042 E6D3     		bcc	.L50
 198:../Sources/com/lpuart0.c ****   }
 199:../Sources/com/lpuart0.c ****   return FALSE;
 853              		.loc 3 199 0 is_stmt 1
 854 0044 0023     		movs	r3, #0
 855              	.L48:
 200:../Sources/com/lpuart0.c **** }
 856              		.loc 3 200 0
 857 0046 1846     		mov	r0, r3
 858 0048 0C37     		adds	r7, r7, #12
 859              		.cfi_def_cfa_offset 4
 860 004a BD46     		mov	sp, r7
 861              		.cfi_def_cfa_register 13
 862              		@ sp needed
 863 004c 5DF8047B 		ldr	r7, [sp], #4
 864              		.cfi_restore 7
 865              		.cfi_def_cfa_offset 0
 866 0050 7047     		bx	lr
 867              	.L52:
 868 0052 00BF     		.align	2
 869              	.L51:
 870 0054 00000000 		.word	rxBufReadPos
 871 0058 00000000 		.word	rxBuf
 872 005c 00000000 		.word	rxBufCount
 873              		.cfi_endproc
 874              	.LFE131:
 876              		.section	.text.lpuart0RxBufCount,"ax",%progbits
 877              		.align	1
 878              		.global	lpuart0RxBufCount
 879              		.syntax unified
 880              		.thumb
 881              		.thumb_func
 882              		.fpu fpv4-sp-d16
 884              	lpuart0RxBufCount:
 885              	.LFB132:
 201:../Sources/com/lpuart0.c **** 
 202:../Sources/com/lpuart0.c **** /**
 203:../Sources/com/lpuart0.c ****  * Returns the number of bytes in the receiver queue.
 204:../Sources/com/lpuart0.c ****  *
 205:../Sources/com/lpuart0.c ****  * @returns
 206:../Sources/com/lpuart0.c ****  *   the number of bytes in the receiver queue.
 207:../Sources/com/lpuart0.c ****  */
 208:../Sources/com/lpuart0.c **** uint16_t lpuart0RxBufCount(void)
 209:../Sources/com/lpuart0.c **** {
 886              		.loc 3 209 0
 887              		.cfi_startproc
 888              		@ args = 0, pretend = 0, frame = 0
 889              		@ frame_needed = 1, uses_anonymous_args = 0
 890              		@ link register save eliminated.
 891 0000 80B4     		push	{r7}
 892              		.cfi_def_cfa_offset 4
 893              		.cfi_offset 7, -4
 894 0002 00AF     		add	r7, sp, #0
 895              		.cfi_def_cfa_register 7
 210:../Sources/com/lpuart0.c ****   return rxBufCount;
 896              		.loc 3 210 0
 897 0004 034B     		ldr	r3, .L55
 898 0006 1B88     		ldrh	r3, [r3]	@ movhi
 899 0008 9BB2     		uxth	r3, r3
 211:../Sources/com/lpuart0.c **** }
 900              		.loc 3 211 0
 901 000a 1846     		mov	r0, r3
 902 000c BD46     		mov	sp, r7
 903              		.cfi_def_cfa_register 13
 904              		@ sp needed
 905 000e 5DF8047B 		ldr	r7, [sp], #4
 906              		.cfi_restore 7
 907              		.cfi_def_cfa_offset 0
 908 0012 7047     		bx	lr
 909              	.L56:
 910              		.align	2
 911              	.L55:
 912 0014 00000000 		.word	rxBufCount
 913              		.cfi_endproc
 914              	.LFE132:
 916              		.section	.text.lpuart0Init,"ax",%progbits
 917              		.align	1
 918              		.global	lpuart0Init
 919              		.syntax unified
 920              		.thumb
 921              		.thumb_func
 922              		.fpu fpv4-sp-d16
 924              	lpuart0Init:
 925              	.LFB133:
 212:../Sources/com/lpuart0.c **** 
 213:../Sources/com/lpuart0.c **** #if LPUART0_PRINTF_EN
 214:../Sources/com/lpuart0.c **** /**
 215:../Sources/com/lpuart0.c ****  * This function redirects the printf output to the uart
 216:../Sources/com/lpuart0.c ****  *
 217:../Sources/com/lpuart0.c ****  * @params[in] fd
 218:../Sources/com/lpuart0.c ****  *
 219:../Sources/com/lpuart0.c ****  * @params[in] buf
 220:../Sources/com/lpuart0.c ****  *   the buffer with the data bytes to send
 221:../Sources/com/lpuart0.c ****  *
 222:../Sources/com/lpuart0.c ****  * @params[in] count
 223:../Sources/com/lpuart0.c ****  *   the number of bytes to send
 224:../Sources/com/lpuart0.c ****  *
 225:../Sources/com/lpuart0.c ****  * @returns
 226:../Sources/com/lpuart0.c ****  *   the number of bytes sent.
 227:../Sources/com/lpuart0.c ****  */
 228:../Sources/com/lpuart0.c **** int _write(int fd, const char *buf, int count)
 229:../Sources/com/lpuart0.c **** {
 230:../Sources/com/lpuart0.c ****   int i = count;
 231:../Sources/com/lpuart0.c ****   while (i--) lpuart0WriteChar(*(uint8_t*)buf++);
 232:../Sources/com/lpuart0.c ****   return count;
 233:../Sources/com/lpuart0.c **** }
 234:../Sources/com/lpuart0.c **** #endif
 235:../Sources/com/lpuart0.c **** 
 236:../Sources/com/lpuart0.c **** #if LPUART0_SCANF_EN
 237:../Sources/com/lpuart0.c **** /**
 238:../Sources/com/lpuart0.c ****  * This function redirects the scanf input to the uart
 239:../Sources/com/lpuart0.c ****  *
 240:../Sources/com/lpuart0.c ****  * @params[in] fd
 241:../Sources/com/lpuart0.c ****  *
 242:../Sources/com/lpuart0.c ****  * @params[in] buf
 243:../Sources/com/lpuart0.c ****  *   buffer to write the bytes read from the uart
 244:../Sources/com/lpuart0.c ****  *
 245:../Sources/com/lpuart0.c ****  * @params[in] count
 246:../Sources/com/lpuart0.c ****  *   number of bytes written into the buffer
 247:../Sources/com/lpuart0.c ****  *
 248:../Sources/com/lpuart0.c ****  * @returns
 249:../Sources/com/lpuart0.c ****  *   the number of bytes sent.
 250:../Sources/com/lpuart0.c ****  */
 251:../Sources/com/lpuart0.c **** int _read(int fd, char *buf, int count)
 252:../Sources/com/lpuart0.c **** {
 253:../Sources/com/lpuart0.c ****   *buf = lpuart0ReadChar();
 254:../Sources/com/lpuart0.c ****   return 1;
 255:../Sources/com/lpuart0.c **** }
 256:../Sources/com/lpuart0.c **** #endif
 257:../Sources/com/lpuart0.c **** 
 258:../Sources/com/lpuart0.c **** /**
 259:../Sources/com/lpuart0.c ****  * initializes the lpuart with the desired baud rate.
 260:../Sources/com/lpuart0.c ****  *
 261:../Sources/com/lpuart0.c ****  * @details
 262:../Sources/com/lpuart0.c ****  *   The lpuart is different from the uart0 or uart1!
 263:../Sources/com/lpuart0.c ****  *
 264:../Sources/com/lpuart0.c ****  *   MC-Car:
 265:../Sources/com/lpuart0.c ****  *   - PTB10 Mux3:LPUART0_RX
 266:../Sources/com/lpuart0.c ****  *   - PTB11 Mux3:LPUART0_TX
 267:../Sources/com/lpuart0.c ****  */
 268:../Sources/com/lpuart0.c **** void lpuart0Init(uint16_t baudrate)
 269:../Sources/com/lpuart0.c **** {
 926              		.loc 3 269 0
 927              		.cfi_startproc
 928              		@ args = 0, pretend = 0, frame = 16
 929              		@ frame_needed = 1, uses_anonymous_args = 0
 930 0000 80B5     		push	{r7, lr}
 931              		.cfi_def_cfa_offset 8
 932              		.cfi_offset 7, -8
 933              		.cfi_offset 14, -4
 934 0002 84B0     		sub	sp, sp, #16
 935              		.cfi_def_cfa_offset 24
 936 0004 00AF     		add	r7, sp, #0
 937              		.cfi_def_cfa_register 7
 938 0006 0346     		mov	r3, r0
 939 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 270:../Sources/com/lpuart0.c ****   txBufReadPos = txBufWritePos = txBufCount = 0;
 940              		.loc 3 270 0
 941 000a 0021     		movs	r1, #0
 942 000c 2A4B     		ldr	r3, .L58
 943 000e 0A46     		mov	r2, r1	@ movhi
 944 0010 1A80     		strh	r2, [r3]	@ movhi
 945 0012 2A4B     		ldr	r3, .L58+4
 946 0014 0A46     		mov	r2, r1	@ movhi
 947 0016 1A80     		strh	r2, [r3]	@ movhi
 948 0018 284B     		ldr	r3, .L58+4
 949 001a 1A88     		ldrh	r2, [r3]
 950 001c 284B     		ldr	r3, .L58+8
 951 001e 1A80     		strh	r2, [r3]	@ movhi
 271:../Sources/com/lpuart0.c ****   rxBufReadPos = rxBufWritePos = rxBufCount = 0;
 952              		.loc 3 271 0
 953 0020 0021     		movs	r1, #0
 954 0022 284B     		ldr	r3, .L58+12
 955 0024 0A46     		mov	r2, r1	@ movhi
 956 0026 1A80     		strh	r2, [r3]	@ movhi
 957 0028 274B     		ldr	r3, .L58+16
 958 002a 0A46     		mov	r2, r1	@ movhi
 959 002c 1A80     		strh	r2, [r3]	@ movhi
 960 002e 264B     		ldr	r3, .L58+16
 961 0030 1A88     		ldrh	r2, [r3]
 962 0032 264B     		ldr	r3, .L58+20
 963 0034 1A80     		strh	r2, [r3]	@ movhi
 272:../Sources/com/lpuart0.c **** 
 273:../Sources/com/lpuart0.c ****   // configure clock gating and clock source to MCGPLLCLK
 274:../Sources/com/lpuart0.c ****   SIM_SCGC6 |= SIM_SCGC6_LPUART0_MASK;
 964              		.loc 3 274 0
 965 0036 2649     		ldr	r1, .L58+24
 966 0038 254B     		ldr	r3, .L58+24
 967 003a 03F58153 		add	r3, r3, #4128
 968 003e 1C33     		adds	r3, r3, #28
 969 0040 1B68     		ldr	r3, [r3]
 970 0042 43F48062 		orr	r2, r3, #1024
 971 0046 01F58153 		add	r3, r1, #4128
 972 004a 1C33     		adds	r3, r3, #28
 973 004c 1A60     		str	r2, [r3]
 275:../Sources/com/lpuart0.c ****   SIM_SOPT2 |= SIM_SOPT2_LPUARTSRC(1);
 974              		.loc 3 275 0
 975 004e 2049     		ldr	r1, .L58+24
 976 0050 1F4B     		ldr	r3, .L58+24
 977 0052 03F58053 		add	r3, r3, #4096
 978 0056 0433     		adds	r3, r3, #4
 979 0058 1B68     		ldr	r3, [r3]
 980 005a 43F08062 		orr	r2, r3, #67108864
 981 005e 01F58053 		add	r3, r1, #4096
 982 0062 0433     		adds	r3, r3, #4
 983 0064 1A60     		str	r2, [r3]
 276:../Sources/com/lpuart0.c **** 
 277:../Sources/com/lpuart0.c ****   // configure port multiplexing
 278:../Sources/com/lpuart0.c ****   PORTB_PCR10 = PORT_PCR_MUX(3);
 984              		.loc 3 278 0
 985 0066 1B4B     		ldr	r3, .L58+28
 986 0068 4FF44072 		mov	r2, #768
 987 006c 9A62     		str	r2, [r3, #40]
 279:../Sources/com/lpuart0.c ****   PORTB_PCR11 = PORT_PCR_MUX(3);
 988              		.loc 3 279 0
 989 006e 194B     		ldr	r3, .L58+28
 990 0070 4FF44072 		mov	r2, #768
 991 0074 DA62     		str	r2, [r3, #44]
 280:../Sources/com/lpuart0.c **** 
 281:../Sources/com/lpuart0.c ****   // set the baudrate
 282:../Sources/com/lpuart0.c ****   uint32_t bd = (CORECLOCK / (16 * baudrate));
 992              		.loc 3 282 0
 993 0076 FB88     		ldrh	r3, [r7, #6]
 994 0078 1B01     		lsls	r3, r3, #4
 995 007a 174A     		ldr	r2, .L58+32
 996 007c 92FBF3F3 		sdiv	r3, r2, r3
 997 0080 FB60     		str	r3, [r7, #12]
 283:../Sources/com/lpuart0.c ****   LPUART0_BAUD |= LPUART_BAUD_SBR(bd);
 998              		.loc 3 283 0
 999 0082 1649     		ldr	r1, .L58+36
 1000 0084 154B     		ldr	r3, .L58+36
 1001 0086 1A68     		ldr	r2, [r3]
 1002 0088 FB68     		ldr	r3, [r7, #12]
 1003 008a C3F30C03 		ubfx	r3, r3, #0, #13
 1004 008e 1343     		orrs	r3, r3, r2
 1005 0090 0B60     		str	r3, [r1]
 284:../Sources/com/lpuart0.c **** 
 285:../Sources/com/lpuart0.c ****   // enable uart receiver, receiver interrupt and transmitter as well as
 286:../Sources/com/lpuart0.c ****   // the error interrupts of the lpuart and configure the NVIC
 287:../Sources/com/lpuart0.c ****   LPUART0_CTRL |= LPUART_CTRL_RE_MASK | LPUART_CTRL_RIE_MASK | LPUART_CTRL_TE_MASK |
 1006              		.loc 3 287 0
 1007 0092 124A     		ldr	r2, .L58+36
 1008 0094 114B     		ldr	r3, .L58+36
 1009 0096 9B68     		ldr	r3, [r3, #8]
 1010 0098 43F06263 		orr	r3, r3, #236978176
 1011 009c 43F44023 		orr	r3, r3, #786432
 1012 00a0 9360     		str	r3, [r2, #8]
 288:../Sources/com/lpuart0.c ****       LPUART_CTRL_ORIE_MASK | LPUART_CTRL_NEIE_MASK | LPUART_CTRL_FEIE_MASK;
 289:../Sources/com/lpuart0.c ****   NVIC_SetPriority(LPUART0_IRQn, PRIO_LPUART0);
 1013              		.loc 3 289 0
 1014 00a2 0521     		movs	r1, #5
 1015 00a4 1E20     		movs	r0, #30
 1016 00a6 FFF7FEFF 		bl	NVIC_SetPriority
 290:../Sources/com/lpuart0.c ****   NVIC_EnableIRQ(LPUART0_IRQn);
 1017              		.loc 3 290 0
 1018 00aa 1E20     		movs	r0, #30
 1019 00ac FFF7FEFF 		bl	NVIC_EnableIRQ
 291:../Sources/com/lpuart0.c **** }
 1020              		.loc 3 291 0
 1021 00b0 00BF     		nop
 1022 00b2 1037     		adds	r7, r7, #16
 1023              		.cfi_def_cfa_offset 8
 1024 00b4 BD46     		mov	sp, r7
 1025              		.cfi_def_cfa_register 13
 1026              		@ sp needed
 1027 00b6 80BD     		pop	{r7, pc}
 1028              	.L59:
 1029              		.align	2
 1030              	.L58:
 1031 00b8 00000000 		.word	txBufCount
 1032 00bc 00000000 		.word	txBufWritePos
 1033 00c0 00000000 		.word	txBufReadPos
 1034 00c4 00000000 		.word	rxBufCount
 1035 00c8 00000000 		.word	rxBufWritePos
 1036 00cc 00000000 		.word	rxBufReadPos
 1037 00d0 00700440 		.word	1074032640
 1038 00d4 00A00440 		.word	1074044928
 1039 00d8 000E2707 		.word	120000000
 1040 00dc 00A00240 		.word	1073913856
 1041              		.cfi_endproc
 1042              	.LFE133:
 1044              		.text
 1045              	.Letext0:
 1046              		.file 4 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 1047              		.file 5 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 1048              		.file 6 "../Includes/MK22F51212.h"
 1049              		.file 7 "../Includes/system_MK22F51212.h"
DEFINED SYMBOLS
                            *ABS*:00000000 lpuart0.c
C:\Users\Blub\AppData\Local\Temp\cc58y4M0.s:18     .text.NVIC_EnableIRQ:00000000 $t
C:\Users\Blub\AppData\Local\Temp\cc58y4M0.s:24     .text.NVIC_EnableIRQ:00000000 NVIC_EnableIRQ
C:\Users\Blub\AppData\Local\Temp\cc58y4M0.s:64     .text.NVIC_EnableIRQ:00000030 $d
C:\Users\Blub\AppData\Local\Temp\cc58y4M0.s:69     .text.NVIC_DisableIRQ:00000000 $t
C:\Users\Blub\AppData\Local\Temp\cc58y4M0.s:75     .text.NVIC_DisableIRQ:00000000 NVIC_DisableIRQ
C:\Users\Blub\AppData\Local\Temp\cc58y4M0.s:115    .text.NVIC_DisableIRQ:00000030 $d
C:\Users\Blub\AppData\Local\Temp\cc58y4M0.s:120    .text.NVIC_SetPriority:00000000 $t
C:\Users\Blub\AppData\Local\Temp\cc58y4M0.s:126    .text.NVIC_SetPriority:00000000 NVIC_SetPriority
C:\Users\Blub\AppData\Local\Temp\cc58y4M0.s:185    .text.NVIC_SetPriority:0000004c $d
C:\Users\Blub\AppData\Local\Temp\cc58y4M0.s:191    .text.NVIC_DisableIRQEx:00000000 $t
C:\Users\Blub\AppData\Local\Temp\cc58y4M0.s:197    .text.NVIC_DisableIRQEx:00000000 NVIC_DisableIRQEx
C:\Users\Blub\AppData\Local\Temp\cc58y4M0.s:241    .bss.rxBuf:00000000 $d
C:\Users\Blub\AppData\Local\Temp\cc58y4M0.s:244    .bss.rxBuf:00000000 rxBuf
C:\Users\Blub\AppData\Local\Temp\cc58y4M0.s:247    .bss.rxBufCount:00000000 $d
C:\Users\Blub\AppData\Local\Temp\cc58y4M0.s:250    .bss.rxBufCount:00000000 rxBufCount
C:\Users\Blub\AppData\Local\Temp\cc58y4M0.s:253    .bss.rxBufWritePos:00000000 $d
C:\Users\Blub\AppData\Local\Temp\cc58y4M0.s:256    .bss.rxBufWritePos:00000000 rxBufWritePos
C:\Users\Blub\AppData\Local\Temp\cc58y4M0.s:259    .bss.rxBufReadPos:00000000 $d
C:\Users\Blub\AppData\Local\Temp\cc58y4M0.s:262    .bss.rxBufReadPos:00000000 rxBufReadPos
C:\Users\Blub\AppData\Local\Temp\cc58y4M0.s:265    .bss.txBuf:00000000 $d
C:\Users\Blub\AppData\Local\Temp\cc58y4M0.s:268    .bss.txBuf:00000000 txBuf
C:\Users\Blub\AppData\Local\Temp\cc58y4M0.s:271    .bss.txBufCount:00000000 $d
C:\Users\Blub\AppData\Local\Temp\cc58y4M0.s:274    .bss.txBufCount:00000000 txBufCount
C:\Users\Blub\AppData\Local\Temp\cc58y4M0.s:277    .bss.txBufWritePos:00000000 $d
C:\Users\Blub\AppData\Local\Temp\cc58y4M0.s:280    .bss.txBufWritePos:00000000 txBufWritePos
C:\Users\Blub\AppData\Local\Temp\cc58y4M0.s:283    .bss.txBufReadPos:00000000 $d
C:\Users\Blub\AppData\Local\Temp\cc58y4M0.s:286    .bss.txBufReadPos:00000000 txBufReadPos
C:\Users\Blub\AppData\Local\Temp\cc58y4M0.s:289    .text.LPUART0_IRQHandler:00000000 $t
C:\Users\Blub\AppData\Local\Temp\cc58y4M0.s:296    .text.LPUART0_IRQHandler:00000000 LPUART0_IRQHandler
C:\Users\Blub\AppData\Local\Temp\cc58y4M0.s:428    .text.LPUART0_IRQHandler:000000cc $d
C:\Users\Blub\AppData\Local\Temp\cc58y4M0.s:439    .text.lpuart0WriteChar:00000000 $t
C:\Users\Blub\AppData\Local\Temp\cc58y4M0.s:446    .text.lpuart0WriteChar:00000000 lpuart0WriteChar
C:\Users\Blub\AppData\Local\Temp\cc58y4M0.s:523    .text.lpuart0WriteChar:0000006c $d
C:\Users\Blub\AppData\Local\Temp\cc58y4M0.s:531    .text.lpuart0Write:00000000 $t
C:\Users\Blub\AppData\Local\Temp\cc58y4M0.s:538    .text.lpuart0Write:00000000 lpuart0Write
C:\Users\Blub\AppData\Local\Temp\cc58y4M0.s:589    .text.lpuart0WriteLine:00000000 $t
C:\Users\Blub\AppData\Local\Temp\cc58y4M0.s:596    .text.lpuart0WriteLine:00000000 lpuart0WriteLine
C:\Users\Blub\AppData\Local\Temp\cc58y4M0.s:629    .text.lpuart0ReadChar:00000000 $t
C:\Users\Blub\AppData\Local\Temp\cc58y4M0.s:636    .text.lpuart0ReadChar:00000000 lpuart0ReadChar
C:\Users\Blub\AppData\Local\Temp\cc58y4M0.s:707    .text.lpuart0ReadChar:0000005c $d
C:\Users\Blub\AppData\Local\Temp\cc58y4M0.s:714    .text.lpuart0ReadLine:00000000 $t
C:\Users\Blub\AppData\Local\Temp\cc58y4M0.s:721    .text.lpuart0ReadLine:00000000 lpuart0ReadLine
C:\Users\Blub\AppData\Local\Temp\cc58y4M0.s:790    .text.lpuart0HasLineReceived:00000000 $t
C:\Users\Blub\AppData\Local\Temp\cc58y4M0.s:797    .text.lpuart0HasLineReceived:00000000 lpuart0HasLineReceived
C:\Users\Blub\AppData\Local\Temp\cc58y4M0.s:870    .text.lpuart0HasLineReceived:00000054 $d
C:\Users\Blub\AppData\Local\Temp\cc58y4M0.s:877    .text.lpuart0RxBufCount:00000000 $t
C:\Users\Blub\AppData\Local\Temp\cc58y4M0.s:884    .text.lpuart0RxBufCount:00000000 lpuart0RxBufCount
C:\Users\Blub\AppData\Local\Temp\cc58y4M0.s:912    .text.lpuart0RxBufCount:00000014 $d
C:\Users\Blub\AppData\Local\Temp\cc58y4M0.s:917    .text.lpuart0Init:00000000 $t
C:\Users\Blub\AppData\Local\Temp\cc58y4M0.s:924    .text.lpuart0Init:00000000 lpuart0Init
C:\Users\Blub\AppData\Local\Temp\cc58y4M0.s:1031   .text.lpuart0Init:000000b8 $d
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.0.a6d4f739a788c67292a3ea0a48d10bd5
                           .group:00000000 wm4.MK22F51212.h.96.792c303daa596f91c029224edd7c60aa
                           .group:00000000 wm4._newlib_version.h.4.3572908597b70d672d181fc7fc501c19
                           .group:00000000 wm4.features.h.33.cf97d4c9a045ebab6d282f6356e11363
                           .group:00000000 wm4._default_types.h.15.247e5cd201eca3442cbf5404108c4935
                           .group:00000000 wm4._intsup.h.10.cce27fed8484c08a33f522034c30d2b5
                           .group:00000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:00000000 wm4.stdint.h.23.d53047a68f4a85177f80b422d52785ed
                           .group:00000000 wm4.MK22F51212.h.109.eeee73bf5f54e3f06177795004b95e22
                           .group:00000000 wm4.core_cm4.h.43.f75e2f71b2e33f7a3db429cd8b0cae9e
                           .group:00000000 wm4.core_cmInstr.h.39.addda81f1f3453ba31dd54fc5b6fcee8
                           .group:00000000 wm4.core_cmSimd.h.43.c355993beb49ccd10586af5b1cfe5aee
                           .group:00000000 wm4.core_cm4.h.201.a59e218d30e39d114c8962bbad645c74
                           .group:00000000 wm4.system_MK22F51212.h.94.09b5fd63c227fb82ca8c370fba9e2334
                           .group:00000000 wm4.MK22F51212.h.369.5a9c5aa32d240e03ff494f1c769cfadf
                           .group:00000000 wm4.platform.h.20.50ac36c902b95111cd960a53a2ea1ddf
                           .group:00000000 wm4.uart.h.20.bc12b72a70305b4e40bc10b02a9fc1fa

NO UNDEFINED SYMBOLS
