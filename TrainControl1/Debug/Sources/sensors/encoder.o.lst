   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"encoder.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.bss.clh,"aw",%nobits
  18              		.align	2
  21              	clh:
  22 0000 00000000 		.space	56
  22      00000000 
  22      00000000 
  22      00000000 
  22      00000000 
  23              		.comm	ticks10ms,4,4
  24              		.comm	ticks100ms,4,4
  25              		.section	.bss.ticks,"aw",%nobits
  26              		.align	2
  29              	ticks:
  30 0000 00000000 		.space	4
  31              		.section	.bss.oldticks,"aw",%nobits
  32              		.align	2
  35              	oldticks:
  36 0000 00000000 		.space	4
  37              		.section	.bss.avgticks,"aw",%nobits
  38              		.align	2
  41              	avgticks:
  42 0000 00000000 		.space	4
  43              		.section	.bss.oldavgticks,"aw",%nobits
  44              		.align	2
  47              	oldavgticks:
  48 0000 00000000 		.space	4
  49              		.section	.text.FTM1TOF_IRQHandler,"ax",%progbits
  50              		.align	1
  51              		.global	FTM1TOF_IRQHandler
  52              		.syntax unified
  53              		.thumb
  54              		.thumb_func
  55              		.fpu fpv4-sp-d16
  57              	FTM1TOF_IRQHandler:
  58              	.LFB125:
  59              		.file 1 "../Sources/sensors/encoder.c"
   1:../Sources/sensors/encoder.c **** /*
   2:../Sources/sensors/encoder.c ****  * tof.c
   3:../Sources/sensors/encoder.c ****  *
   4:../Sources/sensors/encoder.c ****  *  Created on: 13.03.2019
   5:../Sources/sensors/encoder.c ****  *      Author: Blub
   6:../Sources/sensors/encoder.c ****  */
   7:../Sources/sensors/encoder.c **** 
   8:../Sources/sensors/encoder.c **** #include "platform.h"
   9:../Sources/sensors/encoder.c **** #include "ftm0.h"
  10:../Sources/sensors/encoder.c **** #include "ftm1quad.h"
  11:../Sources/sensors/encoder.c **** #include "i2c.h"
  12:../Sources/sensors/encoder.c **** #include "util.h"
  13:../Sources/sensors/encoder.c **** #include "term.h"
  14:../Sources/sensors/encoder.c **** #include "string.h"
  15:../Sources/sensors/encoder.c **** #include "encoder.h"
  16:../Sources/sensors/encoder.c **** 
  17:../Sources/sensors/encoder.c **** #define CheckCommand(buf, command)   (strncmp(buf, command, sizeof(command)-1) == 0)
  18:../Sources/sensors/encoder.c **** #define TOFS_MS(x)   ((uint16_t)(((FTM0_CLOCK / 1000) * x) / (FTM0_MODULO + 1)))
  19:../Sources/sensors/encoder.c **** 
  20:../Sources/sensors/encoder.c **** static tCommandLineHandler clh;
  21:../Sources/sensors/encoder.c **** 
  22:../Sources/sensors/encoder.c **** int32_t ticks10ms, ticks100ms;
  23:../Sources/sensors/encoder.c **** 
  24:../Sources/sensors/encoder.c **** static int32_t ticks = 0;
  25:../Sources/sensors/encoder.c **** static int32_t oldticks = 0;
  26:../Sources/sensors/encoder.c **** static int32_t avgticks = 0;
  27:../Sources/sensors/encoder.c **** static int32_t oldavgticks = 0;
  28:../Sources/sensors/encoder.c **** 
  29:../Sources/sensors/encoder.c **** 
  30:../Sources/sensors/encoder.c **** void FTM1TOF_IRQHandler(void)       //Overflow Handler
  31:../Sources/sensors/encoder.c **** {
  60              		.loc 1 31 0
  61              		.cfi_startproc
  62              		@ args = 0, pretend = 0, frame = 0
  63              		@ frame_needed = 1, uses_anonymous_args = 0
  64              		@ link register save eliminated.
  65 0000 80B4     		push	{r7}
  66              		.cfi_def_cfa_offset 4
  67              		.cfi_offset 7, -4
  68 0002 00AF     		add	r7, sp, #0
  69              		.cfi_def_cfa_register 7
  32:../Sources/sensors/encoder.c ****   FTM1_SC &= ~FTM_SC_TOF_MASK;
  70              		.loc 1 32 0
  71 0004 104A     		ldr	r2, .L5
  72 0006 104B     		ldr	r3, .L5
  73 0008 1B68     		ldr	r3, [r3]
  74 000a 23F08003 		bic	r3, r3, #128
  75 000e 1360     		str	r3, [r2]
  33:../Sources/sensors/encoder.c ****   if (FTM1_QDCTRL & FTM_QDCTRL_TOFDIR_MASK)
  76              		.loc 1 33 0
  77 0010 0D4B     		ldr	r3, .L5
  78 0012 D3F88030 		ldr	r3, [r3, #128]
  79 0016 03F00203 		and	r3, r3, #2
  80 001a 002B     		cmp	r3, #0
  81 001c 07D0     		beq	.L2
  34:../Sources/sensors/encoder.c ****   {
  35:../Sources/sensors/encoder.c ****     oldticks = oldticks - FTM1_MODULO;
  82              		.loc 1 35 0
  83 001e 0B4B     		ldr	r3, .L5+4
  84 0020 1B68     		ldr	r3, [r3]
  85 0022 A3F57F43 		sub	r3, r3, #65280
  86 0026 FF3B     		subs	r3, r3, #255
  87 0028 084A     		ldr	r2, .L5+4
  88 002a 1360     		str	r3, [r2]
  36:../Sources/sensors/encoder.c ****   }
  37:../Sources/sensors/encoder.c ****   else
  38:../Sources/sensors/encoder.c ****   {
  39:../Sources/sensors/encoder.c ****     oldticks = oldticks + FTM1_MODULO;
  40:../Sources/sensors/encoder.c ****   }
  41:../Sources/sensors/encoder.c **** 
  42:../Sources/sensors/encoder.c **** }
  89              		.loc 1 42 0
  90 002c 06E0     		b	.L4
  91              	.L2:
  39:../Sources/sensors/encoder.c ****   }
  92              		.loc 1 39 0
  93 002e 074B     		ldr	r3, .L5+4
  94 0030 1B68     		ldr	r3, [r3]
  95 0032 03F57F43 		add	r3, r3, #65280
  96 0036 FF33     		adds	r3, r3, #255
  97 0038 044A     		ldr	r2, .L5+4
  98 003a 1360     		str	r3, [r2]
  99              	.L4:
 100              		.loc 1 42 0
 101 003c 00BF     		nop
 102 003e BD46     		mov	sp, r7
 103              		.cfi_def_cfa_register 13
 104              		@ sp needed
 105 0040 5DF8047B 		ldr	r7, [sp], #4
 106              		.cfi_restore 7
 107              		.cfi_def_cfa_offset 0
 108 0044 7047     		bx	lr
 109              	.L6:
 110 0046 00BF     		.align	2
 111              	.L5:
 112 0048 00900340 		.word	1073975296
 113 004c 00000000 		.word	oldticks
 114              		.cfi_endproc
 115              	.LFE125:
 117              		.section	.text.FTM0CH0_IRQHandler,"ax",%progbits
 118              		.align	1
 119              		.global	FTM0CH0_IRQHandler
 120              		.syntax unified
 121              		.thumb
 122              		.thumb_func
 123              		.fpu fpv4-sp-d16
 125              	FTM0CH0_IRQHandler:
 126              	.LFB126:
  43:../Sources/sensors/encoder.c **** 
  44:../Sources/sensors/encoder.c **** void FTM0CH0_IRQHandler(void)
  45:../Sources/sensors/encoder.c **** {
 127              		.loc 1 45 0
 128              		.cfi_startproc
 129              		@ args = 0, pretend = 0, frame = 0
 130              		@ frame_needed = 1, uses_anonymous_args = 0
 131              		@ link register save eliminated.
 132 0000 80B4     		push	{r7}
 133              		.cfi_def_cfa_offset 4
 134              		.cfi_offset 7, -4
 135 0002 00AF     		add	r7, sp, #0
 136              		.cfi_def_cfa_register 7
  46:../Sources/sensors/encoder.c ****   static uint8_t i;
  47:../Sources/sensors/encoder.c ****   static int16_t sumticks;
  48:../Sources/sensors/encoder.c ****   static uint8_t getTicks = 0;
  49:../Sources/sensors/encoder.c **** 
  50:../Sources/sensors/encoder.c ****   FTM0_C0SC &= ~FTM_CnSC_CHF_MASK;
 137              		.loc 1 50 0
 138 0004 224A     		ldr	r2, .L12
 139 0006 224B     		ldr	r3, .L12
 140 0008 DB68     		ldr	r3, [r3, #12]
 141 000a 23F08003 		bic	r3, r3, #128
 142 000e D360     		str	r3, [r2, #12]
  51:../Sources/sensors/encoder.c ****   //clear the channel flag
  52:../Sources/sensors/encoder.c **** 
  53:../Sources/sensors/encoder.c ****   ticks = FTM1_CNT;
 143              		.loc 1 53 0
 144 0010 204B     		ldr	r3, .L12+4
 145 0012 5B68     		ldr	r3, [r3, #4]
 146 0014 1A46     		mov	r2, r3
 147 0016 204B     		ldr	r3, .L12+8
 148 0018 1A60     		str	r2, [r3]
  54:../Sources/sensors/encoder.c ****   ticks10ms = (-1)*(ticks - oldticks);
 149              		.loc 1 54 0
 150 001a 204B     		ldr	r3, .L12+12
 151 001c 1A68     		ldr	r2, [r3]
 152 001e 1E4B     		ldr	r3, .L12+8
 153 0020 1B68     		ldr	r3, [r3]
 154 0022 D31A     		subs	r3, r2, r3
 155 0024 1E4A     		ldr	r2, .L12+16
 156 0026 1360     		str	r3, [r2]
  55:../Sources/sensors/encoder.c ****   oldticks = ticks;
 157              		.loc 1 55 0
 158 0028 1B4B     		ldr	r3, .L12+8
 159 002a 1B68     		ldr	r3, [r3]
 160 002c 1B4A     		ldr	r2, .L12+12
 161 002e 1360     		str	r3, [r2]
  56:../Sources/sensors/encoder.c **** 
  57:../Sources/sensors/encoder.c **** 
  58:../Sources/sensors/encoder.c ****   if (i++ == 10)
 162              		.loc 1 58 0
 163 0030 1C4B     		ldr	r3, .L12+20
 164 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 165 0034 5A1C     		adds	r2, r3, #1
 166 0036 D1B2     		uxtb	r1, r2
 167 0038 1A4A     		ldr	r2, .L12+20
 168 003a 1170     		strb	r1, [r2]
 169 003c 0A2B     		cmp	r3, #10
 170 003e 12D1     		bne	.L8
  59:../Sources/sensors/encoder.c ****   {
  60:../Sources/sensors/encoder.c ****     i = 0;
 171              		.loc 1 60 0
 172 0040 184B     		ldr	r3, .L12+20
 173 0042 0022     		movs	r2, #0
 174 0044 1A70     		strb	r2, [r3]
  61:../Sources/sensors/encoder.c ****    avgticks = FTM1_CNT;
 175              		.loc 1 61 0
 176 0046 134B     		ldr	r3, .L12+4
 177 0048 5B68     		ldr	r3, [r3, #4]
 178 004a 1A46     		mov	r2, r3
 179 004c 164B     		ldr	r3, .L12+24
 180 004e 1A60     		str	r2, [r3]
  62:../Sources/sensors/encoder.c ****     ticks100ms = (-1)*(avgticks - oldavgticks);
 181              		.loc 1 62 0
 182 0050 164B     		ldr	r3, .L12+28
 183 0052 1A68     		ldr	r2, [r3]
 184 0054 144B     		ldr	r3, .L12+24
 185 0056 1B68     		ldr	r3, [r3]
 186 0058 D31A     		subs	r3, r2, r3
 187 005a 154A     		ldr	r2, .L12+32
 188 005c 1360     		str	r3, [r2]
  63:../Sources/sensors/encoder.c ****     oldavgticks =avgticks;
 189              		.loc 1 63 0
 190 005e 124B     		ldr	r3, .L12+24
 191 0060 1B68     		ldr	r3, [r3]
 192 0062 124A     		ldr	r2, .L12+28
 193 0064 1360     		str	r3, [r2]
 194              	.L8:
  64:../Sources/sensors/encoder.c ****   }
  65:../Sources/sensors/encoder.c **** 
  66:../Sources/sensors/encoder.c **** //set next compare time (value is stored in tmrFrequencyTicks)
  67:../Sources/sensors/encoder.c ****   if (FTM0_CNT == FTM0_MODULO)
 195              		.loc 1 67 0
 196 0066 0A4B     		ldr	r3, .L12
 197 0068 5B68     		ldr	r3, [r3, #4]
 198 006a 41F28832 		movw	r2, #5000
 199 006e 9342     		cmp	r3, r2
 200 0070 04D1     		bne	.L9
  68:../Sources/sensors/encoder.c ****   {
  69:../Sources/sensors/encoder.c ****     FTM0_C0V = FTM0CH0_VALUE;
 201              		.loc 1 69 0
 202 0072 074B     		ldr	r3, .L12
 203 0074 40F6C412 		movw	r2, #2500
 204 0078 1A61     		str	r2, [r3, #16]
  70:../Sources/sensors/encoder.c ****   }
  71:../Sources/sensors/encoder.c ****   else
  72:../Sources/sensors/encoder.c ****   {
  73:../Sources/sensors/encoder.c ****     FTM0_C0V = FTM0_MODULO;
  74:../Sources/sensors/encoder.c ****   }
  75:../Sources/sensors/encoder.c **** 
  76:../Sources/sensors/encoder.c **** }
 205              		.loc 1 76 0
 206 007a 03E0     		b	.L11
 207              	.L9:
  73:../Sources/sensors/encoder.c ****   }
 208              		.loc 1 73 0
 209 007c 044B     		ldr	r3, .L12
 210 007e 41F28832 		movw	r2, #5000
 211 0082 1A61     		str	r2, [r3, #16]
 212              	.L11:
 213              		.loc 1 76 0
 214 0084 00BF     		nop
 215 0086 BD46     		mov	sp, r7
 216              		.cfi_def_cfa_register 13
 217              		@ sp needed
 218 0088 5DF8047B 		ldr	r7, [sp], #4
 219              		.cfi_restore 7
 220              		.cfi_def_cfa_offset 0
 221 008c 7047     		bx	lr
 222              	.L13:
 223 008e 00BF     		.align	2
 224              	.L12:
 225 0090 00800340 		.word	1073971200
 226 0094 00900340 		.word	1073975296
 227 0098 00000000 		.word	ticks
 228 009c 00000000 		.word	oldticks
 229 00a0 00000000 		.word	ticks10ms
 230 00a4 00000000 		.word	i.7127
 231 00a8 00000000 		.word	avgticks
 232 00ac 00000000 		.word	oldavgticks
 233 00b0 00000000 		.word	ticks100ms
 234              		.cfi_endproc
 235              	.LFE126:
 237              		.section	.text.encodergetTicks,"ax",%progbits
 238              		.align	1
 239              		.global	encodergetTicks
 240              		.syntax unified
 241              		.thumb
 242              		.thumb_func
 243              		.fpu fpv4-sp-d16
 245              	encodergetTicks:
 246              	.LFB127:
  77:../Sources/sensors/encoder.c **** 
  78:../Sources/sensors/encoder.c **** int16_t encodergetTicks()
  79:../Sources/sensors/encoder.c **** {
 247              		.loc 1 79 0
 248              		.cfi_startproc
 249              		@ args = 0, pretend = 0, frame = 0
 250              		@ frame_needed = 1, uses_anonymous_args = 0
 251              		@ link register save eliminated.
 252 0000 80B4     		push	{r7}
 253              		.cfi_def_cfa_offset 4
 254              		.cfi_offset 7, -4
 255 0002 00AF     		add	r7, sp, #0
 256              		.cfi_def_cfa_register 7
  80:../Sources/sensors/encoder.c ****   return (int16_t) ticks;
 257              		.loc 1 80 0
 258 0004 034B     		ldr	r3, .L16
 259 0006 1B68     		ldr	r3, [r3]
 260 0008 1BB2     		sxth	r3, r3
  81:../Sources/sensors/encoder.c **** }
 261              		.loc 1 81 0
 262 000a 1846     		mov	r0, r3
 263 000c BD46     		mov	sp, r7
 264              		.cfi_def_cfa_register 13
 265              		@ sp needed
 266 000e 5DF8047B 		ldr	r7, [sp], #4
 267              		.cfi_restore 7
 268              		.cfi_def_cfa_offset 0
 269 0012 7047     		bx	lr
 270              	.L17:
 271              		.align	2
 272              	.L16:
 273 0014 00000000 		.word	ticks
 274              		.cfi_endproc
 275              	.LFE127:
 277              		.section	.text.encodergetTicks10ms,"ax",%progbits
 278              		.align	1
 279              		.global	encodergetTicks10ms
 280              		.syntax unified
 281              		.thumb
 282              		.thumb_func
 283              		.fpu fpv4-sp-d16
 285              	encodergetTicks10ms:
 286              	.LFB128:
  82:../Sources/sensors/encoder.c **** int16_t encodergetTicks10ms()
  83:../Sources/sensors/encoder.c **** {
 287              		.loc 1 83 0
 288              		.cfi_startproc
 289              		@ args = 0, pretend = 0, frame = 0
 290              		@ frame_needed = 1, uses_anonymous_args = 0
 291              		@ link register save eliminated.
 292 0000 80B4     		push	{r7}
 293              		.cfi_def_cfa_offset 4
 294              		.cfi_offset 7, -4
 295 0002 00AF     		add	r7, sp, #0
 296              		.cfi_def_cfa_register 7
  84:../Sources/sensors/encoder.c ****   return (int16_t) ticks10ms;
 297              		.loc 1 84 0
 298 0004 034B     		ldr	r3, .L20
 299 0006 1B68     		ldr	r3, [r3]
 300 0008 1BB2     		sxth	r3, r3
  85:../Sources/sensors/encoder.c **** }
 301              		.loc 1 85 0
 302 000a 1846     		mov	r0, r3
 303 000c BD46     		mov	sp, r7
 304              		.cfi_def_cfa_register 13
 305              		@ sp needed
 306 000e 5DF8047B 		ldr	r7, [sp], #4
 307              		.cfi_restore 7
 308              		.cfi_def_cfa_offset 0
 309 0012 7047     		bx	lr
 310              	.L21:
 311              		.align	2
 312              	.L20:
 313 0014 00000000 		.word	ticks10ms
 314              		.cfi_endproc
 315              	.LFE128:
 317              		.section	.text.encodergetRPS,"ax",%progbits
 318              		.align	1
 319              		.global	encodergetRPS
 320              		.syntax unified
 321              		.thumb
 322              		.thumb_func
 323              		.fpu fpv4-sp-d16
 325              	encodergetRPS:
 326              	.LFB129:
  86:../Sources/sensors/encoder.c **** int16_t encodergetRPS()
  87:../Sources/sensors/encoder.c **** {
 327              		.loc 1 87 0
 328              		.cfi_startproc
 329              		@ args = 0, pretend = 0, frame = 16
 330              		@ frame_needed = 1, uses_anonymous_args = 0
 331              		@ link register save eliminated.
 332 0000 80B4     		push	{r7}
 333              		.cfi_def_cfa_offset 4
 334              		.cfi_offset 7, -4
 335 0002 85B0     		sub	sp, sp, #20
 336              		.cfi_def_cfa_offset 24
 337 0004 00AF     		add	r7, sp, #0
 338              		.cfi_def_cfa_register 7
  88:../Sources/sensors/encoder.c ****   float result = (((ticks10ms * 100) / 512));
 339              		.loc 1 88 0
 340 0006 0F4B     		ldr	r3, .L25
 341 0008 1B68     		ldr	r3, [r3]
 342 000a 6422     		movs	r2, #100
 343 000c 02FB03F3 		mul	r3, r2, r3
 344 0010 002B     		cmp	r3, #0
 345 0012 01DA     		bge	.L23
 346 0014 03F2FF13 		addw	r3, r3, #511
 347              	.L23:
 348 0018 5B12     		asrs	r3, r3, #9
 349 001a 07EE903A 		vmov	s15, r3	@ int
 350 001e F8EEE77A 		vcvt.f32.s32	s15, s15
 351 0022 C7ED037A 		vstr.32	s15, [r7, #12]
  89:../Sources/sensors/encoder.c ****   return (int16_t) result;
 352              		.loc 1 89 0
 353 0026 D7ED037A 		vldr.32	s15, [r7, #12]
 354 002a FDEEE77A 		vcvt.s32.f32	s15, s15
 355 002e C7ED017A 		vstr.32	s15, [r7, #4]	@ int
 356 0032 BB88     		ldrh	r3, [r7, #4]	@ movhi
 357 0034 1BB2     		sxth	r3, r3
  90:../Sources/sensors/encoder.c **** }
 358              		.loc 1 90 0
 359 0036 1846     		mov	r0, r3
 360 0038 1437     		adds	r7, r7, #20
 361              		.cfi_def_cfa_offset 4
 362 003a BD46     		mov	sp, r7
 363              		.cfi_def_cfa_register 13
 364              		@ sp needed
 365 003c 5DF8047B 		ldr	r7, [sp], #4
 366              		.cfi_restore 7
 367              		.cfi_def_cfa_offset 0
 368 0040 7047     		bx	lr
 369              	.L26:
 370 0042 00BF     		.align	2
 371              	.L25:
 372 0044 00000000 		.word	ticks10ms
 373              		.cfi_endproc
 374              	.LFE129:
 376              		.section	.text.encodergetRPM,"ax",%progbits
 377              		.align	1
 378              		.global	encodergetRPM
 379              		.syntax unified
 380              		.thumb
 381              		.thumb_func
 382              		.fpu fpv4-sp-d16
 384              	encodergetRPM:
 385              	.LFB130:
  91:../Sources/sensors/encoder.c **** int16_t encodergetRPM()
  92:../Sources/sensors/encoder.c **** {
 386              		.loc 1 92 0
 387              		.cfi_startproc
 388              		@ args = 0, pretend = 0, frame = 16
 389              		@ frame_needed = 1, uses_anonymous_args = 0
 390              		@ link register save eliminated.
 391 0000 80B4     		push	{r7}
 392              		.cfi_def_cfa_offset 4
 393              		.cfi_offset 7, -4
 394 0002 85B0     		sub	sp, sp, #20
 395              		.cfi_def_cfa_offset 24
 396 0004 00AF     		add	r7, sp, #0
 397              		.cfi_def_cfa_register 7
  93:../Sources/sensors/encoder.c ****   float result = ((ticks10ms * 100) / 512) * (60);
 398              		.loc 1 93 0
 399 0006 114B     		ldr	r3, .L30
 400 0008 1B68     		ldr	r3, [r3]
 401 000a 6422     		movs	r2, #100
 402 000c 02FB03F3 		mul	r3, r2, r3
 403 0010 002B     		cmp	r3, #0
 404 0012 01DA     		bge	.L28
 405 0014 03F2FF13 		addw	r3, r3, #511
 406              	.L28:
 407 0018 5B12     		asrs	r3, r3, #9
 408 001a 1A46     		mov	r2, r3
 409 001c 1346     		mov	r3, r2
 410 001e 1B01     		lsls	r3, r3, #4
 411 0020 9B1A     		subs	r3, r3, r2
 412 0022 9B00     		lsls	r3, r3, #2
 413 0024 07EE903A 		vmov	s15, r3	@ int
 414 0028 F8EEE77A 		vcvt.f32.s32	s15, s15
 415 002c C7ED037A 		vstr.32	s15, [r7, #12]
  94:../Sources/sensors/encoder.c ****   return (int16_t) result;
 416              		.loc 1 94 0
 417 0030 D7ED037A 		vldr.32	s15, [r7, #12]
 418 0034 FDEEE77A 		vcvt.s32.f32	s15, s15
 419 0038 C7ED017A 		vstr.32	s15, [r7, #4]	@ int
 420 003c BB88     		ldrh	r3, [r7, #4]	@ movhi
 421 003e 1BB2     		sxth	r3, r3
  95:../Sources/sensors/encoder.c **** }
 422              		.loc 1 95 0
 423 0040 1846     		mov	r0, r3
 424 0042 1437     		adds	r7, r7, #20
 425              		.cfi_def_cfa_offset 4
 426 0044 BD46     		mov	sp, r7
 427              		.cfi_def_cfa_register 13
 428              		@ sp needed
 429 0046 5DF8047B 		ldr	r7, [sp], #4
 430              		.cfi_restore 7
 431              		.cfi_def_cfa_offset 0
 432 004a 7047     		bx	lr
 433              	.L31:
 434              		.align	2
 435              	.L30:
 436 004c 00000000 		.word	ticks10ms
 437              		.cfi_endproc
 438              	.LFE130:
 440              		.section	.text.encodergetSpeedmmps,"ax",%progbits
 441              		.align	1
 442              		.global	encodergetSpeedmmps
 443              		.syntax unified
 444              		.thumb
 445              		.thumb_func
 446              		.fpu fpv4-sp-d16
 448              	encodergetSpeedmmps:
 449              	.LFB131:
  96:../Sources/sensors/encoder.c **** int16_t encodergetSpeedmmps()
  97:../Sources/sensors/encoder.c **** {
 450              		.loc 1 97 0
 451              		.cfi_startproc
 452              		@ args = 0, pretend = 0, frame = 16
 453              		@ frame_needed = 1, uses_anonymous_args = 0
 454              		@ link register save eliminated.
 455 0000 80B4     		push	{r7}
 456              		.cfi_def_cfa_offset 4
 457              		.cfi_offset 7, -4
 458 0002 85B0     		sub	sp, sp, #20
 459              		.cfi_def_cfa_offset 24
 460 0004 00AF     		add	r7, sp, #0
 461              		.cfi_def_cfa_register 7
  98:../Sources/sensors/encoder.c ****   float result = (((ticks10ms * 100) / 512)) * (15 * 1000 / 35) * 70;
 462              		.loc 1 98 0
 463 0006 174B     		ldr	r3, .L35
 464 0008 1B68     		ldr	r3, [r3]
 465 000a 6422     		movs	r2, #100
 466 000c 02FB03F3 		mul	r3, r2, r3
 467 0010 002B     		cmp	r3, #0
 468 0012 01DA     		bge	.L33
 469 0014 03F2FF13 		addw	r3, r3, #511
 470              	.L33:
 471 0018 5B12     		asrs	r3, r3, #9
 472 001a 1A46     		mov	r2, r3
 473 001c 47F20853 		movw	r3, #29960
 474 0020 03FB02F3 		mul	r3, r3, r2
 475 0024 07EE903A 		vmov	s15, r3	@ int
 476 0028 F8EEE77A 		vcvt.f32.s32	s15, s15
 477 002c C7ED037A 		vstr.32	s15, [r7, #12]
  99:../Sources/sensors/encoder.c ****   float result2 = result / 1000;
 478              		.loc 1 99 0
 479 0030 97ED037A 		vldr.32	s14, [r7, #12]
 480 0034 DFED0C6A 		vldr.32	s13, .L35+4
 481 0038 C7EE267A 		vdiv.f32	s15, s14, s13
 482 003c C7ED027A 		vstr.32	s15, [r7, #8]
 100:../Sources/sensors/encoder.c ****   return (int16_t) (result / 1000);
 483              		.loc 1 100 0
 484 0040 97ED037A 		vldr.32	s14, [r7, #12]
 485 0044 DFED086A 		vldr.32	s13, .L35+4
 486 0048 C7EE267A 		vdiv.f32	s15, s14, s13
 487 004c FDEEE77A 		vcvt.s32.f32	s15, s15
 488 0050 C7ED017A 		vstr.32	s15, [r7, #4]	@ int
 489 0054 BB88     		ldrh	r3, [r7, #4]	@ movhi
 490 0056 1BB2     		sxth	r3, r3
 101:../Sources/sensors/encoder.c **** }
 491              		.loc 1 101 0
 492 0058 1846     		mov	r0, r3
 493 005a 1437     		adds	r7, r7, #20
 494              		.cfi_def_cfa_offset 4
 495 005c BD46     		mov	sp, r7
 496              		.cfi_def_cfa_register 13
 497              		@ sp needed
 498 005e 5DF8047B 		ldr	r7, [sp], #4
 499              		.cfi_restore 7
 500              		.cfi_def_cfa_offset 0
 501 0062 7047     		bx	lr
 502              	.L36:
 503              		.align	2
 504              	.L35:
 505 0064 00000000 		.word	ticks10ms
 506 0068 00007A44 		.word	1148846080
 507              		.cfi_endproc
 508              	.LFE131:
 510              		.section	.text.encodergetSpeedmmps100ms,"ax",%progbits
 511              		.align	1
 512              		.global	encodergetSpeedmmps100ms
 513              		.syntax unified
 514              		.thumb
 515              		.thumb_func
 516              		.fpu fpv4-sp-d16
 518              	encodergetSpeedmmps100ms:
 519              	.LFB132:
 102:../Sources/sensors/encoder.c **** 
 103:../Sources/sensors/encoder.c **** int16_t encodergetSpeedmmps100ms()
 104:../Sources/sensors/encoder.c **** {
 520              		.loc 1 104 0
 521              		.cfi_startproc
 522              		@ args = 0, pretend = 0, frame = 16
 523              		@ frame_needed = 1, uses_anonymous_args = 0
 524              		@ link register save eliminated.
 525 0000 80B4     		push	{r7}
 526              		.cfi_def_cfa_offset 4
 527              		.cfi_offset 7, -4
 528 0002 85B0     		sub	sp, sp, #20
 529              		.cfi_def_cfa_offset 24
 530 0004 00AF     		add	r7, sp, #0
 531              		.cfi_def_cfa_register 7
 105:../Sources/sensors/encoder.c ****   float result = (((ticks100ms * 1) / 512)) * (15 * 1000 / 35) * 70;
 532              		.loc 1 105 0
 533 0006 164B     		ldr	r3, .L40
 534 0008 1B68     		ldr	r3, [r3]
 535 000a 002B     		cmp	r3, #0
 536 000c 01DA     		bge	.L38
 537 000e 03F2FF13 		addw	r3, r3, #511
 538              	.L38:
 539 0012 5B12     		asrs	r3, r3, #9
 540 0014 1A46     		mov	r2, r3
 541 0016 47F20853 		movw	r3, #29960
 542 001a 03FB02F3 		mul	r3, r3, r2
 543 001e 07EE903A 		vmov	s15, r3	@ int
 544 0022 F8EEE77A 		vcvt.f32.s32	s15, s15
 545 0026 C7ED037A 		vstr.32	s15, [r7, #12]
 106:../Sources/sensors/encoder.c ****   float result2 = result / 1000;
 546              		.loc 1 106 0
 547 002a 97ED037A 		vldr.32	s14, [r7, #12]
 548 002e DFED0D6A 		vldr.32	s13, .L40+4
 549 0032 C7EE267A 		vdiv.f32	s15, s14, s13
 550 0036 C7ED027A 		vstr.32	s15, [r7, #8]
 107:../Sources/sensors/encoder.c ****   return (int16_t) (result / 1000);
 551              		.loc 1 107 0
 552 003a 97ED037A 		vldr.32	s14, [r7, #12]
 553 003e DFED096A 		vldr.32	s13, .L40+4
 554 0042 C7EE267A 		vdiv.f32	s15, s14, s13
 555 0046 FDEEE77A 		vcvt.s32.f32	s15, s15
 556 004a C7ED017A 		vstr.32	s15, [r7, #4]	@ int
 557 004e BB88     		ldrh	r3, [r7, #4]	@ movhi
 558 0050 1BB2     		sxth	r3, r3
 108:../Sources/sensors/encoder.c **** }
 559              		.loc 1 108 0
 560 0052 1846     		mov	r0, r3
 561 0054 1437     		adds	r7, r7, #20
 562              		.cfi_def_cfa_offset 4
 563 0056 BD46     		mov	sp, r7
 564              		.cfi_def_cfa_register 13
 565              		@ sp needed
 566 0058 5DF8047B 		ldr	r7, [sp], #4
 567              		.cfi_restore 7
 568              		.cfi_def_cfa_offset 0
 569 005c 7047     		bx	lr
 570              	.L41:
 571 005e 00BF     		.align	2
 572              	.L40:
 573 0060 00000000 		.word	ticks100ms
 574 0064 00007A44 		.word	1148846080
 575              		.cfi_endproc
 576              	.LFE132:
 578              		.section	.rodata
 579              		.align	2
 580              	.LC0:
 581 0000 72706D00 		.ascii	"rpm\000"
 582              		.align	2
 583              	.LC1:
 584 0004 00       		.ascii	"\000"
 585              		.section	.text.encoderParseCommand,"ax",%progbits
 586              		.align	1
 587              		.global	encoderParseCommand
 588              		.syntax unified
 589              		.thumb
 590              		.thumb_func
 591              		.fpu fpv4-sp-d16
 593              	encoderParseCommand:
 594              	.LFB133:
 109:../Sources/sensors/encoder.c **** 
 110:../Sources/sensors/encoder.c **** 
 111:../Sources/sensors/encoder.c **** tError encoderParseCommand(const unsigned char *cmd)
 112:../Sources/sensors/encoder.c **** {
 595              		.loc 1 112 0
 596              		.cfi_startproc
 597              		@ args = 0, pretend = 0, frame = 16
 598              		@ frame_needed = 1, uses_anonymous_args = 0
 599 0000 80B5     		push	{r7, lr}
 600              		.cfi_def_cfa_offset 8
 601              		.cfi_offset 7, -8
 602              		.cfi_offset 14, -4
 603 0002 84B0     		sub	sp, sp, #16
 604              		.cfi_def_cfa_offset 24
 605 0004 00AF     		add	r7, sp, #0
 606              		.cfi_def_cfa_register 7
 607 0006 7860     		str	r0, [r7, #4]
 113:../Sources/sensors/encoder.c ****   tError result = EC_INVALID_ARG;
 608              		.loc 1 113 0
 609 0008 0323     		movs	r3, #3
 610 000a FB73     		strb	r3, [r7, #15]
 114:../Sources/sensors/encoder.c **** 
 115:../Sources/sensors/encoder.c ****   if (strcmp(cmd, "rpm") == 0)
 611              		.loc 1 115 0
 612 000c 1E49     		ldr	r1, .L45
 613 000e 7868     		ldr	r0, [r7, #4]
 614 0010 FFF7FEFF 		bl	strcmp
 615 0014 0346     		mov	r3, r0
 616 0016 002B     		cmp	r3, #0
 617 0018 30D1     		bne	.L43
 618              	.LBB2:
 116:../Sources/sensors/encoder.c ****   {
 117:../Sources/sensors/encoder.c ****     int16_t rpm[2];
 118:../Sources/sensors/encoder.c ****     rpm[1] = encodergetRPS() / 1000;
 619              		.loc 1 118 0
 620 001a FFF7FEFF 		bl	encodergetRPS
 621 001e 0346     		mov	r3, r0
 622 0020 1A4A     		ldr	r2, .L45+4
 623 0022 82FB0312 		smull	r1, r2, r2, r3
 624 0026 9211     		asrs	r2, r2, #6
 625 0028 DB17     		asrs	r3, r3, #31
 626 002a D31A     		subs	r3, r2, r3
 627 002c 1BB2     		sxth	r3, r3
 628 002e 7B81     		strh	r3, [r7, #10]	@ movhi
 119:../Sources/sensors/encoder.c ****     rpm[0] = encodergetRPS() - (rpm[1] * 1000);
 629              		.loc 1 119 0
 630 0030 FFF7FEFF 		bl	encodergetRPS
 631 0034 0346     		mov	r3, r0
 632 0036 9AB2     		uxth	r2, r3
 633 0038 B7F90A30 		ldrsh	r3, [r7, #10]
 634 003c 9BB2     		uxth	r3, r3
 635 003e 1946     		mov	r1, r3	@ movhi
 636 0040 8901     		lsls	r1, r1, #6
 637 0042 C91A     		subs	r1, r1, r3
 638 0044 8901     		lsls	r1, r1, #6
 639 0046 1944     		add	r1, r1, r3
 640 0048 4900     		lsls	r1, r1, #1
 641 004a 0B44     		add	r3, r3, r1
 642 004c DB00     		lsls	r3, r3, #3
 643 004e 9BB2     		uxth	r3, r3
 644 0050 1344     		add	r3, r3, r2
 645 0052 9BB2     		uxth	r3, r3
 646 0054 1BB2     		sxth	r3, r3
 647 0056 3B81     		strh	r3, [r7, #8]	@ movhi
 120:../Sources/sensors/encoder.c **** 
 121:../Sources/sensors/encoder.c ****     termWriteNum16s(rpm[1]);
 648              		.loc 1 121 0
 649 0058 B7F90A30 		ldrsh	r3, [r7, #10]
 650 005c 1846     		mov	r0, r3
 651 005e FFF7FEFF 		bl	termWriteNum16s
 122:../Sources/sensors/encoder.c ****     termWriteChar('.');
 652              		.loc 1 122 0
 653 0062 2E20     		movs	r0, #46
 654 0064 FFF7FEFF 		bl	termWriteChar
 123:../Sources/sensors/encoder.c ****     termWriteNum16s(rpm[0]);
 655              		.loc 1 123 0
 656 0068 B7F90830 		ldrsh	r3, [r7, #8]
 657 006c 1846     		mov	r0, r3
 658 006e FFF7FEFF 		bl	termWriteNum16s
 124:../Sources/sensors/encoder.c ****     termWriteLine("");
 659              		.loc 1 124 0
 660 0072 0748     		ldr	r0, .L45+8
 661 0074 FFF7FEFF 		bl	termWriteLine
 125:../Sources/sensors/encoder.c **** 
 126:../Sources/sensors/encoder.c ****     result = EC_SUCCESS;
 662              		.loc 1 126 0
 663 0078 0023     		movs	r3, #0
 664 007a FB73     		strb	r3, [r7, #15]
 665              	.L43:
 666              	.LBE2:
 127:../Sources/sensors/encoder.c ****   }
 128:../Sources/sensors/encoder.c **** 
 129:../Sources/sensors/encoder.c ****   return result;
 667              		.loc 1 129 0
 668 007c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 130:../Sources/sensors/encoder.c **** }
 669              		.loc 1 130 0
 670 007e 1846     		mov	r0, r3
 671 0080 1037     		adds	r7, r7, #16
 672              		.cfi_def_cfa_offset 8
 673 0082 BD46     		mov	sp, r7
 674              		.cfi_def_cfa_register 13
 675              		@ sp needed
 676 0084 80BD     		pop	{r7, pc}
 677              	.L46:
 678 0086 00BF     		.align	2
 679              	.L45:
 680 0088 00000000 		.word	.LC0
 681 008c D34D6210 		.word	274877907
 682 0090 04000000 		.word	.LC1
 683              		.cfi_endproc
 684              	.LFE133:
 686              		.section	.rodata
 687 0005 000000   		.align	2
 688              	.LC2:
 689 0008 73706565 		.ascii	"speed\000"
 689      6400
 690              		.section	.text.encoderInit,"ax",%progbits
 691              		.align	1
 692              		.global	encoderInit
 693              		.syntax unified
 694              		.thumb
 695              		.thumb_func
 696              		.fpu fpv4-sp-d16
 698              	encoderInit:
 699              	.LFB134:
 131:../Sources/sensors/encoder.c **** 
 132:../Sources/sensors/encoder.c **** tError encoderInit()
 133:../Sources/sensors/encoder.c **** {
 700              		.loc 1 133 0
 701              		.cfi_startproc
 702              		@ args = 0, pretend = 0, frame = 0
 703              		@ frame_needed = 1, uses_anonymous_args = 0
 704 0000 80B5     		push	{r7, lr}
 705              		.cfi_def_cfa_offset 8
 706              		.cfi_offset 7, -8
 707              		.cfi_offset 14, -4
 708 0002 00AF     		add	r7, sp, #0
 709              		.cfi_def_cfa_register 7
 134:../Sources/sensors/encoder.c **** 
 135:../Sources/sensors/encoder.c ****   FTM0_C0SC = FTM_CnSC_MSx(1) | FTM_CnSC_ELSx(0)| FTM_CnSC_CHIE(1);
 710              		.loc 1 135 0
 711 0004 074B     		ldr	r3, .L49
 712 0006 5022     		movs	r2, #80
 713 0008 DA60     		str	r2, [r3, #12]
 136:../Sources/sensors/encoder.c ****   //FTM0_C0SC |= FTM_CnSC_CHF(1) | FTM_CnSC_CHIE(1);
 137:../Sources/sensors/encoder.c ****   FTM0_C0V = FTM0CH0_VALUE;
 714              		.loc 1 137 0
 715 000a 064B     		ldr	r3, .L49
 716 000c 40F6C412 		movw	r2, #2500
 717 0010 1A61     		str	r2, [r3, #16]
 138:../Sources/sensors/encoder.c **** 
 139:../Sources/sensors/encoder.c ****   // register terminal command line handler
 140:../Sources/sensors/encoder.c ****   termRegisterCommandLineHandler(&clh, "speed", "", encoderParseCommand);
 718              		.loc 1 140 0
 719 0012 054B     		ldr	r3, .L49+4
 720 0014 054A     		ldr	r2, .L49+8
 721 0016 0649     		ldr	r1, .L49+12
 722 0018 0648     		ldr	r0, .L49+16
 723 001a FFF7FEFF 		bl	termRegisterCommandLineHandler
 141:../Sources/sensors/encoder.c **** 
 142:../Sources/sensors/encoder.c ****   return EC_SUCCESS;
 724              		.loc 1 142 0
 725 001e 0023     		movs	r3, #0
 143:../Sources/sensors/encoder.c **** }
 726              		.loc 1 143 0
 727 0020 1846     		mov	r0, r3
 728 0022 80BD     		pop	{r7, pc}
 729              	.L50:
 730              		.align	2
 731              	.L49:
 732 0024 00800340 		.word	1073971200
 733 0028 00000000 		.word	encoderParseCommand
 734 002c 04000000 		.word	.LC1
 735 0030 08000000 		.word	.LC2
 736 0034 00000000 		.word	clh
 737              		.cfi_endproc
 738              	.LFE134:
 740              		.section	.bss.i.7127,"aw",%nobits
 743              	i.7127:
 744 0000 00       		.space	1
 745              		.section	.bss.getTicks.7129,"aw",%nobits
 748              	getTicks.7129:
 749 0000 00       		.space	1
 750              		.section	.bss.sumticks.7128,"aw",%nobits
 751              		.align	1
 754              	sumticks.7128:
 755 0000 0000     		.space	2
 756              		.text
 757              	.Letext0:
 758              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 759              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 760              		.file 4 "../Includes/core_cm4.h"
 761              		.file 5 "../Includes/system_MK22F51212.h"
 762              		.file 6 "../Includes/MK22F51212.h"
 763              		.file 7 "../Includes/platform.h"
 764              		.file 8 "../Sources/com/term.h"
 765              		.file 9 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 766              		.file 10 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 767              		.file 11 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\lib\\gcc\\arm-none-ea
 768              		.file 12 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
DEFINED SYMBOLS
                            *ABS*:00000000 encoder.c
C:\Users\Blub\AppData\Local\Temp\ccsgKoDD.s:18     .bss.clh:00000000 $d
C:\Users\Blub\AppData\Local\Temp\ccsgKoDD.s:21     .bss.clh:00000000 clh
                            *COM*:00000004 ticks10ms
                            *COM*:00000004 ticks100ms
C:\Users\Blub\AppData\Local\Temp\ccsgKoDD.s:26     .bss.ticks:00000000 $d
C:\Users\Blub\AppData\Local\Temp\ccsgKoDD.s:29     .bss.ticks:00000000 ticks
C:\Users\Blub\AppData\Local\Temp\ccsgKoDD.s:32     .bss.oldticks:00000000 $d
C:\Users\Blub\AppData\Local\Temp\ccsgKoDD.s:35     .bss.oldticks:00000000 oldticks
C:\Users\Blub\AppData\Local\Temp\ccsgKoDD.s:38     .bss.avgticks:00000000 $d
C:\Users\Blub\AppData\Local\Temp\ccsgKoDD.s:41     .bss.avgticks:00000000 avgticks
C:\Users\Blub\AppData\Local\Temp\ccsgKoDD.s:44     .bss.oldavgticks:00000000 $d
C:\Users\Blub\AppData\Local\Temp\ccsgKoDD.s:47     .bss.oldavgticks:00000000 oldavgticks
C:\Users\Blub\AppData\Local\Temp\ccsgKoDD.s:50     .text.FTM1TOF_IRQHandler:00000000 $t
C:\Users\Blub\AppData\Local\Temp\ccsgKoDD.s:57     .text.FTM1TOF_IRQHandler:00000000 FTM1TOF_IRQHandler
C:\Users\Blub\AppData\Local\Temp\ccsgKoDD.s:112    .text.FTM1TOF_IRQHandler:00000048 $d
C:\Users\Blub\AppData\Local\Temp\ccsgKoDD.s:118    .text.FTM0CH0_IRQHandler:00000000 $t
C:\Users\Blub\AppData\Local\Temp\ccsgKoDD.s:125    .text.FTM0CH0_IRQHandler:00000000 FTM0CH0_IRQHandler
C:\Users\Blub\AppData\Local\Temp\ccsgKoDD.s:225    .text.FTM0CH0_IRQHandler:00000090 $d
C:\Users\Blub\AppData\Local\Temp\ccsgKoDD.s:743    .bss.i.7127:00000000 i.7127
C:\Users\Blub\AppData\Local\Temp\ccsgKoDD.s:238    .text.encodergetTicks:00000000 $t
C:\Users\Blub\AppData\Local\Temp\ccsgKoDD.s:245    .text.encodergetTicks:00000000 encodergetTicks
C:\Users\Blub\AppData\Local\Temp\ccsgKoDD.s:273    .text.encodergetTicks:00000014 $d
C:\Users\Blub\AppData\Local\Temp\ccsgKoDD.s:278    .text.encodergetTicks10ms:00000000 $t
C:\Users\Blub\AppData\Local\Temp\ccsgKoDD.s:285    .text.encodergetTicks10ms:00000000 encodergetTicks10ms
C:\Users\Blub\AppData\Local\Temp\ccsgKoDD.s:313    .text.encodergetTicks10ms:00000014 $d
C:\Users\Blub\AppData\Local\Temp\ccsgKoDD.s:318    .text.encodergetRPS:00000000 $t
C:\Users\Blub\AppData\Local\Temp\ccsgKoDD.s:325    .text.encodergetRPS:00000000 encodergetRPS
C:\Users\Blub\AppData\Local\Temp\ccsgKoDD.s:372    .text.encodergetRPS:00000044 $d
C:\Users\Blub\AppData\Local\Temp\ccsgKoDD.s:377    .text.encodergetRPM:00000000 $t
C:\Users\Blub\AppData\Local\Temp\ccsgKoDD.s:384    .text.encodergetRPM:00000000 encodergetRPM
C:\Users\Blub\AppData\Local\Temp\ccsgKoDD.s:436    .text.encodergetRPM:0000004c $d
C:\Users\Blub\AppData\Local\Temp\ccsgKoDD.s:441    .text.encodergetSpeedmmps:00000000 $t
C:\Users\Blub\AppData\Local\Temp\ccsgKoDD.s:448    .text.encodergetSpeedmmps:00000000 encodergetSpeedmmps
C:\Users\Blub\AppData\Local\Temp\ccsgKoDD.s:505    .text.encodergetSpeedmmps:00000064 $d
C:\Users\Blub\AppData\Local\Temp\ccsgKoDD.s:511    .text.encodergetSpeedmmps100ms:00000000 $t
C:\Users\Blub\AppData\Local\Temp\ccsgKoDD.s:518    .text.encodergetSpeedmmps100ms:00000000 encodergetSpeedmmps100ms
C:\Users\Blub\AppData\Local\Temp\ccsgKoDD.s:573    .text.encodergetSpeedmmps100ms:00000060 $d
C:\Users\Blub\AppData\Local\Temp\ccsgKoDD.s:579    .rodata:00000000 $d
C:\Users\Blub\AppData\Local\Temp\ccsgKoDD.s:586    .text.encoderParseCommand:00000000 $t
C:\Users\Blub\AppData\Local\Temp\ccsgKoDD.s:593    .text.encoderParseCommand:00000000 encoderParseCommand
C:\Users\Blub\AppData\Local\Temp\ccsgKoDD.s:680    .text.encoderParseCommand:00000088 $d
C:\Users\Blub\AppData\Local\Temp\ccsgKoDD.s:691    .text.encoderInit:00000000 $t
C:\Users\Blub\AppData\Local\Temp\ccsgKoDD.s:698    .text.encoderInit:00000000 encoderInit
C:\Users\Blub\AppData\Local\Temp\ccsgKoDD.s:732    .text.encoderInit:00000024 $d
C:\Users\Blub\AppData\Local\Temp\ccsgKoDD.s:744    .bss.i.7127:00000000 $d
C:\Users\Blub\AppData\Local\Temp\ccsgKoDD.s:748    .bss.getTicks.7129:00000000 getTicks.7129
C:\Users\Blub\AppData\Local\Temp\ccsgKoDD.s:749    .bss.getTicks.7129:00000000 $d
C:\Users\Blub\AppData\Local\Temp\ccsgKoDD.s:751    .bss.sumticks.7128:00000000 $d
C:\Users\Blub\AppData\Local\Temp\ccsgKoDD.s:754    .bss.sumticks.7128:00000000 sumticks.7128
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.0.a6d4f739a788c67292a3ea0a48d10bd5
                           .group:00000000 wm4.MK22F51212.h.96.792c303daa596f91c029224edd7c60aa
                           .group:00000000 wm4._newlib_version.h.4.3572908597b70d672d181fc7fc501c19
                           .group:00000000 wm4.features.h.33.cf97d4c9a045ebab6d282f6356e11363
                           .group:00000000 wm4._default_types.h.15.247e5cd201eca3442cbf5404108c4935
                           .group:00000000 wm4._intsup.h.10.cce27fed8484c08a33f522034c30d2b5
                           .group:00000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:00000000 wm4.stdint.h.23.d53047a68f4a85177f80b422d52785ed
                           .group:00000000 wm4.MK22F51212.h.109.eeee73bf5f54e3f06177795004b95e22
                           .group:00000000 wm4.core_cm4.h.43.f75e2f71b2e33f7a3db429cd8b0cae9e
                           .group:00000000 wm4.core_cmInstr.h.39.addda81f1f3453ba31dd54fc5b6fcee8
                           .group:00000000 wm4.core_cmSimd.h.43.c355993beb49ccd10586af5b1cfe5aee
                           .group:00000000 wm4.core_cm4.h.201.a59e218d30e39d114c8962bbad645c74
                           .group:00000000 wm4.system_MK22F51212.h.94.09b5fd63c227fb82ca8c370fba9e2334
                           .group:00000000 wm4.MK22F51212.h.369.5a9c5aa32d240e03ff494f1c769cfadf
                           .group:00000000 wm4.platform.h.20.50ac36c902b95111cd960a53a2ea1ddf
                           .group:00000000 wm4.ftm0.h.17.cec3e0a8843af04be56280b53fe960ea
                           .group:00000000 wm4.ftm1quad.h.17.a83a46b7127ada5dc24fa72f1da2c591
                           .group:00000000 wm4.stddef.h.39.99b5021e28f91cdb161c889e07266673
                           .group:00000000 wm4.newlib.h.8.5f2124c7e712be65f83b91ff86a0b1c1
                           .group:00000000 wm4.config.h.219.65a553ab5bef5482f0d7880b0d33015e
                           .group:00000000 wm4._ansi.h.23.9f8fcfa20193763fcf364fb91705c94b
                           .group:00000000 wm4.lock.h.2.1461d1fff82dffe8bfddc23307f6484f
                           .group:00000000 wm4._types.h.125.5cf8a495f1f7ef36777ad868a1e32068
                           .group:00000000 wm4.stddef.h.161.5349cb105733e8777bfb0cf53c4e3f34
                           .group:00000000 wm4._types.h.183.c226d164ceca1f2ecb9ae9360c54a098
                           .group:00000000 wm4.reent.h.17.23b059516345f8f5abfa01ddc379570f
                           .group:00000000 wm4.cdefs.h.47.776a25dae4205bae6cce27d545bc475b
                           .group:00000000 wm4.string.h.15.dab3980bf35408a4c507182805e2de3a
                           .group:00000000 wm4.stddef.h.161.19e15733342b50ead2919490b095303e
                           .group:00000000 wm4.encoder.h.9.49f8bdf86a745b6412cf7741af60fe56

UNDEFINED SYMBOLS
strcmp
termWriteNum16s
termWriteChar
termWriteLine
termRegisterCommandLineHandler
